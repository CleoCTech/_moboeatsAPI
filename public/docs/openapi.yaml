openapi: 3.0.3
info:
  title: Moboeats
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://moboeats.test'
paths:
  /api/v1/login:
    post:
      summary: 'User API resource'
      operationId: userAPIResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Authentication Management'
      security: []
  /api/v1/orderer/cart:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer Cart'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Cart'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 16
              required:
                - userId
      security: []
  '/api/v1/orderer/cart/{uuid}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer Cart'
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Cart'
      security: []
    parameters:
      -
        in: path
        name: uuid
        description: ''
        example: c3d83d54-b51f-3990-80d3-d4da9979179b
        required: true
        schema:
          type: string
  /api/v1/orderer/cart-items:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer Cart Items Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Cart Items Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                menuId:
                  type: integer
                  description: ''
                  example: 19
                quantity:
                  type: integer
                  description: ''
                  example: 12
                status:
                  type: integer
                  description: ''
                  example: 4
              required:
                - menuId
                - quantity
      security: []
  '/api/v1/orderer/cart-items/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer Cart Items Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Cart Items Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                menuId:
                  type: integer
                  description: ''
                  example: 17
                quantity:
                  type: integer
                  description: ''
                  example: 11
                status:
                  type: integer
                  description: ''
                  example: 9
              required:
                - menuId
                - quantity
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Cart Items Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cart item.'
        example: rerum
        required: true
        schema:
          type: string
  /api/v1/orderer/orders:
    get:
      summary: ''
      operationId: getApiV1OrdererOrders
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer Order Management'
      security: []
    post:
      summary: ''
      operationId: postApiV1OrdererOrders
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Order Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cartId:
                  type: integer
                  description: ''
                  example: 20
                restaurantId:
                  type: integer
                  description: ''
                  example: 5
                delivery:
                  type: boolean
                  description: ''
                  example: true
                delivery_address:
                  type: string
                  description: 'This field is required when <code>delivery</code> is <code>true</code>.'
                  example: null
                delivery_location_lat:
                  type: string
                  description: 'This field is required when <code>delivery</code> is <code>true</code>.'
                  example: null
                delivery_location_lng:
                  type: string
                  description: 'This field is required when <code>delivery</code> is <code>true</code>.'
                  example: null
                booking_time:
                  type: string
                  description: 'This field is required when <code>delivery</code> is <code>false</code>.  Must be a valid date in the format <code>Y-m-d H:i</code>. Must be a date after <code>2024-02-18 09:00:24</code>.'
                  example: '2039-08-01'
              required:
                - restaurantId
                - delivery
      security: []
  '/api/v1/orderer/orders/{uuid}':
    get:
      summary: ''
      operationId: getApiV1OrdererOrdersUuid
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer Order Management'
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1OrdererOrdersUuid
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Order Management'
      security: []
    parameters:
      -
        in: path
        name: uuid
        description: ''
        example: f3b9c89a-029e-4f50-9325-5414c7dc6c65
        required: true
        schema:
          type: string
  /api/v1/orderer/order/reviews/store:
    post:
      summary: 'Store review for an order'
      operationId: storeReviewForAnOrder
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Order Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: integer
                  description: 'The id of the order'
                  example: 6
                restaurant_rating:
                  type: integer
                  description: 'The rating of the restaurant from 1 - 5'
                  example: 14
                restaurant_review:
                  type: string
                  description: 'A review of the restaurant'
                  example: sit
                rider_rating:
                  type: integer
                  description: 'The rating of the rider from 1 - 5'
                  example: 17
                rider_review:
                  type: string
                  description: 'A review of the rider'
                  example: natus
      security: []
  '/api/v1/restaurant/orders/{uuid}':
    get:
      summary: ''
      operationId: getApiV1RestaurantOrdersUuid
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer Order Management'
      security: []
    put:
      summary: ''
      operationId: putApiV1RestaurantOrdersUuid
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Order Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: ''
                  example: quo
              required:
                - status
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1RestaurantOrdersUuid
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Order Management'
      security: []
    parameters:
      -
        in: path
        name: uuid
        description: ''
        example: f3b9c89a-029e-4f50-9325-5414c7dc6c65
        required: true
        schema:
          type: string
  '/api/v1/restaurant/orders/reservation/{order_uuid}/assign':
    post:
      summary: ''
      operationId: postApiV1RestaurantOrdersReservationOrder_uuidAssign
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Order Management'
      security: []
    parameters:
      -
        in: path
        name: order_uuid
        description: ''
        example: f3b9c89a-029e-4f50-9325-5414c7dc6c65
        required: true
        schema:
          type: string
  '/api/v1/restaurant/orders/reservation/{order_uuid}/status/update':
    post:
      summary: ''
      operationId: postApiV1RestaurantOrdersReservationOrder_uuidStatusUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Order Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>completed</code>, <code>in progress</code>, <code>no show</code>, or <code>cancelled</code>.'
                  example: 'in progress'
              required:
                - status
      security: []
    parameters:
      -
        in: path
        name: order_uuid
        description: ''
        example: f3b9c89a-029e-4f50-9325-5414c7dc6c65
        required: true
        schema:
          type: string
  /api/v1/restaurant/pending-orders:
    get:
      summary: ''
      operationId: getApiV1RestaurantPendingOrders
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer Order Management'
      security: []
  /api/v1/restaurant/pending-dineins:
    get:
      summary: ''
      operationId: getApiV1RestaurantPendingDineins
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer Order Management'
      security: []
  /api/v1/restaurant/orders:
    get:
      summary: ''
      operationId: getApiV1RestaurantOrders
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer Order Management'
      security: []
  '/api/v1/restaurant/orders/{order_uuid}/update':
    post:
      summary: ''
      operationId: postApiV1RestaurantOrdersOrder_uuidUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Order Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: ''
                  example: neque
              required:
                - status
      security: []
    parameters:
      -
        in: path
        name: order_uuid
        description: ''
        example: f3b9c89a-029e-4f50-9325-5414c7dc6c65
        required: true
        schema:
          type: string
  /api/v1/restaurant/orders/assign:
    post:
      summary: ''
      operationId: postApiV1RestaurantOrdersAssign
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Order Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ''
                  example: fugit
                rider_id:
                  type: string
                  description: ''
                  example: rerum
              required:
                - order_id
                - rider_id
      security: []
  /api/v1/restaurant/orders/export/data:
    get:
      summary: ''
      operationId: getApiV1RestaurantOrdersExportData
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer Order Management'
      security: []
  /api/v1/orderer/restaurant-bookmark:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer Restaurants Bookmark Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Restaurants Bookmark Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                restaurantId:
                  type: integer
                  description: ''
                  example: 6
              required:
                - restaurantId
      security: []
  '/api/v1/orderer/restaurant-bookmark/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer Restaurants Bookmark Management'
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Restaurants Bookmark Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the restaurant bookmark.'
        example: sit
        required: true
        schema:
          type: string
  /api/v1/orderer/menu-bookmark:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer menu Bookmark Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer menu Bookmark Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                menuId:
                  type: integer
                  description: ''
                  example: 14
              required:
                - menuId
      security: []
  '/api/v1/orderer/menu-bookmark/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer menu Bookmark Management'
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer menu Bookmark Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the menu bookmark.'
        example: minima
        required: true
        schema:
          type: string
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/register:
    post:
      summary: ''
      operationId: postApiV1Register
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: me
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: carli.torphy@example.com
                password:
                  type: string
                  description: ''
                  example: hic
                userType:
                  type: string
                  description: ''
                  example: non
                otp:
                  type: string
                  description: ''
                  example: null
                image:
                  type: string
                  description: ''
                  example: null
                phoneNo:
                  type: string
                  description: ''
                  example: null
              required:
                - name
                - email
                - password
                - userType
      security: []
  /api/v1/logout:
    post:
      summary: ''
      operationId: postApiV1Logout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/user:
    get:
      summary: ''
      operationId: getApiV1User
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/notifications:
    get:
      summary: ''
      operationId: getApiV1Notifications
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/v1/notifications/{notification}/mark-read':
    get:
      summary: ''
      operationId: getApiV1NotificationsNotificationMarkRead
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: notification
        description: 'The notification.'
        example: quia
        required: true
        schema:
          type: string
  /api/v1/notifications/all/read:
    get:
      summary: ''
      operationId: getApiV1NotificationsAllRead
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/v1/restaurant/{id}/operating-hours':
    get:
      summary: ''
      operationId: getApiV1RestaurantIdOperatingHours
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the restaurant.'
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/restaurant/{uuid}/operating-hours':
    post:
      summary: ''
      operationId: postApiV1RestaurantUuidOperatingHours
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/restaurant/{uuid}/operating-hours/update':
    post:
      summary: ''
      operationId: postApiV1RestaurantUuidOperatingHoursUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                days:
                  type: string
                  description: ''
                  example: atque
                opening_times:
                  type: array
                  description: 'Must be a valid date in the format <code>H:i</code>.'
                  example:
                    - '09:00'
                  items:
                    type: string
                closing_times:
                  type: array
                  description: 'Must be a valid date in the format <code>H:i</code>.'
                  example:
                    - '09:00'
                  items:
                    type: string
              required:
                - days
                - opening_times
                - closing_times
      security: []
    parameters:
      -
        in: path
        name: uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/restaurant/{id}/documents':
    get:
      summary: ''
      operationId: getApiV1RestaurantIdDocuments
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the restaurant.'
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/restaurant/{uuid}/documents/store':
    post:
      summary: ''
      operationId: postApiV1RestaurantUuidDocumentsStore
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                names:
                  type: array
                  description: ''
                  example:
                    - sint
                  items:
                    type: string
                files:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: string
      security: []
    parameters:
      -
        in: path
        name: uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/restaurant/{uuid}/documents/update':
    post:
      summary: ''
      operationId: postApiV1RestaurantUuidDocumentsUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                names:
                  type: array
                  description: ''
                  example:
                    - atque
                  items:
                    type: string
                files:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: string
      security: []
    parameters:
      -
        in: path
        name: uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/restaurant/documents/{id}/download':
    get:
      summary: ''
      operationId: getApiV1RestaurantDocumentsIdDownload
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: soluta
        required: true
        schema:
          type: string
  /api/v1/restaurant/promo-codes:
    get:
      summary: 'Get all the promo codes.'
      operationId: getAllThePromoCodes
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/restaurant/promo-codes/export/data:
    get:
      summary: ''
      operationId: getApiV1RestaurantPromoCodesExportData
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/restaurant/promo-codes/store:
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                restaurant_ids:
                  type: string
                  description: ''
                  example: vitae
                code:
                  type: string
                  description: ''
                  example: alias
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-02-18T09:00:27'
                end_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-02-18T09:00:27'
                type:
                  type: string
                  description: 'Must be one of <code>amount</code> or <code>percentage</code>.'
                  example: amount
                value:
                  type: integer
                  description: ''
                  example: 1
                status:
                  type: string
                  description: 'Must be one of <code>active</code> or <code>inactive</code>.'
                  example: active
              required:
                - restaurant_ids
                - code
                - start_date
                - end_date
                - type
                - value
                - status
      security: []
  '/api/v1/restaurant/promo-codes/{promo_code_id}/update':
    post:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: ''
                  example: quam
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-02-18T09:00:27'
                end_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-02-18T09:00:27'
                type:
                  type: string
                  description: 'Must be one of <code>amount</code> or <code>percentage</code>.'
                  example: percentage
                value:
                  type: integer
                  description: ''
                  example: 7
                status:
                  type: string
                  description: 'Must be one of <code>active</code> or <code>inactive</code>.'
                  example: active
              required:
                - code
                - start_date
                - end_date
                - type
                - value
                - status
      security: []
    parameters:
      -
        in: path
        name: promo_code_id
        description: 'The ID of the promo code.'
        example: 7
        required: true
        schema:
          type: integer
  /api/v1/restaurant/discounts:
    get:
      summary: ''
      operationId: getApiV1RestaurantDiscounts
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/restaurant/discounts/store:
    post:
      summary: ''
      operationId: postApiV1RestaurantDiscountsStore
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                menu_ids:
                  type: string
                  description: ''
                  example: ratione
                type:
                  type: string
                  description: 'Must be one of <code>amount</code> or <code>percentage</code>.'
                  example: amount
                value:
                  type: integer
                  description: ''
                  example: 7
              required:
                - menu_ids
                - type
                - value
      security: []
  '/api/v1/restaurant/discounts/{discount_id}/update':
    post:
      summary: ''
      operationId: postApiV1RestaurantDiscountsDiscount_idUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'Must be one of <code>amount</code> or <code>percentage</code>.'
                  example: percentage
                value:
                  type: integer
                  description: ''
                  example: 17
              required:
                - type
                - value
      security: []
    parameters:
      -
        in: path
        name: discount_id
        description: 'The ID of the discount.'
        example: 11
        required: true
        schema:
          type: integer
  '/api/v1/restaurant/discounts/{discount_id}/delete':
    get:
      summary: ''
      operationId: getApiV1RestaurantDiscountsDiscount_idDelete
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: discount_id
        description: 'The ID of the discount.'
        example: 19
        required: true
        schema:
          type: integer
  /api/v1/admin/login:
    post:
      summary: ''
      operationId: postApiV1AdminLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/admin/dashboard:
    get:
      summary: ''
      operationId: getApiV1AdminDashboard
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/admin/categories:
    get:
      summary: ''
      operationId: getApiV1AdminCategories
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/admin/sub-categories:
    get:
      summary: ''
      operationId: getApiV1AdminSubCategories
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/admin/sub-categories/add:
    post:
      summary: ''
      operationId: postApiV1AdminSubCategoriesAdd
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: string
                  description: ''
                  example: qui
                title:
                  type: string
                  description: ''
                  example: nesciunt
                status:
                  type: integer
                  description: ''
                  example: 18
              required:
                - category_id
                - title
                - status
      security: []
  '/api/v1/admin/sub-categories/update/{id}':
    post:
      summary: ''
      operationId: postApiV1AdminSubCategoriesUpdateId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: aut
              required:
                - title
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the update.'
        example: vero
        required: true
        schema:
          type: string
  '/api/v1/admin/users/{role}':
    get:
      summary: ''
      operationId: getApiV1AdminUsersRole
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: role
        description: ''
        example: 5cd491f9-f272-431f-9427-7f93575e3a70
        required: true
        schema:
          type: string
  '/api/v1/admin/users/customer/{id}/details':
    get:
      summary: ''
      operationId: getApiV1AdminUsersCustomerIdDetails
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer.'
        example: dolor
        required: true
        schema:
          type: string
  '/api/v1/admin/users/restaurant-admin/{id}/details':
    get:
      summary: ''
      operationId: getApiV1AdminUsersRestaurantAdminIdDetails
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the restaurant admin.'
        example: vel
        required: true
        schema:
          type: string
  '/api/v1/admin/users/rider/{id}/details':
    get:
      summary: ''
      operationId: getApiV1AdminUsersRiderIdDetails
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the rider.'
        example: occaecati
        required: true
        schema:
          type: string
  /api/v1/admin/orders:
    get:
      summary: ''
      operationId: getApiV1AdminOrders
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/v1/admin/orders/{order_uuid}/details':
    get:
      summary: ''
      operationId: getApiV1AdminOrdersOrder_uuidDetails
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: order_uuid
        description: ''
        example: f3b9c89a-029e-4f50-9325-5414c7dc6c65
        required: true
        schema:
          type: string
  /api/v1/admin/restaurants:
    get:
      summary: ''
      operationId: getApiV1AdminRestaurants
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/v1/admin/restaurants/{id}':
    get:
      summary: ''
      operationId: getApiV1AdminRestaurantsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the restaurant.'
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/admin/restaurants/{id}/reviews':
    get:
      summary: ''
      operationId: getApiV1AdminRestaurantsIdReviews
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the restaurant.'
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/admin/restaurants/{restaurant_uuid}/status/update':
    post:
      summary: ''
      operationId: postApiV1AdminRestaurantsRestaurant_uuidStatusUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'Must be one of <code>2</code> or <code>3</code>.'
                  example: '3'
                reason:
                  type: string
                  description: 'This field is required when <code>status</code> is <code>3</code>.'
                  example: quia
              required:
                - status
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  /api/v1/admin/payments:
    get:
      summary: ''
      operationId: getApiV1AdminPayments
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/v1/admin/restaurant/{restaurant}':
    get:
      summary: ''
      operationId: getApiV1AdminRestaurantRestaurant
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: restaurant
        description: 'The restaurant.'
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/admin/restaurant/{restaurant_uuid}/payments':
    get:
      summary: ''
      operationId: getApiV1AdminRestaurantRestaurant_uuidPayments
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/admin/restaurant/{restaurant_uuid}/menu':
    get:
      summary: ''
      operationId: getApiV1AdminRestaurantRestaurant_uuidMenu
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/admin/restaurant/{restaurant}/categories':
    get:
      summary: ''
      operationId: getApiV1AdminRestaurantRestaurantCategories
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: restaurant
        description: 'The restaurant.'
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/admin/restaurant/{restaurant_uuid}/orders':
    get:
      summary: ''
      operationId: getApiV1AdminRestaurantRestaurant_uuidOrders
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/admin/restaurant/{restaurant_uuid}/update/service-charge-agreement':
    post:
      summary: ''
      operationId: postApiV1AdminRestaurantRestaurant_uuidUpdateServiceChargeAgreement
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  /api/v1/admin/discounts:
    get:
      summary: ''
      operationId: getApiV1AdminDiscounts
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/admin/logs:
    get:
      summary: ''
      operationId: getApiV1AdminLogs
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/orderer/orderer-food-categories:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Food Categories Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Categories Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: nobis
                description:
                  type: string
                  description: ''
                  example: autem
                status:
                  type: string
                  description: ''
                  example: null
              required:
                - title
                - description
      security: []
  '/api/v1/orderer/orderer-food-categories/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Food Categories Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Categories Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: dicta
                description:
                  type: string
                  description: ''
                  example: soluta
              required:
                - title
                - description
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Categories Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the orderer food category.'
        example: et
        required: true
        schema:
          type: string
  /api/v1/restaurant/food-categories:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Food Categories Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Categories Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: quaerat
                description:
                  type: string
                  description: ''
                  example: sed
                status:
                  type: string
                  description: ''
                  example: null
              required:
                - title
                - description
      security: []
  '/api/v1/restaurant/food-categories/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Food Categories Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Categories Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: dolorum
                description:
                  type: string
                  description: ''
                  example: aperiam
              required:
                - title
                - description
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Categories Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the food category.'
        example: alias
        required: true
        schema:
          type: string
  /api/v1/admin/categories/add:
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Categories Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: enim
                description:
                  type: string
                  description: ''
                  example: enim
                status:
                  type: string
                  description: ''
                  example: null
              required:
                - title
                - description
      security: []
  '/api/v1/admin/categories/update/{id}':
    post:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Categories Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: iure
                description:
                  type: string
                  description: ''
                  example: et
              required:
                - title
                - description
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the update.'
        example: et
        required: true
        schema:
          type: string
  /api/v1/orderer/orderer-food-sub-categories:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Food Sub Categories'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Sub Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: et
                description:
                  type: string
                  description: ''
                  example: accusamus
                status:
                  type: integer
                  description: ''
                  example: 11
                createdBy:
                  type: string
                  description: ''
                  example: optio
                categoryIds:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - title
                - description
                - createdBy
                - categoryIds
      security: []
  '/api/v1/orderer/orderer-food-sub-categories/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Food Sub Categories'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Sub Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: dolorem
                description:
                  type: string
                  description: ''
                  example: eveniet
                status:
                  type: string
                  description: ''
                  example: null
                updatedBy:
                  type: string
                  description: ''
                  example: et
                categoryIds:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - title
                - description
                - updatedBy
                - categoryIds
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Sub Categories'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the orderer food sub category.'
        example: placeat
        required: true
        schema:
          type: string
  /api/v1/restaurant/food-sub-categories:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Food Sub Categories'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Sub Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: est
                description:
                  type: string
                  description: ''
                  example: accusamus
                status:
                  type: integer
                  description: ''
                  example: 8
                createdBy:
                  type: string
                  description: ''
                  example: doloremque
                categoryIds:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - title
                - description
                - createdBy
                - categoryIds
      security: []
  '/api/v1/restaurant/food-sub-categories/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Food Sub Categories'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Sub Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: accusamus
                description:
                  type: string
                  description: ''
                  example: sed
                status:
                  type: string
                  description: ''
                  example: null
                updatedBy:
                  type: string
                  description: ''
                  example: laboriosam
                categoryIds:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - title
                - description
                - updatedBy
                - categoryIds
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Sub Categories'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the food sub category.'
        example: est
        required: true
        schema:
          type: string
  /api/v1/restaurant/food-sub-categories/bulk:
    post:
      summary: ''
      operationId: postApiV1RestaurantFoodSubCategoriesBulk
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Sub Categories'
      security: []
  /api/v1/groceries:
    get:
      summary: 'Get Groceries'
      operationId: getGroceries
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: 'http://moboeats.test/api/v1/groceries?page=1'
                    last: 'http://moboeats.test/api/v1/groceries?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: null
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://moboeats.test/api/v1/groceries?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://moboeats.test/api/v1/groceries'
                    per_page: 10
                    to: null
                    total: 0
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://moboeats.test/api/v1/groceries?page=1'
                      last:
                        type: string
                        example: 'http://moboeats.test/api/v1/groceries?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://moboeats.test/api/v1/groceries?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://moboeats.test/api/v1/groceries'
                      per_page:
                        type: integer
                        example: 10
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
      tags:
        - 'Menu Management'
      security: []
  /api/v1/menu:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: query
          name: categories
          description: 'to fetch categories associated with Menu'
          example: voluptatem
          required: false
          schema:
            type: string
            description: 'to fetch categories associated with Menu'
            example: voluptatem
        -
          in: query
          name: subCategories
          description: 'to fetch categories associated with Menu'
          example: quo
          required: false
          schema:
            type: string
            description: 'to fetch categories associated with Menu'
            example: quo
        -
          in: query
          name: restaurant
          description: 'to fetch restaurant that owns with Menu'
          example: reprehenderit
          required: false
          schema:
            type: string
            description: 'to fetch restaurant that owns with Menu'
            example: reprehenderit
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 13
                      uuid: 5af6c30b-c224-49ca-94dc-9e1c1ebfe50f
                      attributes:
                        title: 'Test 4'
                        description: test
                        createdBy: xicebuvipu@mailinator.com
                        updatedBy: xicebuvipu@mailinator.com
                        status: '2'
                      relationships:
                        categories:
                          -
                            id: 4
                            uuid: 2e166da1-4eda-4d10-86eb-5d87ce5ec583
                            title: 'Dietary Restrictions'
                            description: 'such as vegetarian, vegan, gluten-free, or dairy-free'
                            status: 2
                            createdBy: info@moboeats.com
                            updatedBy: info@moboeats.com
                            image: 'http://moboeats.test/assets/category/default.png'
                            subCategories: []
                        images:
                          -
                            id: 1
                            uuid: 130c1107-b549-4673-b4aa-7025aa153354
                            attributes:
                              imageUrl: /storage/app/public/menus/images/f-65d105fbb2304.png
                              sequence: 1
                              status: '2'
                            relationships:
                              menu:
                                id: 13
                                uuid: 5af6c30b-c224-49ca-94dc-9e1c1ebfe50f
                                title: 'Test 4'
                          -
                            id: 2
                            uuid: 8b20691e-02ae-413b-ba2a-10bfbdfb26c9
                            attributes:
                              imageUrl: /storage/app/public/menus/images/g-65d105fc4bab6.png
                              sequence: 1
                              status: '2'
                            relationships:
                              menu:
                                id: 13
                                uuid: 5af6c30b-c224-49ca-94dc-9e1c1ebfe50f
                                title: 'Test 4'
                        menuPrices:
                          -
                            id: 9
                            uuid: ae00146c-01b7-42de-848c-0bf45588e7bc
                            attributes:
                              price: 20
                              description: Cheap
                              status: '2'
                            relationships:
                              menu:
                                id: 13
                                uuid: 5af6c30b-c224-49ca-94dc-9e1c1ebfe50f
                                title: 'Test 4'
                        restaurant:
                          id: 22
                          uuid: 9ca5fca9-cf45-4cee-ac7f-79bf4c895b0e
                          attributes:
                            name: 'Ray Durham'
                            nameShort: 'Damon Duke'
                            email: pyku@mailinator.com
                            about: 'Non dolorum aliquid'
                            aboutShort: 'Ut ad ab ut eaque ap'
                            phoneNo: '+1 (643) 614-9329'
                            address: 'Liverpool, UK'
                            city: null
                            state: 'Felicia Delgado'
                            postalCode: 'Burke Vega'
                            latitude: '53.4083714'
                            longitude: '-2.9915726'
                            mapLocation: 'https://maps.google.com/?q=Liverpool,+UK&ftid=0x487adf8a647060b7:0x42dc046f3f176e01'
                            url: rojeqomagu@mailinator.com
                            logo: 'http://moboeats.test/storage/companyLogos/logos/POEGc6HeW9GIgZlGuF3x3fAAlHXwha2SizUwf1k8.png'
                            sitting_capacity: 0
                            denied_reason: ''
                            created_at: '2024-02-17T17:19:38.000000Z'
                            updated_at: '2024-02-17T19:17:22.000000Z'
                            average_rating: 0
                          relationships:
                            orders_count:
                              id: 22
                              uuid: 9ca5fca9-cf45-4cee-ac7f-79bf4c895b0e
                              name: 'Ray Durham'
                              name_short: 'Damon Duke'
                              email: pyku@mailinator.com
                              user_id: 8
                              about: 'Non dolorum aliquid'
                              about_short: 'Ut ad ab ut eaque ap'
                              phone_no: '+1 (643) 614-9329'
                              address: 'Liverpool, UK'
                              city: null
                              state: 'Felicia Delgado'
                              postal_code: 'Burke Vega'
                              latitude: '53.4083714'
                              longitude: '-2.9915726'
                              map_location: 'https://maps.google.com/?q=Liverpool,+UK&ftid=0x487adf8a647060b7:0x42dc046f3f176e01'
                              url: rojeqomagu@mailinator.com
                              logo: 'http://moboeats.test/storage/companyLogos/logos/POEGc6HeW9GIgZlGuF3x3fAAlHXwha2SizUwf1k8.png'
                              status: Approved
                              created_by: null
                              updated_by: null
                              created_at: '2024-02-17T17:19:38.000000Z'
                              updated_at: '2024-02-17T19:17:22.000000Z'
                              sitting_capacity: 0
                              denied_reason: null
                              service_charge_agreement: null
                              groceries_service_charge_agreement: 0
                              paypal_email: fiqux@mailinator.com
                              orders_count: 2
                              menus_count: 1
                              reviews: []
                            menus_count:
                              id: 22
                              uuid: 9ca5fca9-cf45-4cee-ac7f-79bf4c895b0e
                              name: 'Ray Durham'
                              name_short: 'Damon Duke'
                              email: pyku@mailinator.com
                              user_id: 8
                              about: 'Non dolorum aliquid'
                              about_short: 'Ut ad ab ut eaque ap'
                              phone_no: '+1 (643) 614-9329'
                              address: 'Liverpool, UK'
                              city: null
                              state: 'Felicia Delgado'
                              postal_code: 'Burke Vega'
                              latitude: '53.4083714'
                              longitude: '-2.9915726'
                              map_location: 'https://maps.google.com/?q=Liverpool,+UK&ftid=0x487adf8a647060b7:0x42dc046f3f176e01'
                              url: rojeqomagu@mailinator.com
                              logo: 'http://moboeats.test/storage/companyLogos/logos/POEGc6HeW9GIgZlGuF3x3fAAlHXwha2SizUwf1k8.png'
                              status: Approved
                              created_by: null
                              updated_by: null
                              created_at: '2024-02-17T17:19:38.000000Z'
                              updated_at: '2024-02-17T19:17:22.000000Z'
                              sitting_capacity: 0
                              denied_reason: null
                              service_charge_agreement: null
                              groceries_service_charge_agreement: 0
                              paypal_email: fiqux@mailinator.com
                              orders_count: 2
                              menus_count: 1
                              reviews: []
                            reviews: []
                        discount: null
                  links:
                    first: 'http://moboeats.test/api/v1/menu?page=1'
                    last: 'http://moboeats.test/api/v1/menu?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://moboeats.test/api/v1/menu?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://moboeats.test/api/v1/menu'
                    per_page: 15
                    to: 1
                    total: 1
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 13
                        uuid: 5af6c30b-c224-49ca-94dc-9e1c1ebfe50f
                        attributes:
                          title: 'Test 4'
                          description: test
                          createdBy: xicebuvipu@mailinator.com
                          updatedBy: xicebuvipu@mailinator.com
                          status: '2'
                        relationships:
                          categories:
                            -
                              id: 4
                              uuid: 2e166da1-4eda-4d10-86eb-5d87ce5ec583
                              title: 'Dietary Restrictions'
                              description: 'such as vegetarian, vegan, gluten-free, or dairy-free'
                              status: 2
                              createdBy: info@moboeats.com
                              updatedBy: info@moboeats.com
                              image: 'http://moboeats.test/assets/category/default.png'
                              subCategories: []
                          images:
                            -
                              id: 1
                              uuid: 130c1107-b549-4673-b4aa-7025aa153354
                              attributes:
                                imageUrl: /storage/app/public/menus/images/f-65d105fbb2304.png
                                sequence: 1
                                status: '2'
                              relationships:
                                menu:
                                  id: 13
                                  uuid: 5af6c30b-c224-49ca-94dc-9e1c1ebfe50f
                                  title: 'Test 4'
                            -
                              id: 2
                              uuid: 8b20691e-02ae-413b-ba2a-10bfbdfb26c9
                              attributes:
                                imageUrl: /storage/app/public/menus/images/g-65d105fc4bab6.png
                                sequence: 1
                                status: '2'
                              relationships:
                                menu:
                                  id: 13
                                  uuid: 5af6c30b-c224-49ca-94dc-9e1c1ebfe50f
                                  title: 'Test 4'
                          menuPrices:
                            -
                              id: 9
                              uuid: ae00146c-01b7-42de-848c-0bf45588e7bc
                              attributes:
                                price: 20
                                description: Cheap
                                status: '2'
                              relationships:
                                menu:
                                  id: 13
                                  uuid: 5af6c30b-c224-49ca-94dc-9e1c1ebfe50f
                                  title: 'Test 4'
                          restaurant:
                            id: 22
                            uuid: 9ca5fca9-cf45-4cee-ac7f-79bf4c895b0e
                            attributes:
                              name: 'Ray Durham'
                              nameShort: 'Damon Duke'
                              email: pyku@mailinator.com
                              about: 'Non dolorum aliquid'
                              aboutShort: 'Ut ad ab ut eaque ap'
                              phoneNo: '+1 (643) 614-9329'
                              address: 'Liverpool, UK'
                              city: null
                              state: 'Felicia Delgado'
                              postalCode: 'Burke Vega'
                              latitude: '53.4083714'
                              longitude: '-2.9915726'
                              mapLocation: 'https://maps.google.com/?q=Liverpool,+UK&ftid=0x487adf8a647060b7:0x42dc046f3f176e01'
                              url: rojeqomagu@mailinator.com
                              logo: 'http://moboeats.test/storage/companyLogos/logos/POEGc6HeW9GIgZlGuF3x3fAAlHXwha2SizUwf1k8.png'
                              sitting_capacity: 0
                              denied_reason: ''
                              created_at: '2024-02-17T17:19:38.000000Z'
                              updated_at: '2024-02-17T19:17:22.000000Z'
                              average_rating: 0
                            relationships:
                              orders_count:
                                id: 22
                                uuid: 9ca5fca9-cf45-4cee-ac7f-79bf4c895b0e
                                name: 'Ray Durham'
                                name_short: 'Damon Duke'
                                email: pyku@mailinator.com
                                user_id: 8
                                about: 'Non dolorum aliquid'
                                about_short: 'Ut ad ab ut eaque ap'
                                phone_no: '+1 (643) 614-9329'
                                address: 'Liverpool, UK'
                                city: null
                                state: 'Felicia Delgado'
                                postal_code: 'Burke Vega'
                                latitude: '53.4083714'
                                longitude: '-2.9915726'
                                map_location: 'https://maps.google.com/?q=Liverpool,+UK&ftid=0x487adf8a647060b7:0x42dc046f3f176e01'
                                url: rojeqomagu@mailinator.com
                                logo: 'http://moboeats.test/storage/companyLogos/logos/POEGc6HeW9GIgZlGuF3x3fAAlHXwha2SizUwf1k8.png'
                                status: Approved
                                created_by: null
                                updated_by: null
                                created_at: '2024-02-17T17:19:38.000000Z'
                                updated_at: '2024-02-17T19:17:22.000000Z'
                                sitting_capacity: 0
                                denied_reason: null
                                service_charge_agreement: null
                                groceries_service_charge_agreement: 0
                                paypal_email: fiqux@mailinator.com
                                orders_count: 2
                                menus_count: 1
                                reviews: []
                              menus_count:
                                id: 22
                                uuid: 9ca5fca9-cf45-4cee-ac7f-79bf4c895b0e
                                name: 'Ray Durham'
                                name_short: 'Damon Duke'
                                email: pyku@mailinator.com
                                user_id: 8
                                about: 'Non dolorum aliquid'
                                about_short: 'Ut ad ab ut eaque ap'
                                phone_no: '+1 (643) 614-9329'
                                address: 'Liverpool, UK'
                                city: null
                                state: 'Felicia Delgado'
                                postal_code: 'Burke Vega'
                                latitude: '53.4083714'
                                longitude: '-2.9915726'
                                map_location: 'https://maps.google.com/?q=Liverpool,+UK&ftid=0x487adf8a647060b7:0x42dc046f3f176e01'
                                url: rojeqomagu@mailinator.com
                                logo: 'http://moboeats.test/storage/companyLogos/logos/POEGc6HeW9GIgZlGuF3x3fAAlHXwha2SizUwf1k8.png'
                                status: Approved
                                created_by: null
                                updated_by: null
                                created_at: '2024-02-17T17:19:38.000000Z'
                                updated_at: '2024-02-17T19:17:22.000000Z'
                                sitting_capacity: 0
                                denied_reason: null
                                service_charge_agreement: null
                                groceries_service_charge_agreement: 0
                                paypal_email: fiqux@mailinator.com
                                orders_count: 2
                                menus_count: 1
                                reviews: []
                              reviews: []
                          discount: null
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 13
                        uuid:
                          type: string
                          example: 5af6c30b-c224-49ca-94dc-9e1c1ebfe50f
                        attributes:
                          type: object
                          properties:
                            title:
                              type: string
                              example: 'Test 4'
                            description:
                              type: string
                              example: test
                            createdBy:
                              type: string
                              example: xicebuvipu@mailinator.com
                            updatedBy:
                              type: string
                              example: xicebuvipu@mailinator.com
                            status:
                              type: string
                              example: '2'
                        relationships:
                          type: object
                          properties:
                            categories:
                              type: array
                              example:
                                -
                                  id: 4
                                  uuid: 2e166da1-4eda-4d10-86eb-5d87ce5ec583
                                  title: 'Dietary Restrictions'
                                  description: 'such as vegetarian, vegan, gluten-free, or dairy-free'
                                  status: 2
                                  createdBy: info@moboeats.com
                                  updatedBy: info@moboeats.com
                                  image: 'http://moboeats.test/assets/category/default.png'
                                  subCategories: []
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    example: 4
                                  uuid:
                                    type: string
                                    example: 2e166da1-4eda-4d10-86eb-5d87ce5ec583
                                  title:
                                    type: string
                                    example: 'Dietary Restrictions'
                                  description:
                                    type: string
                                    example: 'such as vegetarian, vegan, gluten-free, or dairy-free'
                                  status:
                                    type: integer
                                    example: 2
                                  createdBy:
                                    type: string
                                    example: info@moboeats.com
                                  updatedBy:
                                    type: string
                                    example: info@moboeats.com
                                  image:
                                    type: string
                                    example: 'http://moboeats.test/assets/category/default.png'
                                  subCategories:
                                    type: array
                                    example: []
                            images:
                              type: array
                              example:
                                -
                                  id: 1
                                  uuid: 130c1107-b549-4673-b4aa-7025aa153354
                                  attributes:
                                    imageUrl: /storage/app/public/menus/images/f-65d105fbb2304.png
                                    sequence: 1
                                    status: '2'
                                  relationships:
                                    menu:
                                      id: 13
                                      uuid: 5af6c30b-c224-49ca-94dc-9e1c1ebfe50f
                                      title: 'Test 4'
                                -
                                  id: 2
                                  uuid: 8b20691e-02ae-413b-ba2a-10bfbdfb26c9
                                  attributes:
                                    imageUrl: /storage/app/public/menus/images/g-65d105fc4bab6.png
                                    sequence: 1
                                    status: '2'
                                  relationships:
                                    menu:
                                      id: 13
                                      uuid: 5af6c30b-c224-49ca-94dc-9e1c1ebfe50f
                                      title: 'Test 4'
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    example: 1
                                  uuid:
                                    type: string
                                    example: 130c1107-b549-4673-b4aa-7025aa153354
                                  attributes:
                                    type: object
                                    properties:
                                      imageUrl: { type: string, example: /storage/app/public/menus/images/f-65d105fbb2304.png }
                                      sequence: { type: integer, example: 1 }
                                      status: { type: string, example: '2' }
                                  relationships:
                                    type: object
                                    properties:
                                      menu: { type: object, properties: { id: { type: integer, example: 13 }, uuid: { type: string, example: 5af6c30b-c224-49ca-94dc-9e1c1ebfe50f }, title: { type: string, example: 'Test 4' } } }
                            menuPrices:
                              type: array
                              example:
                                -
                                  id: 9
                                  uuid: ae00146c-01b7-42de-848c-0bf45588e7bc
                                  attributes:
                                    price: 20
                                    description: Cheap
                                    status: '2'
                                  relationships:
                                    menu:
                                      id: 13
                                      uuid: 5af6c30b-c224-49ca-94dc-9e1c1ebfe50f
                                      title: 'Test 4'
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    example: 9
                                  uuid:
                                    type: string
                                    example: ae00146c-01b7-42de-848c-0bf45588e7bc
                                  attributes:
                                    type: object
                                    properties:
                                      price: { type: integer, example: 20 }
                                      description: { type: string, example: Cheap }
                                      status: { type: string, example: '2' }
                                  relationships:
                                    type: object
                                    properties:
                                      menu: { type: object, properties: { id: { type: integer, example: 13 }, uuid: { type: string, example: 5af6c30b-c224-49ca-94dc-9e1c1ebfe50f }, title: { type: string, example: 'Test 4' } } }
                            restaurant:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 22
                                uuid:
                                  type: string
                                  example: 9ca5fca9-cf45-4cee-ac7f-79bf4c895b0e
                                attributes:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                      example: 'Ray Durham'
                                    nameShort:
                                      type: string
                                      example: 'Damon Duke'
                                    email:
                                      type: string
                                      example: pyku@mailinator.com
                                    about:
                                      type: string
                                      example: 'Non dolorum aliquid'
                                    aboutShort:
                                      type: string
                                      example: 'Ut ad ab ut eaque ap'
                                    phoneNo:
                                      type: string
                                      example: '+1 (643) 614-9329'
                                    address:
                                      type: string
                                      example: 'Liverpool, UK'
                                    city:
                                      type: string
                                      example: null
                                    state:
                                      type: string
                                      example: 'Felicia Delgado'
                                    postalCode:
                                      type: string
                                      example: 'Burke Vega'
                                    latitude:
                                      type: string
                                      example: '53.4083714'
                                    longitude:
                                      type: string
                                      example: '-2.9915726'
                                    mapLocation:
                                      type: string
                                      example: 'https://maps.google.com/?q=Liverpool,+UK&ftid=0x487adf8a647060b7:0x42dc046f3f176e01'
                                    url:
                                      type: string
                                      example: rojeqomagu@mailinator.com
                                    logo:
                                      type: string
                                      example: 'http://moboeats.test/storage/companyLogos/logos/POEGc6HeW9GIgZlGuF3x3fAAlHXwha2SizUwf1k8.png'
                                    sitting_capacity:
                                      type: integer
                                      example: 0
                                    denied_reason:
                                      type: string
                                      example: ''
                                    created_at:
                                      type: string
                                      example: '2024-02-17T17:19:38.000000Z'
                                    updated_at:
                                      type: string
                                      example: '2024-02-17T19:17:22.000000Z'
                                    average_rating:
                                      type: integer
                                      example: 0
                                relationships:
                                  type: object
                                  properties:
                                    orders_count:
                                      type: object
                                      properties: { id: { type: integer, example: 22 }, uuid: { type: string, example: 9ca5fca9-cf45-4cee-ac7f-79bf4c895b0e }, name: { type: string, example: 'Ray Durham' }, name_short: { type: string, example: 'Damon Duke' }, email: { type: string, example: pyku@mailinator.com }, user_id: { type: integer, example: 8 }, about: { type: string, example: 'Non dolorum aliquid' }, about_short: { type: string, example: 'Ut ad ab ut eaque ap' }, phone_no: { type: string, example: '+1 (643) 614-9329' }, address: { type: string, example: 'Liverpool, UK' }, city: { type: string, example: null }, state: { type: string, example: 'Felicia Delgado' }, postal_code: { type: string, example: 'Burke Vega' }, latitude: { type: string, example: '53.4083714' }, longitude: { type: string, example: '-2.9915726' }, map_location: { type: string, example: 'https://maps.google.com/?q=Liverpool,+UK&ftid=0x487adf8a647060b7:0x42dc046f3f176e01' }, url: { type: string, example: rojeqomagu@mailinator.com }, logo: { type: string, example: 'http://moboeats.test/storage/companyLogos/logos/POEGc6HeW9GIgZlGuF3x3fAAlHXwha2SizUwf1k8.png' }, status: { type: string, example: Approved }, created_by: { type: string, example: null }, updated_by: { type: string, example: null }, created_at: { type: string, example: '2024-02-17T17:19:38.000000Z' }, updated_at: { type: string, example: '2024-02-17T19:17:22.000000Z' }, sitting_capacity: { type: integer, example: 0 }, denied_reason: { type: string, example: null }, service_charge_agreement: { type: string, example: null }, groceries_service_charge_agreement: { type: integer, example: 0 }, paypal_email: { type: string, example: fiqux@mailinator.com }, orders_count: { type: integer, example: 2 }, menus_count: { type: integer, example: 1 }, reviews: { type: array, example: [] } }
                                    menus_count:
                                      type: object
                                      properties: { id: { type: integer, example: 22 }, uuid: { type: string, example: 9ca5fca9-cf45-4cee-ac7f-79bf4c895b0e }, name: { type: string, example: 'Ray Durham' }, name_short: { type: string, example: 'Damon Duke' }, email: { type: string, example: pyku@mailinator.com }, user_id: { type: integer, example: 8 }, about: { type: string, example: 'Non dolorum aliquid' }, about_short: { type: string, example: 'Ut ad ab ut eaque ap' }, phone_no: { type: string, example: '+1 (643) 614-9329' }, address: { type: string, example: 'Liverpool, UK' }, city: { type: string, example: null }, state: { type: string, example: 'Felicia Delgado' }, postal_code: { type: string, example: 'Burke Vega' }, latitude: { type: string, example: '53.4083714' }, longitude: { type: string, example: '-2.9915726' }, map_location: { type: string, example: 'https://maps.google.com/?q=Liverpool,+UK&ftid=0x487adf8a647060b7:0x42dc046f3f176e01' }, url: { type: string, example: rojeqomagu@mailinator.com }, logo: { type: string, example: 'http://moboeats.test/storage/companyLogos/logos/POEGc6HeW9GIgZlGuF3x3fAAlHXwha2SizUwf1k8.png' }, status: { type: string, example: Approved }, created_by: { type: string, example: null }, updated_by: { type: string, example: null }, created_at: { type: string, example: '2024-02-17T17:19:38.000000Z' }, updated_at: { type: string, example: '2024-02-17T19:17:22.000000Z' }, sitting_capacity: { type: integer, example: 0 }, denied_reason: { type: string, example: null }, service_charge_agreement: { type: string, example: null }, groceries_service_charge_agreement: { type: integer, example: 0 }, paypal_email: { type: string, example: fiqux@mailinator.com }, orders_count: { type: integer, example: 2 }, menus_count: { type: integer, example: 1 }, reviews: { type: array, example: [] } }
                                    reviews:
                                      type: array
                                      example: []
                            discount:
                              type: string
                              example: null
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://moboeats.test/api/v1/menu?page=1'
                      last:
                        type: string
                        example: 'http://moboeats.test/api/v1/menu?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://moboeats.test/api/v1/menu?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://moboeats.test/api/v1/menu'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 1
                      total:
                        type: integer
                        example: 1
      tags:
        - 'Menu Management'
      security: []
  /api/v1/orderer/groceries:
    get:
      summary: 'Get Groceries'
      operationId: getGroceries
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Menu Management'
      security: []
  '/api/v1/orderer/orderer-restaurants/{restaurant}/menu':
    get:
      summary: 'Get Restaurant Menu'
      operationId: getRestaurantMenu
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Menu Management'
      security: []
    parameters:
      -
        in: path
        name: restaurant
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
  /api/v1/orderer/orderer-menu:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: query
          name: categories
          description: 'to fetch categories associated with Menu'
          example: libero
          required: false
          schema:
            type: string
            description: 'to fetch categories associated with Menu'
            example: libero
        -
          in: query
          name: subCategories
          description: 'to fetch categories associated with Menu'
          example: minima
          required: false
          schema:
            type: string
            description: 'to fetch categories associated with Menu'
            example: minima
        -
          in: query
          name: restaurant
          description: 'to fetch restaurant that owns with Menu'
          example: laudantium
          required: false
          schema:
            type: string
            description: 'to fetch restaurant that owns with Menu'
            example: laudantium
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Menu Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: maxime
                description:
                  type: string
                  description: ''
                  example: molestiae
                status:
                  type: integer
                  description: ''
                  example: 3
                categoryIds:
                  type: array
                  description: ''
                  example:
                    - 9
                  items:
                    type: integer
              required:
                - title
                - description
      security: []
  '/api/v1/orderer/orderer-menu/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Menu Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: id
                description:
                  type: string
                  description: ''
                  example: tempore
                status:
                  type: integer
                  description: ''
                  example: 14
                categoryIds:
                  type: array
                  description: ''
                  example:
                    - 1
                  items:
                    type: integer
              required:
                - title
                - description
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the orderer menu.'
        example: magnam
        required: true
        schema:
          type: string
  /api/v1/restaurant/menu:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: query
          name: categories
          description: 'to fetch categories associated with Menu'
          example: corporis
          required: false
          schema:
            type: string
            description: 'to fetch categories associated with Menu'
            example: corporis
        -
          in: query
          name: subCategories
          description: 'to fetch categories associated with Menu'
          example: iste
          required: false
          schema:
            type: string
            description: 'to fetch categories associated with Menu'
            example: iste
        -
          in: query
          name: restaurant
          description: 'to fetch restaurant that owns with Menu'
          example: qui
          required: false
          schema:
            type: string
            description: 'to fetch restaurant that owns with Menu'
            example: qui
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Menu Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: nam
                description:
                  type: string
                  description: ''
                  example: a
                status:
                  type: integer
                  description: ''
                  example: 13
                categoryIds:
                  type: array
                  description: ''
                  example:
                    - 10
                  items:
                    type: integer
              required:
                - title
                - description
      security: []
  '/api/v1/restaurant/menu/{uuid}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Menu Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: et
                description:
                  type: string
                  description: ''
                  example: nulla
                status:
                  type: integer
                  description: ''
                  example: 6
                categoryIds:
                  type: array
                  description: ''
                  example:
                    - 5
                  items:
                    type: integer
              required:
                - title
                - description
      security: []
    parameters:
      -
        in: path
        name: uuid
        description: ''
        example: e86aa007-66ba-4a51-88c9-53f0c21f0e3b
        required: true
        schema:
          type: string
  /api/v1/restaurant/groceries:
    get:
      summary: 'Get Groceries'
      operationId: getGroceries
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Menu Management'
      security: []
  /api/v1/restaurant/groceries/export/data:
    get:
      summary: ''
      operationId: getApiV1RestaurantGroceriesExportData
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Menu Management'
      security: []
  '/api/v1/restaurant/{restaurant_uuid}/groceries':
    get:
      summary: ''
      operationId: getApiV1RestaurantRestaurant_uuidGroceries
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Menu Management'
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/restaurant/{id}/menu/add':
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: odio
                description:
                  type: string
                  description: ''
                  example: mollitia
                status:
                  type: integer
                  description: ''
                  example: 4
                categoryIds:
                  type: array
                  description: ''
                  example:
                    - 19
                  items:
                    type: integer
              required:
                - title
                - description
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the restaurant.'
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/restaurant/menu/{id}/update':
    post:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: labore
                description:
                  type: string
                  description: ''
                  example: voluptatum
                status:
                  type: integer
                  description: ''
                  example: 11
                categoryIds:
                  type: array
                  description: ''
                  example:
                    - 14
                  items:
                    type: integer
              required:
                - title
                - description
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the menu.'
        example: e86aa007-66ba-4a51-88c9-53f0c21f0e3b
        required: true
        schema:
          type: string
  '/api/v1/restaurant/menu/{id}/images/update':
    post:
      summary: ''
      operationId: postApiV1RestaurantMenuIdImagesUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the menu.'
        example: e86aa007-66ba-4a51-88c9-53f0c21f0e3b
        required: true
        schema:
          type: string
  /api/v1/restaurant/menus:
    get:
      summary: ''
      operationId: getApiV1RestaurantMenus
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Menu Management'
      security: []
  /api/v1/restaurant/menus/export/data:
    get:
      summary: ''
      operationId: getApiV1RestaurantMenusExportData
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Menu Management'
      security: []
  /api/v1/restaurant/menu/create:
    post:
      summary: ''
      operationId: postApiV1RestaurantMenuCreate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                restaurant_ids:
                  type: string
                  description: ''
                  example: quae
                title:
                  type: string
                  description: ''
                  example: repellendus
                description:
                  type: string
                  description: ''
                  example: perferendis
                status:
                  type: integer
                  description: ''
                  example: 12
                categoryIds:
                  type: string
                  description: ''
                  example: enim
              required:
                - restaurant_ids
                - title
                - description
                - categoryIds
      security: []
  '/api/v1/restaurant/menus/{menu_uuid}/update':
    post:
      summary: ''
      operationId: postApiV1RestaurantMenusMenu_uuidUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                restaurant_ids:
                  type: array
                  description: ''
                  example:
                    - 19
                  items:
                    type: integer
                title:
                  type: string
                  description: ''
                  example: blanditiis
                description:
                  type: string
                  description: ''
                  example: delectus
                status:
                  type: integer
                  description: ''
                  example: 13
                categoryIds:
                  type: array
                  description: ''
                  example:
                    - 12
                  items:
                    type: integer
              required:
                - title
                - description
      security: []
    parameters:
      -
        in: path
        name: menu_uuid
        description: ''
        example: e86aa007-66ba-4a51-88c9-53f0c21f0e3b
        required: true
        schema:
          type: string
  /api/v1/restaurant/menu-prices:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Menu Prices Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Prices Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                price:
                  type: number
                  description: 'Must be between 0 and 9999999999.99.'
                  example: 0
                description:
                  type: string
                  description: ''
                  example: ipsa
                status:
                  type: integer
                  description: ''
                  example: 18
                menu_id:
                  type: string
                  description: ''
                  example: deserunt
              required:
                - price
                - description
                - menu_id
      security: []
  '/api/v1/restaurant/menu-prices/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Menu Prices Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Prices Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: ''
                  example: voluptatibus
                status:
                  type: string
                  description: ''
                  example: voluptates
                price:
                  type: number
                  description: 'Must be between 0 and 9999999999.99.'
                  example: 0
              required:
                - description
                - status
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Prices Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the menu price.'
        example: 41bc46ea-b95f-448f-8d1c-18f20f91ee7d
        required: true
        schema:
          type: string
  '/api/v1/restaurant/menu-prices/{id}/update':
    post:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Prices Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: ''
                  example: dolor
                status:
                  type: string
                  description: ''
                  example: sunt
                price:
                  type: number
                  description: 'Must be between 0 and 9999999999.99.'
                  example: 1
              required:
                - description
                - status
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the menu price.'
        example: 41bc46ea-b95f-448f-8d1c-18f20f91ee7d
        required: true
        schema:
          type: string
  '/api/v1/restaurant/menu-prices/{id}/delete':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Prices Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the menu price.'
        example: 41bc46ea-b95f-448f-8d1c-18f20f91ee7d
        required: true
        schema:
          type: string
  /api/v1/orderer/orderers:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Orderer/Customer Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Orderer/Customer Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: fugiat
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: justine.cassin@example.com
                phoneNo:
                  type: string
                  description: ''
                  example: null
                address:
                  type: string
                  description: ''
                  example: null
                city:
                  type: string
                  description: ''
                  example: null
                state:
                  type: string
                  description: ''
                  example: null
                mapLocation:
                  type: string
                  description: ''
                  example: null
                image:
                  type: string
                  description: ''
                  example: null
              required:
                - name
                - email
      security: []
  '/api/v1/orderer/orderers/{uuid}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Orderer/Customer Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Orderer/Customer Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  description: 'Must be a valid UUID.'
                  example: f8872eae-e5de-375b-aa04-aefb0e27c460
                name:
                  type: string
                  description: ''
                  example: et
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: doyle.hartmann@example.com
                phoneNo:
                  type: string
                  description: ''
                  example: sapiente
                address:
                  type: string
                  description: ''
                  example: sapiente
                city:
                  type: string
                  description: ''
                  example: delectus
                state:
                  type: string
                  description: ''
                  example: cupiditate
                mapLocation:
                  type: string
                  description: ''
                  example: non
                image:
                  type: string
                  description: ''
                  example: null
              required:
                - uuid
                - name
                - email
                - phoneNo
                - address
                - city
                - state
                - mapLocation
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Orderer/Customer Management'
      security: []
    parameters:
      -
        in: path
        name: uuid
        description: ''
        example: 87f1c66c-e0fa-3ade-beda-b3844a7a73e7
        required: true
        schema:
          type: string
  '/api/v1/orderer/payment/{user_id}/{order_id}':
    get:
      summary: ''
      operationId: getApiV1OrdererPaymentUser_idOrder_id
      description: ''
      parameters: []
      responses:
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 'Error has occured...'
                  message: 'User not found'
                  data: 'Order Payment'
                properties:
                  status:
                    type: string
                    example: 'Error has occured...'
                  message:
                    type: string
                    example: 'User not found'
                  data:
                    type: string
                    example: 'Order Payment'
      tags:
        - 'Payment Post Controller'
      security: []
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: reiciendis
        required: true
        schema:
          type: string
      -
        in: path
        name: order_id
        description: 'The ID of the order.'
        example: ipsam
        required: true
        schema:
          type: string
  /api/v1/order/payment/create-paypal-order:
    post:
      summary: ''
      operationId: postApiV1OrderPaymentCreatePaypalOrder
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Post Controller'
      security: []
  /api/v1/order/payment/capture-paypal-order:
    post:
      summary: ''
      operationId: postApiV1OrderPaymentCapturePaypalOrder
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Post Controller'
      security: []
  /api/v1/order/tip/payment/create-tip-paypal-order:
    post:
      summary: ''
      operationId: postApiV1OrderTipPaymentCreateTipPaypalOrder
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Post Controller'
      security: []
  /api/v1/order/tip/payment/capture-tip-paypal-order:
    post:
      summary: ''
      operationId: postApiV1OrderTipPaymentCaptureTipPaypalOrder
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Post Controller'
      security: []
  /api/v1/restaurants:
    get:
      summary: ''
      operationId: getApiV1Restaurants
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 2
                      uuid: 9d8e5cf8-a54e-491d-80c8-c3a02662e20e
                      attributes:
                        name: 'Price Inc'
                        nameShort: numquam
                        email: chloe53@example.org
                        about: "In quisquam consequatur molestiae aut minus nihil. Voluptatibus assumenda recusandae amet molestias consequatur. Vel sunt quis voluptate ipsa nostrum ea tempora. Ut nihil voluptate enim odit. Nobis esse id ducimus maiores.\n\nPerspiciatis dolor eum quis dolores. Adipisci minima sit autem ea praesentium commodi perferendis doloribus. Consequatur autem harum et occaecati.\n\nIncidunt sapiente sunt sit voluptatem. Accusamus omnis numquam suscipit maxime laudantium rerum. Aut voluptate repudiandae fugit quod."
                        aboutShort: 'Molestiae consequuntur voluptas rerum assumenda magni sed asperiores.'
                        phoneNo: 732.744.8007
                        address: '96780 Langosh Stravenue'
                        city: Pierceview
                        state: 'North Dakota'
                        postalCode: '57779'
                        latitude: null
                        longitude: null
                        mapLocation: '-61.789051,-63.175534'
                        url: 'https://www.abshire.com/optio-atque-sunt-reprehenderit-ipsa-id-est-quod'
                        logo: 'http://moboeats.test/assets/user/default.png'
                        sitting_capacity: null
                        denied_reason: ''
                        created_at: '2024-02-17T16:34:45.000000Z'
                        updated_at: '2024-02-17T16:34:45.000000Z'
                        average_rating: 0
                      relationships:
                        questionnaire:
                          uuid: bbb15d9e-61e7-4600-9bae-a3bf88108071
                          restaurantId: 2
                          delivery: 0
                          booking: 1
                        orders_count:
                          id: 2
                          uuid: 9d8e5cf8-a54e-491d-80c8-c3a02662e20e
                          name: 'Price Inc'
                          name_short: numquam
                          email: chloe53@example.org
                          user_id: 3
                          about: "In quisquam consequatur molestiae aut minus nihil. Voluptatibus assumenda recusandae amet molestias consequatur. Vel sunt quis voluptate ipsa nostrum ea tempora. Ut nihil voluptate enim odit. Nobis esse id ducimus maiores.\n\nPerspiciatis dolor eum quis dolores. Adipisci minima sit autem ea praesentium commodi perferendis doloribus. Consequatur autem harum et occaecati.\n\nIncidunt sapiente sunt sit voluptatem. Accusamus omnis numquam suscipit maxime laudantium rerum. Aut voluptate repudiandae fugit quod."
                          about_short: 'Molestiae consequuntur voluptas rerum assumenda magni sed asperiores.'
                          phone_no: 732.744.8007
                          address: '96780 Langosh Stravenue'
                          city: Pierceview
                          state: 'North Dakota'
                          postal_code: '57779'
                          latitude: null
                          longitude: null
                          map_location: '-61.789051,-63.175534'
                          url: 'https://www.abshire.com/optio-atque-sunt-reprehenderit-ipsa-id-est-quod'
                          logo: 'http://moboeats.test/assets/user/default.png'
                          status: Approved
                          created_by: christ.cronin@effertz.com
                          updated_by: amelia93@lubowitz.com
                          created_at: '2024-02-17T16:34:45.000000Z'
                          updated_at: '2024-02-17T16:34:45.000000Z'
                          sitting_capacity: null
                          denied_reason: null
                          service_charge_agreement: null
                          groceries_service_charge_agreement: 0
                          paypal_email: null
                          orders_count: 0
                          menus_count: 0
                          questionnaire:
                            id: 2
                            uuid: bbb15d9e-61e7-4600-9bae-a3bf88108071
                            restaurant_id: 2
                            delivery: 0
                            booking: 1
                            status: 2
                            created_by: ebony.mckenzie@hotmail.com
                            updated_by: null
                            created_at: '2024-02-17T16:34:45.000000Z'
                            updated_at: '2024-02-17T16:34:45.000000Z'
                          reviews: []
                          restaurant_tables:
                            -
                              id: 1
                              seating_area_id: 1
                              restaurant_id: 2
                              name: 'Table 01'
                              seat_number: 5
                              created_at: '2024-02-17T16:39:07.000000Z'
                              updated_at: '2024-02-17T16:39:07.000000Z'
                              seating_area:
                                id: 1
                                name: Indoor
                                created_at: '2024-02-17T16:34:45.000000Z'
                                updated_at: '2024-02-17T16:34:45.000000Z'
                        menus_count:
                          id: 2
                          uuid: 9d8e5cf8-a54e-491d-80c8-c3a02662e20e
                          name: 'Price Inc'
                          name_short: numquam
                          email: chloe53@example.org
                          user_id: 3
                          about: "In quisquam consequatur molestiae aut minus nihil. Voluptatibus assumenda recusandae amet molestias consequatur. Vel sunt quis voluptate ipsa nostrum ea tempora. Ut nihil voluptate enim odit. Nobis esse id ducimus maiores.\n\nPerspiciatis dolor eum quis dolores. Adipisci minima sit autem ea praesentium commodi perferendis doloribus. Consequatur autem harum et occaecati.\n\nIncidunt sapiente sunt sit voluptatem. Accusamus omnis numquam suscipit maxime laudantium rerum. Aut voluptate repudiandae fugit quod."
                          about_short: 'Molestiae consequuntur voluptas rerum assumenda magni sed asperiores.'
                          phone_no: 732.744.8007
                          address: '96780 Langosh Stravenue'
                          city: Pierceview
                          state: 'North Dakota'
                          postal_code: '57779'
                          latitude: null
                          longitude: null
                          map_location: '-61.789051,-63.175534'
                          url: 'https://www.abshire.com/optio-atque-sunt-reprehenderit-ipsa-id-est-quod'
                          logo: 'http://moboeats.test/assets/user/default.png'
                          status: Approved
                          created_by: christ.cronin@effertz.com
                          updated_by: amelia93@lubowitz.com
                          created_at: '2024-02-17T16:34:45.000000Z'
                          updated_at: '2024-02-17T16:34:45.000000Z'
                          sitting_capacity: null
                          denied_reason: null
                          service_charge_agreement: null
                          groceries_service_charge_agreement: 0
                          paypal_email: null
                          orders_count: 0
                          menus_count: 0
                          questionnaire:
                            id: 2
                            uuid: bbb15d9e-61e7-4600-9bae-a3bf88108071
                            restaurant_id: 2
                            delivery: 0
                            booking: 1
                            status: 2
                            created_by: ebony.mckenzie@hotmail.com
                            updated_by: null
                            created_at: '2024-02-17T16:34:45.000000Z'
                            updated_at: '2024-02-17T16:34:45.000000Z'
                          reviews: []
                          restaurant_tables:
                            -
                              id: 1
                              seating_area_id: 1
                              restaurant_id: 2
                              name: 'Table 01'
                              seat_number: 5
                              created_at: '2024-02-17T16:39:07.000000Z'
                              updated_at: '2024-02-17T16:39:07.000000Z'
                              seating_area:
                                id: 1
                                name: Indoor
                                created_at: '2024-02-17T16:34:45.000000Z'
                                updated_at: '2024-02-17T16:34:45.000000Z'
                        reviews: []
                    -
                      id: 21
                      uuid: 64d36b08-5a4d-4232-82d2-c7c83a834b3f
                      attributes:
                        name: 'Nathan Nixon'
                        nameShort: Nathan
                        email: faguxuxi@mailinator.com
                        about: 'Natus fuga Elit mi'
                        aboutShort: 'Veniam aut officia'
                        phoneNo: '+1 (912) 232-3407'
                        address: 'Manchester, UK'
                        city: null
                        state: 'Malik Good'
                        postalCode: 'Alfreda Hines'
                        latitude: '53.4807593'
                        longitude: '-2.2426305'
                        mapLocation: 'https://maps.google.com/?q=Manchester,+UK&ftid=0x487a4d4c5226f5db:0xd9be143804fe6baa'
                        url: null
                        logo: 'http://moboeats.test/storage/companyLogos/logos/Ig08IKnVv45HsPMTQvUG5gq4j3Duw5aWVouFvER0.png'
                        sitting_capacity: 0
                        denied_reason: ''
                        created_at: '2024-02-17T17:02:41.000000Z'
                        updated_at: '2024-02-17T19:05:43.000000Z'
                        average_rating: 0
                      relationships:
                        questionnaire: null
                        orders_count:
                          id: 21
                          uuid: 64d36b08-5a4d-4232-82d2-c7c83a834b3f
                          name: 'Nathan Nixon'
                          name_short: Nathan
                          email: faguxuxi@mailinator.com
                          user_id: 5
                          about: 'Natus fuga Elit mi'
                          about_short: 'Veniam aut officia'
                          phone_no: '+1 (912) 232-3407'
                          address: 'Manchester, UK'
                          city: null
                          state: 'Malik Good'
                          postal_code: 'Alfreda Hines'
                          latitude: '53.4807593'
                          longitude: '-2.2426305'
                          map_location: 'https://maps.google.com/?q=Manchester,+UK&ftid=0x487a4d4c5226f5db:0xd9be143804fe6baa'
                          url: null
                          logo: 'http://moboeats.test/storage/companyLogos/logos/Ig08IKnVv45HsPMTQvUG5gq4j3Duw5aWVouFvER0.png'
                          status: Approved
                          created_by: null
                          updated_by: null
                          created_at: '2024-02-17T17:02:41.000000Z'
                          updated_at: '2024-02-17T19:05:43.000000Z'
                          sitting_capacity: 0
                          denied_reason: null
                          service_charge_agreement: null
                          groceries_service_charge_agreement: 12
                          paypal_email: vuzuqelyc@mailinator.com
                          orders_count: 0
                          menus_count: 0
                          questionnaire: null
                          reviews: []
                          restaurant_tables:
                            -
                              id: 2
                              seating_area_id: 1
                              restaurant_id: 21
                              name: 'Table 001'
                              seat_number: 6
                              created_at: '2024-02-17T17:07:50.000000Z'
                              updated_at: '2024-02-17T17:07:50.000000Z'
                              seating_area:
                                id: 1
                                name: Indoor
                                created_at: '2024-02-17T16:34:45.000000Z'
                                updated_at: '2024-02-17T16:34:45.000000Z'
                        menus_count:
                          id: 21
                          uuid: 64d36b08-5a4d-4232-82d2-c7c83a834b3f
                          name: 'Nathan Nixon'
                          name_short: Nathan
                          email: faguxuxi@mailinator.com
                          user_id: 5
                          about: 'Natus fuga Elit mi'
                          about_short: 'Veniam aut officia'
                          phone_no: '+1 (912) 232-3407'
                          address: 'Manchester, UK'
                          city: null
                          state: 'Malik Good'
                          postal_code: 'Alfreda Hines'
                          latitude: '53.4807593'
                          longitude: '-2.2426305'
                          map_location: 'https://maps.google.com/?q=Manchester,+UK&ftid=0x487a4d4c5226f5db:0xd9be143804fe6baa'
                          url: null
                          logo: 'http://moboeats.test/storage/companyLogos/logos/Ig08IKnVv45HsPMTQvUG5gq4j3Duw5aWVouFvER0.png'
                          status: Approved
                          created_by: null
                          updated_by: null
                          created_at: '2024-02-17T17:02:41.000000Z'
                          updated_at: '2024-02-17T19:05:43.000000Z'
                          sitting_capacity: 0
                          denied_reason: null
                          service_charge_agreement: null
                          groceries_service_charge_agreement: 12
                          paypal_email: vuzuqelyc@mailinator.com
                          orders_count: 0
                          menus_count: 0
                          questionnaire: null
                          reviews: []
                          restaurant_tables:
                            -
                              id: 2
                              seating_area_id: 1
                              restaurant_id: 21
                              name: 'Table 001'
                              seat_number: 6
                              created_at: '2024-02-17T17:07:50.000000Z'
                              updated_at: '2024-02-17T17:07:50.000000Z'
                              seating_area:
                                id: 1
                                name: Indoor
                                created_at: '2024-02-17T16:34:45.000000Z'
                                updated_at: '2024-02-17T16:34:45.000000Z'
                        reviews: []
                  links:
                    first: 'http://moboeats.test/api/v1/restaurants?page=1'
                    last: 'http://moboeats.test/api/v1/restaurants?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://moboeats.test/api/v1/restaurants?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://moboeats.test/api/v1/restaurants'
                    per_page: 15
                    to: 2
                    total: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 2
                        uuid: 9d8e5cf8-a54e-491d-80c8-c3a02662e20e
                        attributes:
                          name: 'Price Inc'
                          nameShort: numquam
                          email: chloe53@example.org
                          about: "In quisquam consequatur molestiae aut minus nihil. Voluptatibus assumenda recusandae amet molestias consequatur. Vel sunt quis voluptate ipsa nostrum ea tempora. Ut nihil voluptate enim odit. Nobis esse id ducimus maiores.\n\nPerspiciatis dolor eum quis dolores. Adipisci minima sit autem ea praesentium commodi perferendis doloribus. Consequatur autem harum et occaecati.\n\nIncidunt sapiente sunt sit voluptatem. Accusamus omnis numquam suscipit maxime laudantium rerum. Aut voluptate repudiandae fugit quod."
                          aboutShort: 'Molestiae consequuntur voluptas rerum assumenda magni sed asperiores.'
                          phoneNo: 732.744.8007
                          address: '96780 Langosh Stravenue'
                          city: Pierceview
                          state: 'North Dakota'
                          postalCode: '57779'
                          latitude: null
                          longitude: null
                          mapLocation: '-61.789051,-63.175534'
                          url: 'https://www.abshire.com/optio-atque-sunt-reprehenderit-ipsa-id-est-quod'
                          logo: 'http://moboeats.test/assets/user/default.png'
                          sitting_capacity: null
                          denied_reason: ''
                          created_at: '2024-02-17T16:34:45.000000Z'
                          updated_at: '2024-02-17T16:34:45.000000Z'
                          average_rating: 0
                        relationships:
                          questionnaire:
                            uuid: bbb15d9e-61e7-4600-9bae-a3bf88108071
                            restaurantId: 2
                            delivery: 0
                            booking: 1
                          orders_count:
                            id: 2
                            uuid: 9d8e5cf8-a54e-491d-80c8-c3a02662e20e
                            name: 'Price Inc'
                            name_short: numquam
                            email: chloe53@example.org
                            user_id: 3
                            about: "In quisquam consequatur molestiae aut minus nihil. Voluptatibus assumenda recusandae amet molestias consequatur. Vel sunt quis voluptate ipsa nostrum ea tempora. Ut nihil voluptate enim odit. Nobis esse id ducimus maiores.\n\nPerspiciatis dolor eum quis dolores. Adipisci minima sit autem ea praesentium commodi perferendis doloribus. Consequatur autem harum et occaecati.\n\nIncidunt sapiente sunt sit voluptatem. Accusamus omnis numquam suscipit maxime laudantium rerum. Aut voluptate repudiandae fugit quod."
                            about_short: 'Molestiae consequuntur voluptas rerum assumenda magni sed asperiores.'
                            phone_no: 732.744.8007
                            address: '96780 Langosh Stravenue'
                            city: Pierceview
                            state: 'North Dakota'
                            postal_code: '57779'
                            latitude: null
                            longitude: null
                            map_location: '-61.789051,-63.175534'
                            url: 'https://www.abshire.com/optio-atque-sunt-reprehenderit-ipsa-id-est-quod'
                            logo: 'http://moboeats.test/assets/user/default.png'
                            status: Approved
                            created_by: christ.cronin@effertz.com
                            updated_by: amelia93@lubowitz.com
                            created_at: '2024-02-17T16:34:45.000000Z'
                            updated_at: '2024-02-17T16:34:45.000000Z'
                            sitting_capacity: null
                            denied_reason: null
                            service_charge_agreement: null
                            groceries_service_charge_agreement: 0
                            paypal_email: null
                            orders_count: 0
                            menus_count: 0
                            questionnaire:
                              id: 2
                              uuid: bbb15d9e-61e7-4600-9bae-a3bf88108071
                              restaurant_id: 2
                              delivery: 0
                              booking: 1
                              status: 2
                              created_by: ebony.mckenzie@hotmail.com
                              updated_by: null
                              created_at: '2024-02-17T16:34:45.000000Z'
                              updated_at: '2024-02-17T16:34:45.000000Z'
                            reviews: []
                            restaurant_tables:
                              -
                                id: 1
                                seating_area_id: 1
                                restaurant_id: 2
                                name: 'Table 01'
                                seat_number: 5
                                created_at: '2024-02-17T16:39:07.000000Z'
                                updated_at: '2024-02-17T16:39:07.000000Z'
                                seating_area:
                                  id: 1
                                  name: Indoor
                                  created_at: '2024-02-17T16:34:45.000000Z'
                                  updated_at: '2024-02-17T16:34:45.000000Z'
                          menus_count:
                            id: 2
                            uuid: 9d8e5cf8-a54e-491d-80c8-c3a02662e20e
                            name: 'Price Inc'
                            name_short: numquam
                            email: chloe53@example.org
                            user_id: 3
                            about: "In quisquam consequatur molestiae aut minus nihil. Voluptatibus assumenda recusandae amet molestias consequatur. Vel sunt quis voluptate ipsa nostrum ea tempora. Ut nihil voluptate enim odit. Nobis esse id ducimus maiores.\n\nPerspiciatis dolor eum quis dolores. Adipisci minima sit autem ea praesentium commodi perferendis doloribus. Consequatur autem harum et occaecati.\n\nIncidunt sapiente sunt sit voluptatem. Accusamus omnis numquam suscipit maxime laudantium rerum. Aut voluptate repudiandae fugit quod."
                            about_short: 'Molestiae consequuntur voluptas rerum assumenda magni sed asperiores.'
                            phone_no: 732.744.8007
                            address: '96780 Langosh Stravenue'
                            city: Pierceview
                            state: 'North Dakota'
                            postal_code: '57779'
                            latitude: null
                            longitude: null
                            map_location: '-61.789051,-63.175534'
                            url: 'https://www.abshire.com/optio-atque-sunt-reprehenderit-ipsa-id-est-quod'
                            logo: 'http://moboeats.test/assets/user/default.png'
                            status: Approved
                            created_by: christ.cronin@effertz.com
                            updated_by: amelia93@lubowitz.com
                            created_at: '2024-02-17T16:34:45.000000Z'
                            updated_at: '2024-02-17T16:34:45.000000Z'
                            sitting_capacity: null
                            denied_reason: null
                            service_charge_agreement: null
                            groceries_service_charge_agreement: 0
                            paypal_email: null
                            orders_count: 0
                            menus_count: 0
                            questionnaire:
                              id: 2
                              uuid: bbb15d9e-61e7-4600-9bae-a3bf88108071
                              restaurant_id: 2
                              delivery: 0
                              booking: 1
                              status: 2
                              created_by: ebony.mckenzie@hotmail.com
                              updated_by: null
                              created_at: '2024-02-17T16:34:45.000000Z'
                              updated_at: '2024-02-17T16:34:45.000000Z'
                            reviews: []
                            restaurant_tables:
                              -
                                id: 1
                                seating_area_id: 1
                                restaurant_id: 2
                                name: 'Table 01'
                                seat_number: 5
                                created_at: '2024-02-17T16:39:07.000000Z'
                                updated_at: '2024-02-17T16:39:07.000000Z'
                                seating_area:
                                  id: 1
                                  name: Indoor
                                  created_at: '2024-02-17T16:34:45.000000Z'
                                  updated_at: '2024-02-17T16:34:45.000000Z'
                          reviews: []
                      -
                        id: 21
                        uuid: 64d36b08-5a4d-4232-82d2-c7c83a834b3f
                        attributes:
                          name: 'Nathan Nixon'
                          nameShort: Nathan
                          email: faguxuxi@mailinator.com
                          about: 'Natus fuga Elit mi'
                          aboutShort: 'Veniam aut officia'
                          phoneNo: '+1 (912) 232-3407'
                          address: 'Manchester, UK'
                          city: null
                          state: 'Malik Good'
                          postalCode: 'Alfreda Hines'
                          latitude: '53.4807593'
                          longitude: '-2.2426305'
                          mapLocation: 'https://maps.google.com/?q=Manchester,+UK&ftid=0x487a4d4c5226f5db:0xd9be143804fe6baa'
                          url: null
                          logo: 'http://moboeats.test/storage/companyLogos/logos/Ig08IKnVv45HsPMTQvUG5gq4j3Duw5aWVouFvER0.png'
                          sitting_capacity: 0
                          denied_reason: ''
                          created_at: '2024-02-17T17:02:41.000000Z'
                          updated_at: '2024-02-17T19:05:43.000000Z'
                          average_rating: 0
                        relationships:
                          questionnaire: null
                          orders_count:
                            id: 21
                            uuid: 64d36b08-5a4d-4232-82d2-c7c83a834b3f
                            name: 'Nathan Nixon'
                            name_short: Nathan
                            email: faguxuxi@mailinator.com
                            user_id: 5
                            about: 'Natus fuga Elit mi'
                            about_short: 'Veniam aut officia'
                            phone_no: '+1 (912) 232-3407'
                            address: 'Manchester, UK'
                            city: null
                            state: 'Malik Good'
                            postal_code: 'Alfreda Hines'
                            latitude: '53.4807593'
                            longitude: '-2.2426305'
                            map_location: 'https://maps.google.com/?q=Manchester,+UK&ftid=0x487a4d4c5226f5db:0xd9be143804fe6baa'
                            url: null
                            logo: 'http://moboeats.test/storage/companyLogos/logos/Ig08IKnVv45HsPMTQvUG5gq4j3Duw5aWVouFvER0.png'
                            status: Approved
                            created_by: null
                            updated_by: null
                            created_at: '2024-02-17T17:02:41.000000Z'
                            updated_at: '2024-02-17T19:05:43.000000Z'
                            sitting_capacity: 0
                            denied_reason: null
                            service_charge_agreement: null
                            groceries_service_charge_agreement: 12
                            paypal_email: vuzuqelyc@mailinator.com
                            orders_count: 0
                            menus_count: 0
                            questionnaire: null
                            reviews: []
                            restaurant_tables:
                              -
                                id: 2
                                seating_area_id: 1
                                restaurant_id: 21
                                name: 'Table 001'
                                seat_number: 6
                                created_at: '2024-02-17T17:07:50.000000Z'
                                updated_at: '2024-02-17T17:07:50.000000Z'
                                seating_area:
                                  id: 1
                                  name: Indoor
                                  created_at: '2024-02-17T16:34:45.000000Z'
                                  updated_at: '2024-02-17T16:34:45.000000Z'
                          menus_count:
                            id: 21
                            uuid: 64d36b08-5a4d-4232-82d2-c7c83a834b3f
                            name: 'Nathan Nixon'
                            name_short: Nathan
                            email: faguxuxi@mailinator.com
                            user_id: 5
                            about: 'Natus fuga Elit mi'
                            about_short: 'Veniam aut officia'
                            phone_no: '+1 (912) 232-3407'
                            address: 'Manchester, UK'
                            city: null
                            state: 'Malik Good'
                            postal_code: 'Alfreda Hines'
                            latitude: '53.4807593'
                            longitude: '-2.2426305'
                            map_location: 'https://maps.google.com/?q=Manchester,+UK&ftid=0x487a4d4c5226f5db:0xd9be143804fe6baa'
                            url: null
                            logo: 'http://moboeats.test/storage/companyLogos/logos/Ig08IKnVv45HsPMTQvUG5gq4j3Duw5aWVouFvER0.png'
                            status: Approved
                            created_by: null
                            updated_by: null
                            created_at: '2024-02-17T17:02:41.000000Z'
                            updated_at: '2024-02-17T19:05:43.000000Z'
                            sitting_capacity: 0
                            denied_reason: null
                            service_charge_agreement: null
                            groceries_service_charge_agreement: 12
                            paypal_email: vuzuqelyc@mailinator.com
                            orders_count: 0
                            menus_count: 0
                            questionnaire: null
                            reviews: []
                            restaurant_tables:
                              -
                                id: 2
                                seating_area_id: 1
                                restaurant_id: 21
                                name: 'Table 001'
                                seat_number: 6
                                created_at: '2024-02-17T17:07:50.000000Z'
                                updated_at: '2024-02-17T17:07:50.000000Z'
                                seating_area:
                                  id: 1
                                  name: Indoor
                                  created_at: '2024-02-17T16:34:45.000000Z'
                                  updated_at: '2024-02-17T16:34:45.000000Z'
                          reviews: []
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 2
                        uuid:
                          type: string
                          example: 9d8e5cf8-a54e-491d-80c8-c3a02662e20e
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'Price Inc'
                            nameShort:
                              type: string
                              example: numquam
                            email:
                              type: string
                              example: chloe53@example.org
                            about:
                              type: string
                              example: "In quisquam consequatur molestiae aut minus nihil. Voluptatibus assumenda recusandae amet molestias consequatur. Vel sunt quis voluptate ipsa nostrum ea tempora. Ut nihil voluptate enim odit. Nobis esse id ducimus maiores.\n\nPerspiciatis dolor eum quis dolores. Adipisci minima sit autem ea praesentium commodi perferendis doloribus. Consequatur autem harum et occaecati.\n\nIncidunt sapiente sunt sit voluptatem. Accusamus omnis numquam suscipit maxime laudantium rerum. Aut voluptate repudiandae fugit quod."
                            aboutShort:
                              type: string
                              example: 'Molestiae consequuntur voluptas rerum assumenda magni sed asperiores.'
                            phoneNo:
                              type: string
                              example: 732.744.8007
                            address:
                              type: string
                              example: '96780 Langosh Stravenue'
                            city:
                              type: string
                              example: Pierceview
                            state:
                              type: string
                              example: 'North Dakota'
                            postalCode:
                              type: string
                              example: '57779'
                            latitude:
                              type: string
                              example: null
                            longitude:
                              type: string
                              example: null
                            mapLocation:
                              type: string
                              example: '-61.789051,-63.175534'
                            url:
                              type: string
                              example: 'https://www.abshire.com/optio-atque-sunt-reprehenderit-ipsa-id-est-quod'
                            logo:
                              type: string
                              example: 'http://moboeats.test/assets/user/default.png'
                            sitting_capacity:
                              type: string
                              example: null
                            denied_reason:
                              type: string
                              example: ''
                            created_at:
                              type: string
                              example: '2024-02-17T16:34:45.000000Z'
                            updated_at:
                              type: string
                              example: '2024-02-17T16:34:45.000000Z'
                            average_rating:
                              type: integer
                              example: 0
                        relationships:
                          type: object
                          properties:
                            questionnaire:
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  example: bbb15d9e-61e7-4600-9bae-a3bf88108071
                                restaurantId:
                                  type: integer
                                  example: 2
                                delivery:
                                  type: integer
                                  example: 0
                                booking:
                                  type: integer
                                  example: 1
                            orders_count:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 2
                                uuid:
                                  type: string
                                  example: 9d8e5cf8-a54e-491d-80c8-c3a02662e20e
                                name:
                                  type: string
                                  example: 'Price Inc'
                                name_short:
                                  type: string
                                  example: numquam
                                email:
                                  type: string
                                  example: chloe53@example.org
                                user_id:
                                  type: integer
                                  example: 3
                                about:
                                  type: string
                                  example: "In quisquam consequatur molestiae aut minus nihil. Voluptatibus assumenda recusandae amet molestias consequatur. Vel sunt quis voluptate ipsa nostrum ea tempora. Ut nihil voluptate enim odit. Nobis esse id ducimus maiores.\n\nPerspiciatis dolor eum quis dolores. Adipisci minima sit autem ea praesentium commodi perferendis doloribus. Consequatur autem harum et occaecati.\n\nIncidunt sapiente sunt sit voluptatem. Accusamus omnis numquam suscipit maxime laudantium rerum. Aut voluptate repudiandae fugit quod."
                                about_short:
                                  type: string
                                  example: 'Molestiae consequuntur voluptas rerum assumenda magni sed asperiores.'
                                phone_no:
                                  type: string
                                  example: 732.744.8007
                                address:
                                  type: string
                                  example: '96780 Langosh Stravenue'
                                city:
                                  type: string
                                  example: Pierceview
                                state:
                                  type: string
                                  example: 'North Dakota'
                                postal_code:
                                  type: string
                                  example: '57779'
                                latitude:
                                  type: string
                                  example: null
                                longitude:
                                  type: string
                                  example: null
                                map_location:
                                  type: string
                                  example: '-61.789051,-63.175534'
                                url:
                                  type: string
                                  example: 'https://www.abshire.com/optio-atque-sunt-reprehenderit-ipsa-id-est-quod'
                                logo:
                                  type: string
                                  example: 'http://moboeats.test/assets/user/default.png'
                                status:
                                  type: string
                                  example: Approved
                                created_by:
                                  type: string
                                  example: christ.cronin@effertz.com
                                updated_by:
                                  type: string
                                  example: amelia93@lubowitz.com
                                created_at:
                                  type: string
                                  example: '2024-02-17T16:34:45.000000Z'
                                updated_at:
                                  type: string
                                  example: '2024-02-17T16:34:45.000000Z'
                                sitting_capacity:
                                  type: string
                                  example: null
                                denied_reason:
                                  type: string
                                  example: null
                                service_charge_agreement:
                                  type: string
                                  example: null
                                groceries_service_charge_agreement:
                                  type: integer
                                  example: 0
                                paypal_email:
                                  type: string
                                  example: null
                                orders_count:
                                  type: integer
                                  example: 0
                                menus_count:
                                  type: integer
                                  example: 0
                                questionnaire:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      example: 2
                                    uuid:
                                      type: string
                                      example: bbb15d9e-61e7-4600-9bae-a3bf88108071
                                    restaurant_id:
                                      type: integer
                                      example: 2
                                    delivery:
                                      type: integer
                                      example: 0
                                    booking:
                                      type: integer
                                      example: 1
                                    status:
                                      type: integer
                                      example: 2
                                    created_by:
                                      type: string
                                      example: ebony.mckenzie@hotmail.com
                                    updated_by:
                                      type: string
                                      example: null
                                    created_at:
                                      type: string
                                      example: '2024-02-17T16:34:45.000000Z'
                                    updated_at:
                                      type: string
                                      example: '2024-02-17T16:34:45.000000Z'
                                reviews:
                                  type: array
                                  example: []
                                restaurant_tables:
                                  type: array
                                  example:
                                    -
                                      id: 1
                                      seating_area_id: 1
                                      restaurant_id: 2
                                      name: 'Table 01'
                                      seat_number: 5
                                      created_at: '2024-02-17T16:39:07.000000Z'
                                      updated_at: '2024-02-17T16:39:07.000000Z'
                                      seating_area: { id: 1, name: Indoor, created_at: '2024-02-17T16:34:45.000000Z', updated_at: '2024-02-17T16:34:45.000000Z' }
                                  items:
                                    type: object
                                    properties:
                                      id: { type: integer, example: 1 }
                                      seating_area_id: { type: integer, example: 1 }
                                      restaurant_id: { type: integer, example: 2 }
                                      name: { type: string, example: 'Table 01' }
                                      seat_number: { type: integer, example: 5 }
                                      created_at: { type: string, example: '2024-02-17T16:39:07.000000Z' }
                                      updated_at: { type: string, example: '2024-02-17T16:39:07.000000Z' }
                                      seating_area: { type: object, properties: { id: { type: integer, example: 1 }, name: { type: string, example: Indoor }, created_at: { type: string, example: '2024-02-17T16:34:45.000000Z' }, updated_at: { type: string, example: '2024-02-17T16:34:45.000000Z' } } }
                            menus_count:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 2
                                uuid:
                                  type: string
                                  example: 9d8e5cf8-a54e-491d-80c8-c3a02662e20e
                                name:
                                  type: string
                                  example: 'Price Inc'
                                name_short:
                                  type: string
                                  example: numquam
                                email:
                                  type: string
                                  example: chloe53@example.org
                                user_id:
                                  type: integer
                                  example: 3
                                about:
                                  type: string
                                  example: "In quisquam consequatur molestiae aut minus nihil. Voluptatibus assumenda recusandae amet molestias consequatur. Vel sunt quis voluptate ipsa nostrum ea tempora. Ut nihil voluptate enim odit. Nobis esse id ducimus maiores.\n\nPerspiciatis dolor eum quis dolores. Adipisci minima sit autem ea praesentium commodi perferendis doloribus. Consequatur autem harum et occaecati.\n\nIncidunt sapiente sunt sit voluptatem. Accusamus omnis numquam suscipit maxime laudantium rerum. Aut voluptate repudiandae fugit quod."
                                about_short:
                                  type: string
                                  example: 'Molestiae consequuntur voluptas rerum assumenda magni sed asperiores.'
                                phone_no:
                                  type: string
                                  example: 732.744.8007
                                address:
                                  type: string
                                  example: '96780 Langosh Stravenue'
                                city:
                                  type: string
                                  example: Pierceview
                                state:
                                  type: string
                                  example: 'North Dakota'
                                postal_code:
                                  type: string
                                  example: '57779'
                                latitude:
                                  type: string
                                  example: null
                                longitude:
                                  type: string
                                  example: null
                                map_location:
                                  type: string
                                  example: '-61.789051,-63.175534'
                                url:
                                  type: string
                                  example: 'https://www.abshire.com/optio-atque-sunt-reprehenderit-ipsa-id-est-quod'
                                logo:
                                  type: string
                                  example: 'http://moboeats.test/assets/user/default.png'
                                status:
                                  type: string
                                  example: Approved
                                created_by:
                                  type: string
                                  example: christ.cronin@effertz.com
                                updated_by:
                                  type: string
                                  example: amelia93@lubowitz.com
                                created_at:
                                  type: string
                                  example: '2024-02-17T16:34:45.000000Z'
                                updated_at:
                                  type: string
                                  example: '2024-02-17T16:34:45.000000Z'
                                sitting_capacity:
                                  type: string
                                  example: null
                                denied_reason:
                                  type: string
                                  example: null
                                service_charge_agreement:
                                  type: string
                                  example: null
                                groceries_service_charge_agreement:
                                  type: integer
                                  example: 0
                                paypal_email:
                                  type: string
                                  example: null
                                orders_count:
                                  type: integer
                                  example: 0
                                menus_count:
                                  type: integer
                                  example: 0
                                questionnaire:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      example: 2
                                    uuid:
                                      type: string
                                      example: bbb15d9e-61e7-4600-9bae-a3bf88108071
                                    restaurant_id:
                                      type: integer
                                      example: 2
                                    delivery:
                                      type: integer
                                      example: 0
                                    booking:
                                      type: integer
                                      example: 1
                                    status:
                                      type: integer
                                      example: 2
                                    created_by:
                                      type: string
                                      example: ebony.mckenzie@hotmail.com
                                    updated_by:
                                      type: string
                                      example: null
                                    created_at:
                                      type: string
                                      example: '2024-02-17T16:34:45.000000Z'
                                    updated_at:
                                      type: string
                                      example: '2024-02-17T16:34:45.000000Z'
                                reviews:
                                  type: array
                                  example: []
                                restaurant_tables:
                                  type: array
                                  example:
                                    -
                                      id: 1
                                      seating_area_id: 1
                                      restaurant_id: 2
                                      name: 'Table 01'
                                      seat_number: 5
                                      created_at: '2024-02-17T16:39:07.000000Z'
                                      updated_at: '2024-02-17T16:39:07.000000Z'
                                      seating_area: { id: 1, name: Indoor, created_at: '2024-02-17T16:34:45.000000Z', updated_at: '2024-02-17T16:34:45.000000Z' }
                                  items:
                                    type: object
                                    properties:
                                      id: { type: integer, example: 1 }
                                      seating_area_id: { type: integer, example: 1 }
                                      restaurant_id: { type: integer, example: 2 }
                                      name: { type: string, example: 'Table 01' }
                                      seat_number: { type: integer, example: 5 }
                                      created_at: { type: string, example: '2024-02-17T16:39:07.000000Z' }
                                      updated_at: { type: string, example: '2024-02-17T16:39:07.000000Z' }
                                      seating_area: { type: object, properties: { id: { type: integer, example: 1 }, name: { type: string, example: Indoor }, created_at: { type: string, example: '2024-02-17T16:34:45.000000Z' }, updated_at: { type: string, example: '2024-02-17T16:34:45.000000Z' } } }
                            reviews:
                              type: array
                              example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://moboeats.test/api/v1/restaurants?page=1'
                      last:
                        type: string
                        example: 'http://moboeats.test/api/v1/restaurants?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://moboeats.test/api/v1/restaurants?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://moboeats.test/api/v1/restaurants'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 2
                      total:
                        type: integer
                        example: 2
      tags:
        - 'Restaurant Management'
      security: []
  '/api/v1/restaurants/{restaurant_uuid}':
    get:
      summary: 'Show Restaurant Details'
      operationId: showRestaurantDetails
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
                    attributes:
                      name: Price-Okuneva
                      nameShort: et
                      email: stephany76@example.com
                      about: "Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\n\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\n\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima."
                      aboutShort: 'Nihil voluptas ut ut nulla nihil consectetur.'
                      phoneNo: 413.890.1105
                      address: '75790 Toy Loaf'
                      city: 'North Hanshaven'
                      state: 'West Virginia'
                      postalCode: 99606-1076
                      latitude: null
                      longitude: null
                      mapLocation: '38.971969,-144.293403'
                      url: 'https://lehner.com/minima-est-cumque-ad-et-et-deleniti-alias.html'
                      logo: 'http://moboeats.test/assets/user/default.png'
                      sitting_capacity: null
                      denied_reason: ''
                      created_at: '2024-02-17T16:34:45.000000Z'
                      updated_at: '2024-02-17T16:34:45.000000Z'
                      average_rating: 0
                    relationships:
                      operating_hours: []
                      orders_count:
                        id: 1
                        uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
                        name: Price-Okuneva
                        name_short: et
                        email: stephany76@example.com
                        user_id: 3
                        about: "Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\n\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\n\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima."
                        about_short: 'Nihil voluptas ut ut nulla nihil consectetur.'
                        phone_no: 413.890.1105
                        address: '75790 Toy Loaf'
                        city: 'North Hanshaven'
                        state: 'West Virginia'
                        postal_code: 99606-1076
                        latitude: null
                        longitude: null
                        map_location: '38.971969,-144.293403'
                        url: 'https://lehner.com/minima-est-cumque-ad-et-et-deleniti-alias.html'
                        logo: 'http://moboeats.test/assets/user/default.png'
                        status: Approved
                        created_by: dale14@erdman.com
                        updated_by: null
                        created_at: '2024-02-17T16:34:45.000000Z'
                        updated_at: '2024-02-17T16:34:45.000000Z'
                        sitting_capacity: null
                        denied_reason: null
                        service_charge_agreement: null
                        groceries_service_charge_agreement: 0
                        paypal_email: null
                        orders_count: 0
                        menus_count: 8
                        operating_hours: []
                        reviews: []
                        restaurant_tables: []
                      menus_count:
                        id: 1
                        uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
                        name: Price-Okuneva
                        name_short: et
                        email: stephany76@example.com
                        user_id: 3
                        about: "Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\n\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\n\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima."
                        about_short: 'Nihil voluptas ut ut nulla nihil consectetur.'
                        phone_no: 413.890.1105
                        address: '75790 Toy Loaf'
                        city: 'North Hanshaven'
                        state: 'West Virginia'
                        postal_code: 99606-1076
                        latitude: null
                        longitude: null
                        map_location: '38.971969,-144.293403'
                        url: 'https://lehner.com/minima-est-cumque-ad-et-et-deleniti-alias.html'
                        logo: 'http://moboeats.test/assets/user/default.png'
                        status: Approved
                        created_by: dale14@erdman.com
                        updated_by: null
                        created_at: '2024-02-17T16:34:45.000000Z'
                        updated_at: '2024-02-17T16:34:45.000000Z'
                        sitting_capacity: null
                        denied_reason: null
                        service_charge_agreement: null
                        groceries_service_charge_agreement: 0
                        paypal_email: null
                        orders_count: 0
                        menus_count: 8
                        operating_hours: []
                        reviews: []
                        restaurant_tables: []
                      reviews: []
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      uuid:
                        type: string
                        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Price-Okuneva
                          nameShort:
                            type: string
                            example: et
                          email:
                            type: string
                            example: stephany76@example.com
                          about:
                            type: string
                            example: "Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\n\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\n\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima."
                          aboutShort:
                            type: string
                            example: 'Nihil voluptas ut ut nulla nihil consectetur.'
                          phoneNo:
                            type: string
                            example: 413.890.1105
                          address:
                            type: string
                            example: '75790 Toy Loaf'
                          city:
                            type: string
                            example: 'North Hanshaven'
                          state:
                            type: string
                            example: 'West Virginia'
                          postalCode:
                            type: string
                            example: 99606-1076
                          latitude:
                            type: string
                            example: null
                          longitude:
                            type: string
                            example: null
                          mapLocation:
                            type: string
                            example: '38.971969,-144.293403'
                          url:
                            type: string
                            example: 'https://lehner.com/minima-est-cumque-ad-et-et-deleniti-alias.html'
                          logo:
                            type: string
                            example: 'http://moboeats.test/assets/user/default.png'
                          sitting_capacity:
                            type: string
                            example: null
                          denied_reason:
                            type: string
                            example: ''
                          created_at:
                            type: string
                            example: '2024-02-17T16:34:45.000000Z'
                          updated_at:
                            type: string
                            example: '2024-02-17T16:34:45.000000Z'
                          average_rating:
                            type: integer
                            example: 0
                      relationships:
                        type: object
                        properties:
                          operating_hours:
                            type: array
                            example: []
                          orders_count:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              uuid:
                                type: string
                                example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
                              name:
                                type: string
                                example: Price-Okuneva
                              name_short:
                                type: string
                                example: et
                              email:
                                type: string
                                example: stephany76@example.com
                              user_id:
                                type: integer
                                example: 3
                              about:
                                type: string
                                example: "Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\n\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\n\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima."
                              about_short:
                                type: string
                                example: 'Nihil voluptas ut ut nulla nihil consectetur.'
                              phone_no:
                                type: string
                                example: 413.890.1105
                              address:
                                type: string
                                example: '75790 Toy Loaf'
                              city:
                                type: string
                                example: 'North Hanshaven'
                              state:
                                type: string
                                example: 'West Virginia'
                              postal_code:
                                type: string
                                example: 99606-1076
                              latitude:
                                type: string
                                example: null
                              longitude:
                                type: string
                                example: null
                              map_location:
                                type: string
                                example: '38.971969,-144.293403'
                              url:
                                type: string
                                example: 'https://lehner.com/minima-est-cumque-ad-et-et-deleniti-alias.html'
                              logo:
                                type: string
                                example: 'http://moboeats.test/assets/user/default.png'
                              status:
                                type: string
                                example: Approved
                              created_by:
                                type: string
                                example: dale14@erdman.com
                              updated_by:
                                type: string
                                example: null
                              created_at:
                                type: string
                                example: '2024-02-17T16:34:45.000000Z'
                              updated_at:
                                type: string
                                example: '2024-02-17T16:34:45.000000Z'
                              sitting_capacity:
                                type: string
                                example: null
                              denied_reason:
                                type: string
                                example: null
                              service_charge_agreement:
                                type: string
                                example: null
                              groceries_service_charge_agreement:
                                type: integer
                                example: 0
                              paypal_email:
                                type: string
                                example: null
                              orders_count:
                                type: integer
                                example: 0
                              menus_count:
                                type: integer
                                example: 8
                              operating_hours:
                                type: array
                                example: []
                              reviews:
                                type: array
                                example: []
                              restaurant_tables:
                                type: array
                                example: []
                          menus_count:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              uuid:
                                type: string
                                example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
                              name:
                                type: string
                                example: Price-Okuneva
                              name_short:
                                type: string
                                example: et
                              email:
                                type: string
                                example: stephany76@example.com
                              user_id:
                                type: integer
                                example: 3
                              about:
                                type: string
                                example: "Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\n\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\n\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima."
                              about_short:
                                type: string
                                example: 'Nihil voluptas ut ut nulla nihil consectetur.'
                              phone_no:
                                type: string
                                example: 413.890.1105
                              address:
                                type: string
                                example: '75790 Toy Loaf'
                              city:
                                type: string
                                example: 'North Hanshaven'
                              state:
                                type: string
                                example: 'West Virginia'
                              postal_code:
                                type: string
                                example: 99606-1076
                              latitude:
                                type: string
                                example: null
                              longitude:
                                type: string
                                example: null
                              map_location:
                                type: string
                                example: '38.971969,-144.293403'
                              url:
                                type: string
                                example: 'https://lehner.com/minima-est-cumque-ad-et-et-deleniti-alias.html'
                              logo:
                                type: string
                                example: 'http://moboeats.test/assets/user/default.png'
                              status:
                                type: string
                                example: Approved
                              created_by:
                                type: string
                                example: dale14@erdman.com
                              updated_by:
                                type: string
                                example: null
                              created_at:
                                type: string
                                example: '2024-02-17T16:34:45.000000Z'
                              updated_at:
                                type: string
                                example: '2024-02-17T16:34:45.000000Z'
                              sitting_capacity:
                                type: string
                                example: null
                              denied_reason:
                                type: string
                                example: null
                              service_charge_agreement:
                                type: string
                                example: null
                              groceries_service_charge_agreement:
                                type: integer
                                example: 0
                              paypal_email:
                                type: string
                                example: null
                              orders_count:
                                type: integer
                                example: 0
                              menus_count:
                                type: integer
                                example: 8
                              operating_hours:
                                type: array
                                example: []
                              reviews:
                                type: array
                                example: []
                              restaurant_tables:
                                type: array
                                example: []
                          reviews:
                            type: array
                            example: []
      tags:
        - 'Restaurant Management'
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
      -
        in: path
        name: restaurant
        description: 'Optional parameter. The ID of the restaurant'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: voluptas
  /api/v1/seating-areas:
    get:
      summary: ''
      operationId: getApiV1SeatingAreas
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
  '/api/v1/orderer/orderer-restaurants/{restaurant_uuid}':
    get:
      summary: 'Show Restaurant Details'
      operationId: showRestaurantDetails
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
      -
        in: path
        name: restaurant
        description: 'Optional parameter. The ID of the restaurant'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: veniam
  /api/v1/orderer/orderer-restaurants:
    get:
      summary: ''
      operationId: getApiV1OrdererOrdererRestaurants
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    post:
      summary: ''
      operationId: postApiV1OrdererOrdererRestaurants
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: est
                name_short:
                  type: string
                  description: ''
                  example: aliquid
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: flangworth@example.org
                about:
                  type: string
                  description: ''
                  example: mollitia
                about_short:
                  type: string
                  description: ''
                  example: beatae
                phone_no:
                  type: string
                  description: ''
                  example: null
                address:
                  type: string
                  description: ''
                  example: null
                state:
                  type: string
                  description: ''
                  example: null
                postal_code:
                  type: string
                  description: ''
                  example: null
                place_id:
                  type: string
                  description: ''
                  example: quos
                latitude:
                  type: string
                  description: ''
                  example: rerum
                longitude:
                  type: string
                  description: ''
                  example: aut
                url:
                  type: string
                  description: ''
                  example: null
                logo:
                  type: string
                  description: ''
                  example: sint
                map_location:
                  type: string
                  description: ''
                  example: null
                sitting_capacity:
                  type: integer
                  description: ''
                  example: 9
                paypal_email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: cronin.eli@example.org
              required:
                - name
                - name_short
                - email
                - about
                - about_short
                - place_id
                - latitude
                - longitude
                - logo
                - sitting_capacity
                - paypal_email
      security: []
  '/api/v1/orderer/orderer-restaurants/{id}':
    get:
      summary: 'Show Restaurant Details'
      operationId: showRestaurantDetails
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: officia
                name_short:
                  type: string
                  description: ''
                  example: et
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: zrohan@example.org
                about:
                  type: string
                  description: ''
                  example: deserunt
                about_short:
                  type: string
                  description: ''
                  example: iure
                phone_no:
                  type: string
                  description: ''
                  example: aut
                address:
                  type: string
                  description: ''
                  example: sit
                state:
                  type: string
                  description: ''
                  example: nam
                postal_code:
                  type: string
                  description: ''
                  example: sed
                map_location:
                  type: string
                  description: ''
                  example: null
                url:
                  type: string
                  description: ''
                  example: null
                logo:
                  type: string
                  description: ''
                  example: null
                sitting_capacity:
                  type: integer
                  description: ''
                  example: 18
                latitude:
                  type: string
                  description: 'Must not be one of <code>null</code>.'
                  example: et
                longitude:
                  type: string
                  description: 'Must not be one of <code>null</code>.'
                  example: eveniet
                paypal_email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: corbin03@example.net
              required:
                - name
                - name_short
                - email
                - about
                - about_short
                - phone_no
                - address
                - state
                - postal_code
                - sitting_capacity
                - latitude
                - longitude
                - paypal_email
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the orderer restaurant.'
        example: omnis
        required: true
        schema:
          type: string
      -
        in: path
        name: restaurant
        description: 'Optional parameter. The ID of the restaurant'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: sint
  '/api/v1/orderer/orderer-restaurants/{restaurant_uuid}/tables':
    get:
      summary: ''
      operationId: getApiV1OrdererOrdererRestaurantsRestaurant_uuidTables
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  /api/v1/orderer/restaurant/reviews/store:
    post:
      summary: 'Store review for a restaurant'
      operationId: storeReviewForARestaurant
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                restaurant_id:
                  type: integer
                  description: 'The id of the restaurant'
                  example: 1
                rating:
                  type: integer
                  description: 'The rating from 1 - 5'
                  example: 17
                review:
                  type: string
                  description: 'A review of the restaurant'
                  example: voluptas
      security: []
  /api/v1/rider/restaurants:
    get:
      summary: ''
      operationId: getApiV1RiderRestaurants
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    post:
      summary: ''
      operationId: postApiV1RiderRestaurants
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: necessitatibus
                name_short:
                  type: string
                  description: ''
                  example: quo
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: bartell.aiden@example.org
                about:
                  type: string
                  description: ''
                  example: ut
                about_short:
                  type: string
                  description: ''
                  example: recusandae
                phone_no:
                  type: string
                  description: ''
                  example: null
                address:
                  type: string
                  description: ''
                  example: null
                state:
                  type: string
                  description: ''
                  example: null
                postal_code:
                  type: string
                  description: ''
                  example: null
                place_id:
                  type: string
                  description: ''
                  example: fuga
                latitude:
                  type: string
                  description: ''
                  example: at
                longitude:
                  type: string
                  description: ''
                  example: est
                url:
                  type: string
                  description: ''
                  example: null
                logo:
                  type: string
                  description: ''
                  example: quod
                map_location:
                  type: string
                  description: ''
                  example: null
                sitting_capacity:
                  type: integer
                  description: ''
                  example: 4
                paypal_email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: lebsack.nikolas@example.org
              required:
                - name
                - name_short
                - email
                - about
                - about_short
                - place_id
                - latitude
                - longitude
                - logo
                - sitting_capacity
                - paypal_email
      security: []
  '/api/v1/rider/restaurants/{uuid}':
    get:
      summary: 'Show Restaurant Details'
      operationId: showRestaurantDetails
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: optio
                name_short:
                  type: string
                  description: ''
                  example: quis
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: schuyler.spencer@example.net
                about:
                  type: string
                  description: ''
                  example: ipsum
                about_short:
                  type: string
                  description: ''
                  example: distinctio
                phone_no:
                  type: string
                  description: ''
                  example: ullam
                address:
                  type: string
                  description: ''
                  example: repudiandae
                state:
                  type: string
                  description: ''
                  example: adipisci
                postal_code:
                  type: string
                  description: ''
                  example: ducimus
                map_location:
                  type: string
                  description: ''
                  example: null
                url:
                  type: string
                  description: ''
                  example: null
                logo:
                  type: string
                  description: ''
                  example: null
                sitting_capacity:
                  type: integer
                  description: ''
                  example: 16
                latitude:
                  type: string
                  description: 'Must not be one of <code>null</code>.'
                  example: dolor
                longitude:
                  type: string
                  description: 'Must not be one of <code>null</code>.'
                  example: est
                paypal_email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: aufderhar.lila@example.net
              required:
                - name
                - name_short
                - email
                - about
                - about_short
                - phone_no
                - address
                - state
                - postal_code
                - sitting_capacity
                - latitude
                - longitude
                - paypal_email
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      security: []
    parameters:
      -
        in: path
        name: uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
      -
        in: path
        name: restaurant
        description: 'Optional parameter. The ID of the restaurant'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: aut
  /api/v1/restaurant/restaurant:
    post:
      summary: ''
      operationId: postApiV1RestaurantRestaurant
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: nemo
                name_short:
                  type: string
                  description: ''
                  example: quasi
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: tbruen@example.com
                about:
                  type: string
                  description: ''
                  example: atque
                about_short:
                  type: string
                  description: ''
                  example: repellendus
                phone_no:
                  type: string
                  description: ''
                  example: null
                address:
                  type: string
                  description: ''
                  example: null
                state:
                  type: string
                  description: ''
                  example: null
                postal_code:
                  type: string
                  description: ''
                  example: null
                place_id:
                  type: string
                  description: ''
                  example: cum
                latitude:
                  type: string
                  description: ''
                  example: eligendi
                longitude:
                  type: string
                  description: ''
                  example: amet
                url:
                  type: string
                  description: ''
                  example: null
                logo:
                  type: string
                  description: ''
                  example: saepe
                map_location:
                  type: string
                  description: ''
                  example: null
                sitting_capacity:
                  type: integer
                  description: ''
                  example: 9
                paypal_email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: koss.claude@example.org
              required:
                - name
                - name_short
                - email
                - about
                - about_short
                - place_id
                - latitude
                - longitude
                - logo
                - sitting_capacity
                - paypal_email
      security: []
  /api/v1/restaurant/dashboard:
    get:
      summary: ''
      operationId: getApiV1RestaurantDashboard
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
  '/api/v1/restaurant/restaurants/{uuid}':
    get:
      summary: 'Show Restaurant Details'
      operationId: showRestaurantDetails
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: repudiandae
                name_short:
                  type: string
                  description: ''
                  example: enim
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: stone47@example.org
                about:
                  type: string
                  description: ''
                  example: quaerat
                about_short:
                  type: string
                  description: ''
                  example: occaecati
                phone_no:
                  type: string
                  description: ''
                  example: et
                address:
                  type: string
                  description: ''
                  example: nihil
                state:
                  type: string
                  description: ''
                  example: odio
                postal_code:
                  type: string
                  description: ''
                  example: laborum
                map_location:
                  type: string
                  description: ''
                  example: null
                url:
                  type: string
                  description: ''
                  example: null
                logo:
                  type: string
                  description: ''
                  example: null
                sitting_capacity:
                  type: integer
                  description: ''
                  example: 2
                latitude:
                  type: string
                  description: 'Must not be one of <code>null</code>.'
                  example: magnam
                longitude:
                  type: string
                  description: 'Must not be one of <code>null</code>.'
                  example: ea
                paypal_email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: dlemke@example.org
              required:
                - name
                - name_short
                - email
                - about
                - about_short
                - phone_no
                - address
                - state
                - postal_code
                - sitting_capacity
                - latitude
                - longitude
                - paypal_email
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      security: []
    parameters:
      -
        in: path
        name: uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
      -
        in: path
        name: restaurant
        description: 'Optional parameter. The ID of the restaurant'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: sit
  '/api/v1/restaurant/restaurants/{restaurant_uuid}/reviews':
    get:
      summary: 'Get Restaurant Reviews'
      operationId: getRestaurantReviews
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  /api/v1/restaurant/restaurants:
    get:
      summary: ''
      operationId: getApiV1RestaurantRestaurants
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    post:
      summary: ''
      operationId: postApiV1RestaurantRestaurants
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: aut
                name_short:
                  type: string
                  description: ''
                  example: soluta
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: evelyn.stark@example.net
                about:
                  type: string
                  description: ''
                  example: reprehenderit
                about_short:
                  type: string
                  description: ''
                  example: quidem
                phone_no:
                  type: string
                  description: ''
                  example: null
                address:
                  type: string
                  description: ''
                  example: null
                state:
                  type: string
                  description: ''
                  example: null
                postal_code:
                  type: string
                  description: ''
                  example: null
                place_id:
                  type: string
                  description: ''
                  example: dolore
                latitude:
                  type: string
                  description: ''
                  example: est
                longitude:
                  type: string
                  description: ''
                  example: reiciendis
                url:
                  type: string
                  description: ''
                  example: null
                logo:
                  type: string
                  description: ''
                  example: dolores
                map_location:
                  type: string
                  description: ''
                  example: null
                sitting_capacity:
                  type: integer
                  description: ''
                  example: 14
                paypal_email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ruecker.vergie@example.net
              required:
                - name
                - name_short
                - email
                - about
                - about_short
                - place_id
                - latitude
                - longitude
                - logo
                - sitting_capacity
                - paypal_email
      security: []
  /api/v1/restaurant/restaurants/export/data:
    get:
      summary: ''
      operationId: getApiV1RestaurantRestaurantsExportData
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
  '/api/v1/restaurant/restaurants/{restaurant_uuid}/update':
    post:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: debitis
                name_short:
                  type: string
                  description: ''
                  example: et
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: vnicolas@example.org
                about:
                  type: string
                  description: ''
                  example: explicabo
                about_short:
                  type: string
                  description: ''
                  example: molestiae
                phone_no:
                  type: string
                  description: ''
                  example: inventore
                address:
                  type: string
                  description: ''
                  example: in
                state:
                  type: string
                  description: ''
                  example: deserunt
                postal_code:
                  type: string
                  description: ''
                  example: molestias
                map_location:
                  type: string
                  description: ''
                  example: null
                url:
                  type: string
                  description: ''
                  example: null
                logo:
                  type: string
                  description: ''
                  example: null
                sitting_capacity:
                  type: integer
                  description: ''
                  example: 15
                latitude:
                  type: string
                  description: 'Must not be one of <code>null</code>.'
                  example: eveniet
                longitude:
                  type: string
                  description: 'Must not be one of <code>null</code>.'
                  example: libero
                paypal_email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: femard@example.com
              required:
                - name
                - name_short
                - email
                - about
                - about_short
                - phone_no
                - address
                - state
                - postal_code
                - sitting_capacity
                - latitude
                - longitude
                - paypal_email
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/restaurant/riders/{id}':
    get:
      summary: ''
      operationId: getApiV1RestaurantRidersId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the rider.'
        example: optio
        required: true
        schema:
          type: string
  /api/v1/restaurant/payments:
    get:
      summary: ''
      operationId: getApiV1RestaurantPayments
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
  /api/v1/restaurant/payments/export/data:
    get:
      summary: ''
      operationId: getApiV1RestaurantPaymentsExportData
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
  /api/v1/restaurant/reservations:
    get:
      summary: ''
      operationId: getApiV1RestaurantReservations
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
  /api/v1/restaurant/tables:
    get:
      summary: ''
      operationId: getApiV1RestaurantTables
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
  '/api/v1/restaurant/restaurant/{restaurant_uuid}/tables':
    get:
      summary: ''
      operationId: getApiV1RestaurantRestaurantRestaurant_uuidTables
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/restaurant/{restaurant_uuid}/tables/add':
    post:
      summary: 'Add a new table for the specified restaurant'
      operationId: addANewTableForTheSpecifiedRestaurant
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: ipsa
                seating_area_id:
                  type: string
                  description: ''
                  example: officiis
                seat_number:
                  type: string
                  description: ''
                  example: voluptatum
              required:
                - name
                - seating_area_id
                - seat_number
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/restaurant/{restaurant}/tables/{id}/update':
    post:
      summary: 'Update a table'
      operationId: updateATable
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: accusamus
                seating_area_id:
                  type: string
                  description: ''
                  example: molestias
                seat_number:
                  type: string
                  description: ''
                  example: voluptatibus
              required:
                - name
                - seating_area_id
                - seat_number
      security: []
    parameters:
      -
        in: path
        name: restaurant
        description: 'The restaurant.'
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The id of the category'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ut
      -
        in: path
        name: uuid
        description: 'Optional parameter. The uuid of the restaurant'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 58caed40-2de9-3c45-be5e-429e605fbc3e
  '/api/v1/restaurant/restaurant/{restaurant_uuid}/payments':
    get:
      summary: ''
      operationId: getApiV1RestaurantRestaurantRestaurant_uuidPayments
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/restaurant/restaurant/{restaurant_uuid}/sitting-areas':
    get:
      summary: 'Get Restaurant Available Seating Areas'
      operationId: getRestaurantAvailableSeatingAreas
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
      -
        in: path
        name: restaurant
        description: 'Optional parameter. The ID of the restaurant'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: quia
  '/api/v1/restaurant/restaurant/{restaurant_uuid}/reservations':
    get:
      summary: ''
      operationId: getApiV1RestaurantRestaurantRestaurant_uuidReservations
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/restaurant/restaurant/{restaurant_uuid}/orders':
    get:
      summary: ''
      operationId: getApiV1RestaurantRestaurantRestaurant_uuidOrders
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/restaurant/restaurant/{restaurant_uuid}/menu':
    get:
      summary: ''
      operationId: getApiV1RestaurantRestaurantRestaurant_uuidMenu
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/restaurant/{restaurant}/categories':
    get:
      summary: 'Get Categories added by the restaurant'
      operationId: getCategoriesAddedByTheRestaurant
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    parameters:
      -
        in: path
        name: restaurant
        description: 'The restaurant.'
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID or the UUID of the restaurant'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: fugit
  '/api/v1/restaurant/{restaurant_uuid}/categories/add':
    post:
      summary: 'Add a new category for the specified restaurant'
      operationId: addANewCategoryForTheSpecifiedRestaurant
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: repudiandae
                description:
                  type: string
                  description: ''
                  example: quos
              required:
                - title
                - description
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/restaurant/{restaurant}/categories/{id}/update':
    post:
      summary: 'Update a category'
      operationId: updateACategory
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: dolore
                description:
                  type: string
                  description: ''
                  example: assumenda
              required:
                - title
                - description
      security: []
    parameters:
      -
        in: path
        name: restaurant
        description: 'The restaurant.'
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The id of the category'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: temporibus
      -
        in: path
        name: uuid
        description: 'Optional parameter. The uuid of the restaurant'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: fbdfeea8-b5b5-33c2-ac6f-b35fe41964c2
  /api/v1/restaurant/employees:
    get:
      summary: ''
      operationId: getApiV1RestaurantEmployees
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
  '/api/v1/restaurant/employees/{restaurant_uuid}':
    get:
      summary: ''
      operationId: getApiV1RestaurantEmployeesRestaurant_uuid
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/restaurant/employees/{restaurant_uuid}/add':
    post:
      summary: ''
      operationId: postApiV1RestaurantEmployeesRestaurant_uuidAdd
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: possimus
                last_name:
                  type: string
                  description: ''
                  example: qui
                email:
                  type: string
                  description: ''
                  example: quod
                phone_number:
                  type: string
                  description: ''
                  example: ducimus
                avatar:
                  type: string
                  description: 'Must not be greater than 9000 characters.'
                  example: cdrfffetol
              required:
                - first_name
                - last_name
                - email
                - phone_number
      security: []
    parameters:
      -
        in: path
        name: restaurant_uuid
        description: ''
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        required: true
        schema:
          type: string
  '/api/v1/restaurant/employees/{user_uuid}/update':
    post:
      summary: ''
      operationId: postApiV1RestaurantEmployeesUser_uuidUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: minus
                last_name:
                  type: string
                  description: ''
                  example: omnis
                email:
                  type: string
                  description: ''
                  example: sit
                phone_number:
                  type: string
                  description: ''
                  example: velit
                avatar:
                  type: string
                  description: 'Must not be greater than 9000 characters.'
                  example: jwapdmsueagdfdwszwn
                suspend:
                  type: string
                  description: 'Must be one of <code>1</code> or <code>2</code>.'
                  example: '1'
              required:
                - first_name
                - last_name
                - email
                - phone_number
                - suspend
      security: []
    parameters:
      -
        in: path
        name: user_uuid
        description: ''
        example: 5cd491f9-f272-431f-9427-7f93575e3a70
        required: true
        schema:
          type: string
  /api/v1/restaurant/more-info:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Questionnaire'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Questionnaire'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                restaurantUuid:
                  type: string
                  description: ''
                  example: cupiditate
                delivery:
                  type: string
                  description: ''
                  example: fugiat
                booking:
                  type: string
                  description: ''
                  example: officia
              required:
                - restaurantUuid
                - delivery
                - booking
      security: []
  '/api/v1/restaurant/more-info/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Questionnaire'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Questionnaire'
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Questionnaire'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the more info.'
        example: molestiae
        required: true
        schema:
          type: string
  /api/v1/orderer/rider/reviews/store:
    post:
      summary: 'Store review for a rider'
      operationId: storeReviewForARider
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Rider Profile APIs'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                rider_id:
                  type: integer
                  description: 'The id of the rider'
                  example: 11
                rating:
                  type: integer
                  description: 'The rating from 1 - 5'
                  example: 20
                review:
                  type: string
                  description: 'A review of the rider'
                  example: ea
  /api/v1/rider/profile/create:
    post:
      summary: 'Create Rider Profile'
      operationId: createRiderProfile
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Rider Profile APIs'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                vehicle_type:
                  type: string
                  description: 'The vehicle type of the rider'
                  example: placeat
                vehicle_license_plate:
                  type: string
                  description: ''
                  example: qui
                profile_picture:
                  type: string
                  format: binary
                  description: 'The profile picture of the rider'
                paypal_email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: alec.bartell@example.net
                vehicle_licesne_plate:
                  type: sring
                  description: "The license plate of the rider's vehicle"
                  example: et
                city:
                  type: string
                  description: 'The city where the rider is located'
                  example: sed
                state:
                  type: string
                  description: 'The state of where the rider is located'
                  example: qui
                postal_code:
                  type: string
                  description: 'The postal code of the rider'
                  example: laboriosam
              required:
                - vehicle_type
                - vehicle_license_plate
                - profile_picture
                - paypal_email
                - vehicle_licesne_plate
  /api/v1/rider/profile/update:
    post:
      summary: 'Update Rider Prodile'
      operationId: updateRiderProdile
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Rider Profile APIs'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: null
                paypal_email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: croberts@example.com
                vehicle_type:
                  type: string
                  description: 'The vehicle type of the rider'
                  example: quidem
                vehicle_licesne_plate:
                  type: sring
                  description: "The license plate of the rider's vehicle"
                  example: ut
                profile_picture:
                  type: string
                  format: binary
                  description: 'The profile picture of the rider'
                city:
                  type: string
                  description: 'The city where the rider is located'
                  example: ab
                state:
                  type: string
                  description: 'The state of where the rider is located'
                  example: ut
                postal_code:
                  type: string
                  description: 'The postal code of the rider'
                  example: quia
              required:
                - paypal_email
  /api/v1/rider/profile:
    get:
      summary: 'Get Rider Profile'
      operationId: getRiderProfile
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Rider Profile APIs'
  /api/v1/rider/orders:
    get:
      summary: 'Get Orders and Assigned Orders'
      operationId: getOrdersAndAssignedOrders
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Rider Profile APIs'
  /api/v1/rider/orders/update:
    post:
      summary: ''
      operationId: postApiV1RiderOrdersUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Rider Profile APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: string
                  description: ''
                  example: maiores
                status:
                  type: string
                  description: ''
                  example: dolorem
              required:
                - order_id
                - status
  '/api/v1/rider/orders/{order_id}/delivery/location/update':
    post:
      summary: ''
      operationId: postApiV1RiderOrdersOrder_idDeliveryLocationUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Rider Profile APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                longitude:
                  type: string
                  description: ''
                  example: consequuntur
                latitude:
                  type: string
                  description: ''
                  example: itaque
              required:
                - longitude
                - latitude
    parameters:
      -
        in: path
        name: order_id
        description: 'The ID of the order.'
        example: f3b9c89a-029e-4f50-9325-5414c7dc6c65
        required: true
        schema:
          type: string
  /api/v1/rider/location/update:
    post:
      summary: ''
      operationId: postApiV1RiderLocationUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Rider Profile APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                longitude:
                  type: string
                  description: ''
                  example: eos
                latitude:
                  type: string
                  description: ''
                  example: voluptate
              required:
                - longitude
                - latitude
  /api/v1/rider/tips:
    get:
      summary: 'Get Tips paid to the rider'
      operationId: getTipsPaidToTheRider
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Rider Profile APIs'
tags:
  -
    name: 'Authentication Management'
    description: ''
  -
    name: 'Customer Cart'
    description: "\nCart API resource"
  -
    name: 'Customer Cart Items Management'
    description: "\nCart Items API resource"
  -
    name: 'Customer Order Management'
    description: "\nCustomer Order API resource"
  -
    name: 'Customer Restaurants Bookmark Management'
    description: "\nRestaurantBookmark API resource"
  -
    name: 'Customer menu Bookmark Management'
    description: "\nMenuBookmark API resource"
  -
    name: Endpoints
    description: ''
  -
    name: 'Food Categories Management'
    description: "\nFood Category API resource"
  -
    name: 'Food Sub Categories'
    description: "\nFood Sub Categories API resource"
  -
    name: 'Menu Management'
    description: "\nMenu API resource"
  -
    name: 'Menu Prices Management'
    description: "\nFood Menu Prices API resource"
  -
    name: 'Orderer/Customer Management'
    description: "\nOrderer/Customer API resource"
  -
    name: 'Payment Post Controller'
    description: "\nPayment API resource"
  -
    name: 'Restaurant Management'
    description: "\nRestaurant API resource"
  -
    name: 'Restaurant Questionnaire'
    description: "\nQuestionnaire API resource"
  -
    name: 'Rider Profile APIs'
    description: ''
