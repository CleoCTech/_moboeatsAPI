openapi: 3.0.3
info:
  title: MoboEats
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/v1/login:
    post:
      summary: 'User API resource'
      operationId: userAPIResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Authentication Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ali.jerde@example.com
                password:
                  type: string
                  description: ''
                  example: 'm!/H|I-:f\ZMQ'
                userType:
                  type: string
                  description: ''
                  example: et
              required:
                - email
                - password
                - userType
      security: []
  /api/v1/orderer/cart:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer Cart'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Cart'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: ''
                  example: voluptate
              required:
                - userId
      security: []
  '/api/v1/orderer/cart/{uuid}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer Cart'
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Cart'
      security: []
    parameters:
      -
        in: path
        name: uuid
        description: ''
        example: 6685ea80-68ee-301e-b395-30e26feafdbf
        required: true
        schema:
          type: string
  /api/v1/orderer/cart-items:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer Cart Items Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Cart Items Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cartId:
                  type: string
                  description: ''
                  example: numquam
                menuId:
                  type: string
                  description: ''
                  example: quam
                quantity:
                  type: integer
                  description: ''
                  example: 15
                status:
                  type: integer
                  description: ''
                  example: 9
              required:
                - cartId
                - menuId
                - quantity
      security: []
  '/api/v1/orderer/cart-items/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer Cart Items Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Cart Items Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cartId:
                  type: string
                  description: ''
                  example: qui
                menuId:
                  type: string
                  description: ''
                  example: qui
                quantity:
                  type: string
                  description: ''
                  example: aperiam
                status:
                  type: integer
                  description: ''
                  example: 16
              required:
                - cartId
                - menuId
                - quantity
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer Cart Items Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cart item.'
        example: vel
        required: true
        schema:
          type: string
  /api/v1/orderer/menu-bookmark:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer menu Bookmark Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer menu Bookmark Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                menuId:
                  type: string
                  description: ''
                  example: sit
              required:
                - menuId
      security: []
  '/api/v1/orderer/menu-bookmark/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Customer menu Bookmark Management'
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Customer menu Bookmark Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the menu bookmark.'
        example: 8b561955-3316-4033-9ff1-32194378830a
        required: true
        schema:
          type: string
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/register:
    post:
      summary: ''
      operationId: postApiV1Register
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jlbtvkipxplgqbaeuuciyxg
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: aisha85@example.com
                password:
                  type: string
                  description: ''
                  example: ex
                userType:
                  type: string
                  description: ''
                  example: voluptatibus
                otp:
                  type: string
                  description: ''
                  example: null
                image:
                  type: string
                  description: ''
                  example: null
                phoneNo:
                  type: string
                  description: ''
                  example: null
              required:
                - name
                - email
                - password
                - userType
      security: []
  /api/v1/logout:
    post:
      summary: ''
      operationId: postApiV1Logout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/user:
    get:
      summary: ''
      operationId: getApiV1User
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/orderer/orderer-food-categories:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Food Categories Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Categories Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: est
                description:
                  type: string
                  description: ''
                  example: facere
                status:
                  type: string
                  description: ''
                  example: null
                createdBy:
                  type: string
                  description: ''
                  example: voluptatem
              required:
                - title
                - description
                - createdBy
      security: []
  '/api/v1/orderer/orderer-food-categories/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Food Categories Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Categories Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: sequi
                description:
                  type: string
                  description: ''
                  example: voluptate
                status:
                  type: string
                  description: ''
                  example: beatae
                updatedBy:
                  type: string
                  description: ''
                  example: expedita
              required:
                - title
                - description
                - status
                - updatedBy
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Categories Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the orderer food category.'
        example: quam
        required: true
        schema:
          type: string
  /api/v1/restaurant/food-categories:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Food Categories Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Categories Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: repellendus
                description:
                  type: string
                  description: ''
                  example: saepe
                status:
                  type: string
                  description: ''
                  example: null
                createdBy:
                  type: string
                  description: ''
                  example: saepe
              required:
                - title
                - description
                - createdBy
      security: []
  '/api/v1/restaurant/food-categories/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Food Categories Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Categories Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: quaerat
                description:
                  type: string
                  description: ''
                  example: id
                status:
                  type: string
                  description: ''
                  example: quis
                updatedBy:
                  type: string
                  description: ''
                  example: esse
              required:
                - title
                - description
                - status
                - updatedBy
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Categories Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the food category.'
        example: id
        required: true
        schema:
          type: string
  /api/v1/orderer/orderer-food-sub-categories:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Food Sub Categories'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Sub Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: saepe
                description:
                  type: string
                  description: ''
                  example: quidem
                status:
                  type: integer
                  description: ''
                  example: 9
                createdBy:
                  type: string
                  description: ''
                  example: neque
                categoryIds:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - title
                - description
                - createdBy
                - categoryIds
      security: []
  '/api/v1/orderer/orderer-food-sub-categories/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Food Sub Categories'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Sub Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: voluptas
                description:
                  type: string
                  description: ''
                  example: aut
                status:
                  type: string
                  description: ''
                  example: null
                updatedBy:
                  type: string
                  description: ''
                  example: non
                categoryIds:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - title
                - description
                - updatedBy
                - categoryIds
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Sub Categories'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the orderer food sub category.'
        example: enim
        required: true
        schema:
          type: string
  /api/v1/restaurant/food-sub-categories:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Food Sub Categories'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Sub Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: velit
                description:
                  type: string
                  description: ''
                  example: tempore
                status:
                  type: integer
                  description: ''
                  example: 5
                createdBy:
                  type: string
                  description: ''
                  example: qui
                categoryIds:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - title
                - description
                - createdBy
                - categoryIds
      security: []
  '/api/v1/restaurant/food-sub-categories/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Food Sub Categories'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Sub Categories'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: quia
                description:
                  type: string
                  description: ''
                  example: accusamus
                status:
                  type: string
                  description: ''
                  example: null
                updatedBy:
                  type: string
                  description: ''
                  example: tenetur
                categoryIds:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - title
                - description
                - updatedBy
                - categoryIds
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Sub Categories'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the food sub category.'
        example: repellendus
        required: true
        schema:
          type: string
  /api/v1/restaurant/food-sub-categories/bulk:
    post:
      summary: ''
      operationId: postApiV1RestaurantFoodSubCategoriesBulk
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Food Sub Categories'
      security: []
  /api/v1/orderer/orderer-menu:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: query
          name: categories
          description: 'to fetch categories associated with Menu'
          example: non
          required: false
          schema:
            type: string
            description: 'to fetch categories associated with Menu'
            example: non
        -
          in: query
          name: subCategories
          description: 'to fetch categories associated with Menu'
          example: esse
          required: false
          schema:
            type: string
            description: 'to fetch categories associated with Menu'
            example: esse
        -
          in: query
          name: restaurant
          description: 'to fetch restaurant that owns with Menu'
          example: libero
          required: false
          schema:
            type: string
            description: 'to fetch restaurant that owns with Menu'
            example: libero
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Menu Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Management'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: nihil
                description:
                  type: string
                  description: ''
                  example: magni
                status:
                  type: integer
                  description: ''
                  example: 3
                createdBy:
                  type: string
                  description: ''
                  example: quo
                restaurantId:
                  type: string
                  description: ''
                  example: quos
                standardPrice:
                  type: number
                  description: ''
                  example: 16129.458236
                image:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 2048 kilobytes.'
                categoryIds:
                  type: array
                  description: ''
                  example:
                    - 13
                  items:
                    type: integer
                subcategoryIds:
                  type: array
                  description: ''
                  example:
                    - 11
                  items:
                    type: integer
              required:
                - title
                - description
                - createdBy
                - restaurantId
                - standardPrice
                - image
      security: []
  '/api/v1/orderer/orderer-menu/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Menu Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Management'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  description: 'Must be a valid UUID.'
                  example: 89717d67-5aa7-3c0b-a8e8-91b512034ac9
                title:
                  type: string
                  description: ''
                  example: porro
                description:
                  type: string
                  description: ''
                  example: id
                status:
                  type: integer
                  description: ''
                  example: 3
                updatedBy:
                  type: string
                  description: ''
                  example: fugit
                restaurantId:
                  type: string
                  description: ''
                  example: qui
                standardPrice:
                  type: string
                  description: ''
                  example: qui
                image:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 2048 kilobytes.'
                categoryIds:
                  type: array
                  description: ''
                  example:
                    - 1
                  items:
                    type: integer
                subcategoryIds:
                  type: array
                  description: ''
                  example:
                    - 3
                  items:
                    type: integer
              required:
                - uuid
                - title
                - description
                - updatedBy
                - restaurantId
                - standardPrice
                - image
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the orderer menu.'
        example: officia
        required: true
        schema:
          type: string
  /api/v1/restaurant/menu:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: query
          name: categories
          description: 'to fetch categories associated with Menu'
          example: dolore
          required: false
          schema:
            type: string
            description: 'to fetch categories associated with Menu'
            example: dolore
        -
          in: query
          name: subCategories
          description: 'to fetch categories associated with Menu'
          example: eum
          required: false
          schema:
            type: string
            description: 'to fetch categories associated with Menu'
            example: eum
        -
          in: query
          name: restaurant
          description: 'to fetch restaurant that owns with Menu'
          example: ut
          required: false
          schema:
            type: string
            description: 'to fetch restaurant that owns with Menu'
            example: ut
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Menu Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Management'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: consequatur
                description:
                  type: string
                  description: ''
                  example: est
                status:
                  type: integer
                  description: ''
                  example: 19
                createdBy:
                  type: string
                  description: ''
                  example: et
                restaurantId:
                  type: string
                  description: ''
                  example: consequatur
                standardPrice:
                  type: number
                  description: ''
                  example: 28143772.938
                image:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 2048 kilobytes.'
                categoryIds:
                  type: array
                  description: ''
                  example:
                    - 11
                  items:
                    type: integer
                subcategoryIds:
                  type: array
                  description: ''
                  example:
                    - 10
                  items:
                    type: integer
              required:
                - title
                - description
                - createdBy
                - restaurantId
                - standardPrice
                - image
      security: []
  '/api/v1/restaurant/menu/{uuid}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Menu Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Management'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  description: 'Must be a valid UUID.'
                  example: 775e23ed-3a4d-3f74-ac58-b555ae2c2e3d
                title:
                  type: string
                  description: ''
                  example: est
                description:
                  type: string
                  description: ''
                  example: dolores
                status:
                  type: integer
                  description: ''
                  example: 17
                updatedBy:
                  type: string
                  description: ''
                  example: rem
                restaurantId:
                  type: string
                  description: ''
                  example: odio
                standardPrice:
                  type: string
                  description: ''
                  example: similique
                image:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 2048 kilobytes.'
                categoryIds:
                  type: array
                  description: ''
                  example:
                    - 6
                  items:
                    type: integer
                subcategoryIds:
                  type: array
                  description: ''
                  example:
                    - 2
                  items:
                    type: integer
              required:
                - uuid
                - title
                - description
                - updatedBy
                - restaurantId
                - standardPrice
                - image
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Menu Management'
      security: []
    parameters:
      -
        in: path
        name: uuid
        description: ''
        example: 7eb6bb38-6d64-4eac-a1a4-7ecf164d2c46
        required: true
        schema:
          type: string
  /api/v1/orderer/orderers:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Orderer/Customer Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Orderer/Customer Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: dolorem
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: vita53@example.org
                phoneNo:
                  type: string
                  description: ''
                  example: null
                address:
                  type: string
                  description: ''
                  example: null
                city:
                  type: string
                  description: ''
                  example: null
                state:
                  type: string
                  description: ''
                  example: null
                mapLocation:
                  type: string
                  description: ''
                  example: null
                image:
                  type: string
                  description: ''
                  example: null
              required:
                - name
                - email
      security: []
  '/api/v1/orderer/orderers/{uuid}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Orderer/Customer Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Orderer/Customer Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  description: 'Must be a valid UUID.'
                  example: 0ef4494a-313f-39a8-a0fe-ece2bcd27d68
                name:
                  type: string
                  description: ''
                  example: numquam
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: dayton.beatty@example.org
                phoneNo:
                  type: string
                  description: ''
                  example: aut
                address:
                  type: string
                  description: ''
                  example: omnis
                city:
                  type: string
                  description: ''
                  example: sit
                state:
                  type: string
                  description: ''
                  example: aperiam
                mapLocation:
                  type: string
                  description: ''
                  example: officia
                image:
                  type: string
                  description: ''
                  example: null
              required:
                - uuid
                - name
                - email
                - phoneNo
                - address
                - city
                - state
                - mapLocation
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Orderer/Customer Management'
      security: []
    parameters:
      -
        in: path
        name: uuid
        description: ''
        example: 5726ffff-3ef4-4237-b61b-5ac351a1b9b1
        required: true
        schema:
          type: string
  /api/v1/orderer/orderer-restaurants:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: query
          name: questionnaire
          description: 'to fetch associated restaurant questionnaire answers'
          example: aliquam
          required: false
          schema:
            type: string
            description: 'to fetch associated restaurant questionnaire answers'
            example: aliquam
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: quia
                nameShort:
                  type: string
                  description: ''
                  example: null
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: noelia.koelpin@example.com
                about:
                  type: string
                  description: ''
                  example: null
                aboutShort:
                  type: string
                  description: ''
                  example: null
                phoneNo:
                  type: string
                  description: ''
                  example: null
                address:
                  type: string
                  description: ''
                  example: null
                city:
                  type: string
                  description: ''
                  example: null
                state:
                  type: string
                  description: ''
                  example: null
                postalCode:
                  type: string
                  description: ''
                  example: null
                mapLocation:
                  type: string
                  description: ''
                  example: null
                latitude:
                  type: string
                  description: ''
                  example: null
                longitude:
                  type: string
                  description: ''
                  example: null
                url:
                  type: string
                  description: ''
                  example: null
                logo:
                  type: string
                  description: ''
                  example: null
              required:
                - name
                - email
      security: []
  '/api/v1/orderer/orderer-restaurants/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  description: 'Must be a valid UUID.'
                  example: 46f57d20-da80-352f-b626-d1c0a14c252a
                name:
                  type: string
                  description: ''
                  example: iste
                nameShort:
                  type: string
                  description: ''
                  example: ipsum
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: orland57@example.net
                about:
                  type: string
                  description: ''
                  example: incidunt
                aboutShort:
                  type: string
                  description: ''
                  example: minima
                phoneNo:
                  type: string
                  description: ''
                  example: sequi
                address:
                  type: string
                  description: ''
                  example: velit
                city:
                  type: string
                  description: ''
                  example: quasi
                state:
                  type: string
                  description: ''
                  example: voluptatem
                postalCode:
                  type: string
                  description: ''
                  example: in
                mapLocation:
                  type: string
                  description: ''
                  example: voluptatibus
                url:
                  type: string
                  description: ''
                  example: null
                logo:
                  type: string
                  description: ''
                  example: null
              required:
                - uuid
                - name
                - nameShort
                - email
                - about
                - aboutShort
                - phoneNo
                - address
                - city
                - state
                - postalCode
                - mapLocation
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the orderer restaurant.'
        example: excepturi
        required: true
        schema:
          type: string
  /api/v1/restaurant/restaurants:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: query
          name: questionnaire
          description: 'to fetch associated restaurant questionnaire answers'
          example: dolorem
          required: false
          schema:
            type: string
            description: 'to fetch associated restaurant questionnaire answers'
            example: dolorem
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: eligendi
                nameShort:
                  type: string
                  description: ''
                  example: null
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: mreichel@example.com
                about:
                  type: string
                  description: ''
                  example: null
                aboutShort:
                  type: string
                  description: ''
                  example: null
                phoneNo:
                  type: string
                  description: ''
                  example: null
                address:
                  type: string
                  description: ''
                  example: null
                city:
                  type: string
                  description: ''
                  example: null
                state:
                  type: string
                  description: ''
                  example: null
                postalCode:
                  type: string
                  description: ''
                  example: null
                mapLocation:
                  type: string
                  description: ''
                  example: null
                latitude:
                  type: string
                  description: ''
                  example: null
                longitude:
                  type: string
                  description: ''
                  example: null
                url:
                  type: string
                  description: ''
                  example: null
                logo:
                  type: string
                  description: ''
                  example: null
              required:
                - name
                - email
      security: []
  '/api/v1/restaurant/restaurants/{uuid}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Management'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  description: 'Must be a valid UUID.'
                  example: d4413ac8-080a-356a-a21d-a328678d30d0
                name:
                  type: string
                  description: ''
                  example: eligendi
                nameShort:
                  type: string
                  description: ''
                  example: illum
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: sasha33@example.com
                about:
                  type: string
                  description: ''
                  example: quo
                aboutShort:
                  type: string
                  description: ''
                  example: quidem
                phoneNo:
                  type: string
                  description: ''
                  example: necessitatibus
                address:
                  type: string
                  description: ''
                  example: doloribus
                city:
                  type: string
                  description: ''
                  example: natus
                state:
                  type: string
                  description: ''
                  example: totam
                postalCode:
                  type: string
                  description: ''
                  example: dolor
                mapLocation:
                  type: string
                  description: ''
                  example: dolor
                url:
                  type: string
                  description: ''
                  example: null
                logo:
                  type: string
                  description: ''
                  example: null
              required:
                - uuid
                - name
                - nameShort
                - email
                - about
                - aboutShort
                - phoneNo
                - address
                - city
                - state
                - postalCode
                - mapLocation
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Management'
      security: []
    parameters:
      -
        in: path
        name: uuid
        description: ''
        example: 21cba068-7884-4f94-88a0-e65edfeebe1f
        required: true
        schema:
          type: string
  /api/v1/restaurant/more-info:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Questionnaire'
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Questionnaire'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                restaurantUuid:
                  type: string
                  description: ''
                  example: unde
                delivery:
                  type: string
                  description: ''
                  example: ut
                booking:
                  type: string
                  description: ''
                  example: est
              required:
                - restaurantUuid
                - delivery
                - booking
      security: []
  '/api/v1/restaurant/more-info/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Restaurant Questionnaire'
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Questionnaire'
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Restaurant Questionnaire'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the more info.'
        example: facilis
        required: true
        schema:
          type: string
tags:
  -
    name: 'Authentication Management'
    description: ''
  -
    name: 'Customer Cart'
    description: "\nCart API resource"
  -
    name: 'Customer Cart Items Management'
    description: "\nCart Items API resource"
  -
    name: 'Customer menu Bookmark Management'
    description: "\nMenuBookmark API resource"
  -
    name: Endpoints
    description: ''
  -
    name: 'Food Categories Management'
    description: "\nFood Category API resource"
  -
    name: 'Food Sub Categories'
    description: "\nFood Sub Categories API resource"
  -
    name: 'Menu Management'
    description: "\nMenu API resource"
  -
    name: 'Orderer/Customer Management'
    description: "\nOrderer/Customer API resource"
  -
    name: 'Restaurant Management'
    description: "\nRestaurant API resource"
  -
    name: 'Restaurant Questionnaire'
    description: "\nQuestionnaire API resource"
