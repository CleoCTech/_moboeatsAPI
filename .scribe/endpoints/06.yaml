name: 'Menu Management'
description: |-

  Menu API resource
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/orderer/orderer-menu
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      categories:
        name: categories
        description: 'to fetch categories associated with Menu'
        required: false
        example: qui
        type: string
        custom: []
      subCategories:
        name: subCategories
        description: 'to fetch categories associated with Menu'
        required: false
        example: rem
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'to fetch restaurant that owns with Menu'
        required: false
        example: assumenda
        type: string
        custom: []
    cleanQueryParameters:
      categories: qui
      subCategories: rem
      restaurant: assumenda
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/orderer/orderer-menu
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: vero
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: vel
        type: string
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: 15
        type: integer
        custom: []
      createdBy:
        name: createdBy
        description: ''
        required: true
        example: sequi
        type: string
        custom: []
      restaurantId:
        name: restaurantId
        description: ''
        required: true
        example: dolor
        type: string
        custom: []
      standardPrice:
        name: standardPrice
        description: ''
        required: true
        example: 1.897861
        type: number
        custom: []
      image:
        name: image
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: true
        example: null
        type: file
        custom: []
      categoryIds:
        name: categoryIds
        description: ''
        required: false
        example:
          - 13
        type: 'integer[]'
        custom: []
      subcategoryIds:
        name: subcategoryIds
        description: ''
        required: false
        example:
          - 15
        type: 'integer[]'
        custom: []
    cleanBodyParameters:
      title: vero
      description: vel
      status: 15
      createdBy: sequi
      restaurantId: dolor
      standardPrice: 1.897861
      categoryIds:
        - 13
      subcategoryIds:
        - 15
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/orderer/orderer-menu/{id}'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer menu.'
        required: true
        example: ipsum
        type: string
        custom: []
    cleanUrlParameters:
      id: ipsum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/orderer/orderer-menu/{id}'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer menu.'
        required: true
        example: culpa
        type: string
        custom: []
    cleanUrlParameters:
      id: culpa
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      uuid:
        name: uuid
        description: 'Must be a valid UUID.'
        required: true
        example: 99c7d130-e670-3b09-a88c-c015b694a3df
        type: string
        custom: []
      title:
        name: title
        description: ''
        required: true
        example: aspernatur
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: molestiae
        type: string
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: 12
        type: integer
        custom: []
      updatedBy:
        name: updatedBy
        description: ''
        required: true
        example: veniam
        type: string
        custom: []
      restaurantId:
        name: restaurantId
        description: ''
        required: true
        example: pariatur
        type: string
        custom: []
      standardPrice:
        name: standardPrice
        description: ''
        required: true
        example: perspiciatis
        type: string
        custom: []
      image:
        name: image
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: true
        example: null
        type: file
        custom: []
      categoryIds:
        name: categoryIds
        description: ''
        required: false
        example:
          - 16
        type: 'integer[]'
        custom: []
      subcategoryIds:
        name: subcategoryIds
        description: ''
        required: false
        example:
          - 8
        type: 'integer[]'
        custom: []
    cleanBodyParameters:
      uuid: 99c7d130-e670-3b09-a88c-c015b694a3df
      title: aspernatur
      description: molestiae
      status: 12
      updatedBy: veniam
      restaurantId: pariatur
      standardPrice: perspiciatis
      categoryIds:
        - 16
      subcategoryIds:
        - 8
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/orderer/orderer-menu/{id}'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer menu.'
        required: true
        example: adipisci
        type: string
        custom: []
    cleanUrlParameters:
      id: adipisci
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/menu
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      categories:
        name: categories
        description: 'to fetch categories associated with Menu'
        required: false
        example: qui
        type: string
        custom: []
      subCategories:
        name: subCategories
        description: 'to fetch categories associated with Menu'
        required: false
        example: officia
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'to fetch restaurant that owns with Menu'
        required: false
        example: facere
        type: string
        custom: []
    cleanQueryParameters:
      categories: qui
      subCategories: officia
      restaurant: facere
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/restaurant/menu
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: laudantium
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: error
        type: string
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: 2
        type: integer
        custom: []
      createdBy:
        name: createdBy
        description: ''
        required: true
        example: sunt
        type: string
        custom: []
      restaurantId:
        name: restaurantId
        description: ''
        required: true
        example: eos
        type: string
        custom: []
      standardPrice:
        name: standardPrice
        description: ''
        required: true
        example: 1323.0
        type: number
        custom: []
      image:
        name: image
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: true
        example: null
        type: file
        custom: []
      categoryIds:
        name: categoryIds
        description: ''
        required: false
        example:
          - 13
        type: 'integer[]'
        custom: []
      subcategoryIds:
        name: subcategoryIds
        description: ''
        required: false
        example:
          - 17
        type: 'integer[]'
        custom: []
    cleanBodyParameters:
      title: laudantium
      description: error
      status: 2
      createdBy: sunt
      restaurantId: eos
      standardPrice: 1323.0
      categoryIds:
        - 13
      subcategoryIds:
        - 17
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/menu/{uuid}'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 7eb6bb38-6d64-4eac-a1a4-7ecf164d2c46
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 7eb6bb38-6d64-4eac-a1a4-7ecf164d2c46
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/restaurant/menu/{uuid}'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 7eb6bb38-6d64-4eac-a1a4-7ecf164d2c46
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 7eb6bb38-6d64-4eac-a1a4-7ecf164d2c46
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      uuid:
        name: uuid
        description: 'Must be a valid UUID.'
        required: true
        example: b44417b4-5096-3913-96fb-539759365bd9
        type: string
        custom: []
      title:
        name: title
        description: ''
        required: true
        example: adipisci
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: eum
        type: string
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: 15
        type: integer
        custom: []
      updatedBy:
        name: updatedBy
        description: ''
        required: true
        example: ut
        type: string
        custom: []
      restaurantId:
        name: restaurantId
        description: ''
        required: true
        example: nam
        type: string
        custom: []
      standardPrice:
        name: standardPrice
        description: ''
        required: true
        example: enim
        type: string
        custom: []
      image:
        name: image
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: true
        example: null
        type: file
        custom: []
      categoryIds:
        name: categoryIds
        description: ''
        required: false
        example:
          - 14
        type: 'integer[]'
        custom: []
      subcategoryIds:
        name: subcategoryIds
        description: ''
        required: false
        example:
          - 4
        type: 'integer[]'
        custom: []
    cleanBodyParameters:
      uuid: b44417b4-5096-3913-96fb-539759365bd9
      title: adipisci
      description: eum
      status: 15
      updatedBy: ut
      restaurantId: nam
      standardPrice: enim
      categoryIds:
        - 14
      subcategoryIds:
        - 4
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/restaurant/menu/{uuid}'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 7eb6bb38-6d64-4eac-a1a4-7ecf164d2c46
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 7eb6bb38-6d64-4eac-a1a4-7ecf164d2c46
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
