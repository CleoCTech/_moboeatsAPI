name: 'Menu Management'
description: |-

  Menu API resource
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/groceries
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":14,"uuid":"b37bad6c-d29f-449a-83c2-e73adaa6b8ea","attributes":{"title":"Onions","description":"Tasty Onions","createdBy":"test@restaurant.com","updatedBy":"test@restaurant.com","status":"2","average_rating":0},"relationships":{"categories":[{"id":7,"uuid":"0d256427-4432-40d9-8dc9-3f7ea9ec8d82","title":"Groceries","description":"All Groceries","status":2,"createdBy":"admin@moboeats.com","updatedBy":null,"image":"http:\/\/moboeats.test\/storage\/category\/images\/BcPvTJnO6wjhOVStaN6SgEf3i3uKjEauj970APZA.png"}],"subCategories":[],"images":[{"id":5,"uuid":"c335a3e1-dbc4-4ca3-879d-1182d788cc21","attributes":{"imageUrl":"http:\/\/moboeats.test\/storage\/menus\/images\/undraw_Cooking_p7m1-65db329815d1c65db32984a5f3.png","sequence":1,"status":"2"},"relationships":{"menu":{"id":14,"uuid":"b37bad6c-d29f-449a-83c2-e73adaa6b8ea","title":"Onions"}}}],"menuPrices":[{"id":10,"uuid":"a2687d02-ce69-4071-88cf-5ea46f1da638","attributes":{"price":15,"description":"Description","status":"2"},"relationships":{"menu":{"id":14,"uuid":"b37bad6c-d29f-449a-83c2-e73adaa6b8ea","title":"Onions"}}}],"restaurant":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","attributes":{"name":"Price-Okuneva","nameShort":"et","email":"stephany76@example.com","about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","aboutShort":"Nihil voluptas ut ut nulla nihil consectetur.","phoneNo":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postalCode":"00100","latitude":"51.5072178","longitude":"-0.1275862","mapLocation":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","average_rating":4},"relationships":{"orders_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":1,"menus_count":9,"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}]},"menus_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":1,"menus_count":9,"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}]},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}]}},"discount":null,"orderItems":[],"orders_count":0,"total_orders_value":0,"reviews":[]}},{"id":15,"uuid":"f4717c18-a3ef-4801-a087-4a1471acfa83","attributes":{"title":"Onions","description":"Tasty Onions","createdBy":"test@restaurant.com","updatedBy":"test@restaurant.com","status":"2","average_rating":0},"relationships":{"categories":[{"id":7,"uuid":"0d256427-4432-40d9-8dc9-3f7ea9ec8d82","title":"Groceries","description":"All Groceries","status":2,"createdBy":"admin@moboeats.com","updatedBy":null,"image":"http:\/\/moboeats.test\/storage\/category\/images\/BcPvTJnO6wjhOVStaN6SgEf3i3uKjEauj970APZA.png"}],"subCategories":[],"images":[{"id":6,"uuid":"76fe3c6a-c937-4214-af0d-4d837b90eeb6","attributes":{"imageUrl":"http:\/\/moboeats.test\/storage\/menus\/images\/undraw_Cooking_p7m1-65db329815d1c65db329864fca.png","sequence":1,"status":"2"},"relationships":{"menu":{"id":15,"uuid":"f4717c18-a3ef-4801-a087-4a1471acfa83","title":"Onions"}}}],"menuPrices":[],"restaurant":{"id":3,"uuid":"108b5b9c-cc08-47ed-a1a8-9efc3dea760e","attributes":{"name":"Ullrich, McDermott and Hintz","nameShort":"dolorum","email":"karson.ortiz@example.com","about":"Ipsum ex dolor occaecati. Recusandae et rerum harum voluptas voluptas est velit. Ratione sint molestiae quae velit amet quaerat saepe. Voluptates aut nobis quos quam id quae numquam.\n\nVoluptatibus inventore similique ut ipsam saepe repellendus accusamus. Quod qui cum esse dolor non qui atque. Iste consequatur illum vel quasi ut qui. Vitae amet quibusdam sed.\n\nCupiditate est similique voluptatem perspiciatis deserunt. Numquam et unde debitis enim molestiae et ut quae. Asperiores ut omnis qui voluptatem earum sed rerum. Dolor perferendis esse temporibus possimus est voluptate.","aboutShort":"Sapiente praesentium consequuntur delectus dolorem molestiae et.","phoneNo":"+1.386.462.3085","address":"778 Legros Highway Suite 490","city":"Omaland","state":"Delaware","postalCode":"07024","latitude":null,"longitude":null,"mapLocation":"-11.051426,165.945581","url":"http:\/\/beier.com\/aut-qui-consequatur-totam-id.html","logo":"http:\/\/moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-17T16:34:45.000000Z","average_rating":0},"relationships":{"orders_count":{"id":3,"uuid":"108b5b9c-cc08-47ed-a1a8-9efc3dea760e","name":"Ullrich, McDermott and Hintz","name_short":"dolorum","email":"karson.ortiz@example.com","user_id":3,"about":"Ipsum ex dolor occaecati. Recusandae et rerum harum voluptas voluptas est velit. Ratione sint molestiae quae velit amet quaerat saepe. Voluptates aut nobis quos quam id quae numquam.\n\nVoluptatibus inventore similique ut ipsam saepe repellendus accusamus. Quod qui cum esse dolor non qui atque. Iste consequatur illum vel quasi ut qui. Vitae amet quibusdam sed.\n\nCupiditate est similique voluptatem perspiciatis deserunt. Numquam et unde debitis enim molestiae et ut quae. Asperiores ut omnis qui voluptatem earum sed rerum. Dolor perferendis esse temporibus possimus est voluptate.","about_short":"Sapiente praesentium consequuntur delectus dolorem molestiae et.","phone_no":"+1.386.462.3085","address":"778 Legros Highway Suite 490","city":"Omaland","state":"Delaware","postal_code":"07024","latitude":null,"longitude":null,"map_location":"-11.051426,165.945581","url":"http:\/\/beier.com\/aut-qui-consequatur-totam-id.html","logo":"http:\/\/moboeats.test\/assets\/user\/default.png","status":"Approved","created_by":"glennie.huels@hotmail.com","updated_by":"dach.earnest@auer.org","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-17T16:34:45.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":null,"orders_count":0,"menus_count":1,"reviews":[]},"menus_count":{"id":3,"uuid":"108b5b9c-cc08-47ed-a1a8-9efc3dea760e","name":"Ullrich, McDermott and Hintz","name_short":"dolorum","email":"karson.ortiz@example.com","user_id":3,"about":"Ipsum ex dolor occaecati. Recusandae et rerum harum voluptas voluptas est velit. Ratione sint molestiae quae velit amet quaerat saepe. Voluptates aut nobis quos quam id quae numquam.\n\nVoluptatibus inventore similique ut ipsam saepe repellendus accusamus. Quod qui cum esse dolor non qui atque. Iste consequatur illum vel quasi ut qui. Vitae amet quibusdam sed.\n\nCupiditate est similique voluptatem perspiciatis deserunt. Numquam et unde debitis enim molestiae et ut quae. Asperiores ut omnis qui voluptatem earum sed rerum. Dolor perferendis esse temporibus possimus est voluptate.","about_short":"Sapiente praesentium consequuntur delectus dolorem molestiae et.","phone_no":"+1.386.462.3085","address":"778 Legros Highway Suite 490","city":"Omaland","state":"Delaware","postal_code":"07024","latitude":null,"longitude":null,"map_location":"-11.051426,165.945581","url":"http:\/\/beier.com\/aut-qui-consequatur-totam-id.html","logo":"http:\/\/moboeats.test\/assets\/user\/default.png","status":"Approved","created_by":"glennie.huels@hotmail.com","updated_by":"dach.earnest@auer.org","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-17T16:34:45.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":null,"orders_count":0,"menus_count":1,"reviews":[]},"reviews":[]}},"discount":null,"orderItems":[],"orders_count":0,"total_orders_value":0,"reviews":[]}}],"links":{"first":"http:\/\/moboeats.test\/api\/v1\/groceries?page=1","last":"http:\/\/moboeats.test\/api\/v1\/groceries?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/moboeats.test\/api\/v1\/groceries?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/moboeats.test\/api\/v1\/groceries","per_page":10,"to":2,"total":2}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '299'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/menu
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      categories:
        name: categories
        description: 'to fetch categories associated with Menu'
        required: false
        example: sint
        type: string
        custom: []
      subCategories:
        name: subCategories
        description: 'to fetch categories associated with Menu'
        required: false
        example: voluptas
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'to fetch restaurant that owns with Menu'
        required: false
        example: facilis
        type: string
        custom: []
    cleanQueryParameters:
      categories: sint
      subCategories: voluptas
      restaurant: facilis
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":14,"uuid":"b37bad6c-d29f-449a-83c2-e73adaa6b8ea","attributes":{"title":"Onions","description":"Tasty Onions","createdBy":"test@restaurant.com","updatedBy":"test@restaurant.com","status":"2","average_rating":0},"relationships":{"categories":[{"id":7,"uuid":"0d256427-4432-40d9-8dc9-3f7ea9ec8d82","title":"Groceries","description":"All Groceries","status":2,"createdBy":"admin@moboeats.com","updatedBy":null,"image":"http:\/\/moboeats.test\/storage\/category\/images\/BcPvTJnO6wjhOVStaN6SgEf3i3uKjEauj970APZA.png","subCategories":[{"id":1,"uuid":"b01545ac-aa5d-48bd-a1eb-04bfff75e0d3","title":"Dairy","description":"dairy description","status":2,"createdBy":"admin@moboeats.com","updatedBy":null}]}],"images":[{"id":5,"uuid":"c335a3e1-dbc4-4ca3-879d-1182d788cc21","attributes":{"imageUrl":"http:\/\/moboeats.test\/storage\/menus\/images\/undraw_Cooking_p7m1-65db329815d1c65db32984a5f3.png","sequence":1,"status":"2"},"relationships":{"menu":{"id":14,"uuid":"b37bad6c-d29f-449a-83c2-e73adaa6b8ea","title":"Onions"}}}],"menuPrices":[{"id":10,"uuid":"a2687d02-ce69-4071-88cf-5ea46f1da638","attributes":{"price":15,"description":"Description","status":"2"},"relationships":{"menu":{"id":14,"uuid":"b37bad6c-d29f-449a-83c2-e73adaa6b8ea","title":"Onions"}}}],"restaurant":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","attributes":{"name":"Price-Okuneva","nameShort":"et","email":"stephany76@example.com","about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","aboutShort":"Nihil voluptas ut ut nulla nihil consectetur.","phoneNo":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postalCode":"00100","latitude":"51.5072178","longitude":"-0.1275862","mapLocation":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","average_rating":4},"relationships":{"orders_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":1,"menus_count":9,"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}]},"menus_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":1,"menus_count":9,"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}]},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}]}},"discount":null,"orderItems":[],"orders_count":0,"total_orders_value":0,"reviews":[]}}],"links":{"first":"http:\/\/moboeats.test\/api\/v1\/menu?page=1","last":"http:\/\/moboeats.test\/api\/v1\/menu?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/moboeats.test\/api\/v1\/menu?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/moboeats.test\/api\/v1\/menu","per_page":15,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '298'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/orderer/groceries
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/orderer/orderer-restaurants/{restaurant?}/menu'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant:
        name: restaurant
        description: ''
        required: false
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/orderer/orderer-menu
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      categories:
        name: categories
        description: 'to fetch categories associated with Menu'
        required: false
        example: corrupti
        type: string
        custom: []
      subCategories:
        name: subCategories
        description: 'to fetch categories associated with Menu'
        required: false
        example: nam
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'to fetch restaurant that owns with Menu'
        required: false
        example: odit
        type: string
        custom: []
    cleanQueryParameters:
      categories: corrupti
      subCategories: nam
      restaurant: odit
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/orderer/orderer-menu
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: sequi
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: ut
        type: string
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: 11
        type: integer
        custom: []
      categoryIds:
        name: categoryIds
        description: ''
        required: false
        example:
          - 5
        type: 'integer[]'
        custom: []
    cleanBodyParameters:
      title: sequi
      description: ut
      status: 11
      categoryIds:
        - 5
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/orderer/orderer-menu/{id}'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer menu.'
        required: true
        example: dolore
        type: string
        custom: []
    cleanUrlParameters:
      id: dolore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/orderer/orderer-menu/{id}'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer menu.'
        required: true
        example: sed
        type: string
        custom: []
    cleanUrlParameters:
      id: sed
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: ea
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: et
        type: string
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: 1
        type: integer
        custom: []
      categoryIds:
        name: categoryIds
        description: ''
        required: false
        example:
          - 20
        type: 'integer[]'
        custom: []
    cleanBodyParameters:
      title: ea
      description: et
      status: 1
      categoryIds:
        - 20
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/orderer/menu/reviews/store
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Store review for an menu item'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      menu_id:
        name: menu_id
        description: 'The id of the menu item'
        required: true
        example: 15
        type: integer
        custom: []
      menu_rating:
        name: menu_rating
        description: 'The rating of the menu from 1 - 5'
        required: true
        example: 11
        type: integer
        custom: []
      menu_review:
        name: menu_review
        description: 'A review of the menu'
        required: false
        example: facere
        type: string
        custom: []
      order_id:
        name: order_id
        description: 'The id of the order'
        required: false
        example: 1
        type: integer
        custom: []
    cleanBodyParameters:
      menu_id: 15
      menu_rating: 11
      menu_review: facere
      order_id: 1
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/menu
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      categories:
        name: categories
        description: 'to fetch categories associated with Menu'
        required: false
        example: corrupti
        type: string
        custom: []
      subCategories:
        name: subCategories
        description: 'to fetch categories associated with Menu'
        required: false
        example: officia
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'to fetch restaurant that owns with Menu'
        required: false
        example: doloremque
        type: string
        custom: []
    cleanQueryParameters:
      categories: corrupti
      subCategories: officia
      restaurant: doloremque
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/restaurant/menu
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: architecto
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: voluptatum
        type: string
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: 11
        type: integer
        custom: []
      categoryIds:
        name: categoryIds
        description: ''
        required: false
        example:
          - 12
        type: 'integer[]'
        custom: []
    cleanBodyParameters:
      title: architecto
      description: voluptatum
      status: 11
      categoryIds:
        - 12
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/menu/{uuid}'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: e86aa007-66ba-4a51-88c9-53f0c21f0e3b
        type: string
        custom: []
    cleanUrlParameters:
      uuid: e86aa007-66ba-4a51-88c9-53f0c21f0e3b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/restaurant/menu/{uuid}'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: e86aa007-66ba-4a51-88c9-53f0c21f0e3b
        type: string
        custom: []
    cleanUrlParameters:
      uuid: e86aa007-66ba-4a51-88c9-53f0c21f0e3b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: et
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: doloremque
        type: string
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: 5
        type: integer
        custom: []
      categoryIds:
        name: categoryIds
        description: ''
        required: false
        example:
          - 12
        type: 'integer[]'
        custom: []
    cleanBodyParameters:
      title: et
      description: doloremque
      status: 5
      categoryIds:
        - 12
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/menu/{menu_uuid}/reviews'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Restaurant Reviews'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      menu_uuid:
        name: menu_uuid
        description: ''
        required: true
        example: e86aa007-66ba-4a51-88c9-53f0c21f0e3b
        type: string
        custom: []
    cleanUrlParameters:
      menu_uuid: e86aa007-66ba-4a51-88c9-53f0c21f0e3b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/groceries
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/groceries/export/data
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/{restaurant_uuid}/groceries'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/{id}/menu/add'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the restaurant.'
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      id: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: iusto
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: distinctio
        type: string
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: 14
        type: integer
        custom: []
      categoryIds:
        name: categoryIds
        description: ''
        required: false
        example:
          - 18
        type: 'integer[]'
        custom: []
    cleanBodyParameters:
      title: iusto
      description: distinctio
      status: 14
      categoryIds:
        - 18
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/menu/{id}/update'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the menu.'
        required: true
        example: e86aa007-66ba-4a51-88c9-53f0c21f0e3b
        type: string
        custom: []
    cleanUrlParameters:
      id: e86aa007-66ba-4a51-88c9-53f0c21f0e3b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: recusandae
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: rerum
        type: string
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: 6
        type: integer
        custom: []
      categoryIds:
        name: categoryIds
        description: ''
        required: false
        example:
          - 2
        type: 'integer[]'
        custom: []
    cleanBodyParameters:
      title: recusandae
      description: rerum
      status: 6
      categoryIds:
        - 2
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/menu/{id}/images/update'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the menu.'
        required: true
        example: e86aa007-66ba-4a51-88c9-53f0c21f0e3b
        type: string
        custom: []
    cleanUrlParameters:
      id: e86aa007-66ba-4a51-88c9-53f0c21f0e3b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/menus
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/menus/export/data
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/restaurant/menu/create
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      restaurant_ids:
        name: restaurant_ids
        description: ''
        required: true
        example: aut
        type: string
        custom: []
      title:
        name: title
        description: ''
        required: true
        example: voluptatum
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: eius
        type: string
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: 2
        type: integer
        custom: []
      categoryIds:
        name: categoryIds
        description: ''
        required: true
        example: odio
        type: string
        custom: []
    cleanBodyParameters:
      restaurant_ids: aut
      title: voluptatum
      description: eius
      status: 2
      categoryIds: odio
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/menus/{menu_uuid}/update'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      menu_uuid:
        name: menu_uuid
        description: ''
        required: true
        example: e86aa007-66ba-4a51-88c9-53f0c21f0e3b
        type: string
        custom: []
    cleanUrlParameters:
      menu_uuid: e86aa007-66ba-4a51-88c9-53f0c21f0e3b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      restaurant_ids:
        name: restaurant_ids
        description: ''
        required: false
        example:
          - 10
        type: 'integer[]'
        custom: []
      title:
        name: title
        description: ''
        required: true
        example: quia
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: assumenda
        type: string
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: 10
        type: integer
        custom: []
      categoryIds:
        name: categoryIds
        description: ''
        required: false
        example:
          - 15
        type: 'integer[]'
        custom: []
    cleanBodyParameters:
      restaurant_ids:
        - 10
      title: quia
      description: assumenda
      status: 10
      categoryIds:
        - 15
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/menus/{menu_uuid}/orders'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      menu_uuid:
        name: menu_uuid
        description: ''
        required: true
        example: e86aa007-66ba-4a51-88c9-53f0c21f0e3b
        type: string
        custom: []
    cleanUrlParameters:
      menu_uuid: e86aa007-66ba-4a51-88c9-53f0c21f0e3b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
