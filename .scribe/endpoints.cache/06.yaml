## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Menu Management'
description: |-

  Menu API resource
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/orderer/orderer-menu
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      categories:
        name: categories
        description: 'to fetch categories associated with Menu'
        required: false
        example: non
        type: string
        custom: []
      subCategories:
        name: subCategories
        description: 'to fetch categories associated with Menu'
        required: false
        example: esse
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'to fetch restaurant that owns with Menu'
        required: false
        example: libero
        type: string
        custom: []
    cleanQueryParameters:
      categories: non
      subCategories: esse
      restaurant: libero
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/orderer/orderer-menu
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: nihil
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: magni
        type: string
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: 3
        type: integer
        custom: []
      createdBy:
        name: createdBy
        description: ''
        required: true
        example: quo
        type: string
        custom: []
      restaurantId:
        name: restaurantId
        description: ''
        required: true
        example: quos
        type: string
        custom: []
      standardPrice:
        name: standardPrice
        description: ''
        required: true
        example: 16129.458236
        type: number
        custom: []
      image:
        name: image
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: true
        example: null
        type: file
        custom: []
      categoryIds:
        name: categoryIds
        description: ''
        required: false
        example:
          - 13
        type: 'integer[]'
        custom: []
      subcategoryIds:
        name: subcategoryIds
        description: ''
        required: false
        example:
          - 11
        type: 'integer[]'
        custom: []
    cleanBodyParameters:
      title: nihil
      description: magni
      status: 3
      createdBy: quo
      restaurantId: quos
      standardPrice: 16129.458236
      categoryIds:
        - 13
      subcategoryIds:
        - 11
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/orderer/orderer-menu/{id}'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer menu.'
        required: true
        example: officia
        type: string
        custom: []
    cleanUrlParameters:
      id: officia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/orderer/orderer-menu/{id}'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer menu.'
        required: true
        example: nihil
        type: string
        custom: []
    cleanUrlParameters:
      id: nihil
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      uuid:
        name: uuid
        description: 'Must be a valid UUID.'
        required: true
        example: 89717d67-5aa7-3c0b-a8e8-91b512034ac9
        type: string
        custom: []
      title:
        name: title
        description: ''
        required: true
        example: porro
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: id
        type: string
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: 3
        type: integer
        custom: []
      updatedBy:
        name: updatedBy
        description: ''
        required: true
        example: fugit
        type: string
        custom: []
      restaurantId:
        name: restaurantId
        description: ''
        required: true
        example: qui
        type: string
        custom: []
      standardPrice:
        name: standardPrice
        description: ''
        required: true
        example: qui
        type: string
        custom: []
      image:
        name: image
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: true
        example: null
        type: file
        custom: []
      categoryIds:
        name: categoryIds
        description: ''
        required: false
        example:
          - 1
        type: 'integer[]'
        custom: []
      subcategoryIds:
        name: subcategoryIds
        description: ''
        required: false
        example:
          - 3
        type: 'integer[]'
        custom: []
    cleanBodyParameters:
      uuid: 89717d67-5aa7-3c0b-a8e8-91b512034ac9
      title: porro
      description: id
      status: 3
      updatedBy: fugit
      restaurantId: qui
      standardPrice: qui
      categoryIds:
        - 1
      subcategoryIds:
        - 3
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/orderer/orderer-menu/{id}'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer menu.'
        required: true
        example: doloribus
        type: string
        custom: []
    cleanUrlParameters:
      id: doloribus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/menu
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      categories:
        name: categories
        description: 'to fetch categories associated with Menu'
        required: false
        example: dolore
        type: string
        custom: []
      subCategories:
        name: subCategories
        description: 'to fetch categories associated with Menu'
        required: false
        example: eum
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'to fetch restaurant that owns with Menu'
        required: false
        example: ut
        type: string
        custom: []
    cleanQueryParameters:
      categories: dolore
      subCategories: eum
      restaurant: ut
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/restaurant/menu
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: est
        type: string
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: 19
        type: integer
        custom: []
      createdBy:
        name: createdBy
        description: ''
        required: true
        example: et
        type: string
        custom: []
      restaurantId:
        name: restaurantId
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      standardPrice:
        name: standardPrice
        description: ''
        required: true
        example: 28143772.938
        type: number
        custom: []
      image:
        name: image
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: true
        example: null
        type: file
        custom: []
      categoryIds:
        name: categoryIds
        description: ''
        required: false
        example:
          - 11
        type: 'integer[]'
        custom: []
      subcategoryIds:
        name: subcategoryIds
        description: ''
        required: false
        example:
          - 10
        type: 'integer[]'
        custom: []
    cleanBodyParameters:
      title: consequatur
      description: est
      status: 19
      createdBy: et
      restaurantId: consequatur
      standardPrice: 28143772.938
      categoryIds:
        - 11
      subcategoryIds:
        - 10
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/menu/{uuid}'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 7eb6bb38-6d64-4eac-a1a4-7ecf164d2c46
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 7eb6bb38-6d64-4eac-a1a4-7ecf164d2c46
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/restaurant/menu/{uuid}'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 7eb6bb38-6d64-4eac-a1a4-7ecf164d2c46
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 7eb6bb38-6d64-4eac-a1a4-7ecf164d2c46
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      uuid:
        name: uuid
        description: 'Must be a valid UUID.'
        required: true
        example: 775e23ed-3a4d-3f74-ac58-b555ae2c2e3d
        type: string
        custom: []
      title:
        name: title
        description: ''
        required: true
        example: est
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: dolores
        type: string
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: 17
        type: integer
        custom: []
      updatedBy:
        name: updatedBy
        description: ''
        required: true
        example: rem
        type: string
        custom: []
      restaurantId:
        name: restaurantId
        description: ''
        required: true
        example: odio
        type: string
        custom: []
      standardPrice:
        name: standardPrice
        description: ''
        required: true
        example: similique
        type: string
        custom: []
      image:
        name: image
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: true
        example: null
        type: file
        custom: []
      categoryIds:
        name: categoryIds
        description: ''
        required: false
        example:
          - 6
        type: 'integer[]'
        custom: []
      subcategoryIds:
        name: subcategoryIds
        description: ''
        required: false
        example:
          - 2
        type: 'integer[]'
        custom: []
    cleanBodyParameters:
      uuid: 775e23ed-3a4d-3f74-ac58-b555ae2c2e3d
      title: est
      description: dolores
      status: 17
      updatedBy: rem
      restaurantId: odio
      standardPrice: similique
      categoryIds:
        - 6
      subcategoryIds:
        - 2
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/restaurant/menu/{uuid}'
    metadata:
      groupName: 'Menu Management'
      groupDescription: |-

        Menu API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 7eb6bb38-6d64-4eac-a1a4-7ecf164d2c46
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 7eb6bb38-6d64-4eac-a1a4-7ecf164d2c46
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
