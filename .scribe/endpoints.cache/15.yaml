## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Rider Profile APIs'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/orderer/rider/reviews/store
    metadata:
      groupName: 'Rider Profile APIs'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store review for a rider'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      rider_id:
        name: rider_id
        description: 'The id of the rider'
        required: false
        example: 4
        type: integer
        custom: []
      rating:
        name: rating
        description: 'The rating from 1 - 5'
        required: false
        example: 2
        type: integer
        custom: []
      review:
        name: review
        description: 'A review of the rider'
        required: false
        example: quia
        type: string
        custom: []
    cleanBodyParameters:
      rider_id: 4
      rating: 2
      review: quia
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/rider/profile/create
    metadata:
      groupName: 'Rider Profile APIs'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Rider Profile'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      vehicle_type:
        name: vehicle_type
        description: 'The vehicle type of the rider'
        required: true
        example: tempore
        type: string
        custom: []
      vehicle_license_plate:
        name: vehicle_license_plate
        description: ''
        required: true
        example: temporibus
        type: string
        custom: []
      profile_picture:
        name: profile_picture
        description: 'The profile picture of the rider'
        required: true
        example: null
        type: file
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: fay.effie@example.com
        type: string
        custom: []
      vehicle_licesne_plate:
        name: vehicle_licesne_plate
        description: "The license plate of the rider's vehicle"
        required: true
        example: sed
        type: sring
        custom: []
      city:
        name: city
        description: 'The city where the rider is located'
        required: false
        example: temporibus
        type: string
        custom: []
      state:
        name: state
        description: 'The state of where the rider is located'
        required: false
        example: voluptatem
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: 'The postal code of the rider'
        required: false
        example: officia
        type: string
        custom: []
    cleanBodyParameters:
      vehicle_type: tempore
      vehicle_license_plate: temporibus
      paypal_email: fay.effie@example.com
      vehicle_licesne_plate: sed
      city: temporibus
      state: voluptatem
      postal_code: officia
    fileParameters:
      profile_picture: null
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/rider/profile/update
    metadata:
      groupName: 'Rider Profile APIs'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Rider Prodile'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: false
        example: null
        type: string
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: yundt.kaleb@example.net
        type: string
        custom: []
      vehicle_type:
        name: vehicle_type
        description: 'The vehicle type of the rider'
        required: false
        example: quia
        type: string
        custom: []
      vehicle_licesne_plate:
        name: vehicle_licesne_plate
        description: "The license plate of the rider's vehicle"
        required: false
        example: necessitatibus
        type: sring
        custom: []
      profile_picture:
        name: profile_picture
        description: 'The profile picture of the rider'
        required: false
        example: null
        type: file
        custom: []
      city:
        name: city
        description: 'The city where the rider is located'
        required: false
        example: corporis
        type: string
        custom: []
      state:
        name: state
        description: 'The state of where the rider is located'
        required: false
        example: ut
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: 'The postal code of the rider'
        required: false
        example: qui
        type: string
        custom: []
    cleanBodyParameters:
      paypal_email: yundt.kaleb@example.net
      vehicle_type: quia
      vehicle_licesne_plate: necessitatibus
      city: corporis
      state: ut
      postal_code: qui
    fileParameters:
      profile_picture: null
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/rider/profile
    metadata:
      groupName: 'Rider Profile APIs'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Rider Profile'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/rider/orders
    metadata:
      groupName: 'Rider Profile APIs'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Orders and Assigned Orders'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/rider/orders/update
    metadata:
      groupName: 'Rider Profile APIs'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      order_id:
        name: order_id
        description: ''
        required: true
        example: maxime
        type: string
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: vitae
        type: string
        custom: []
    cleanBodyParameters:
      order_id: maxime
      status: vitae
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/rider/orders/{order_id}/delivery/location/update'
    metadata:
      groupName: 'Rider Profile APIs'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the location of the rider dueing delivery'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      order_id:
        name: order_id
        description: 'The Id of order'
        required: true
        example: voluptatibus
        type: string
        custom: []
    cleanUrlParameters:
      order_id: voluptatibus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      longitude:
        name: longitude
        description: 'The longitude of the rider'
        required: true
        example: saepe
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'The latitude of the rider'
        required: true
        example: sed
        type: string
        custom: []
    cleanBodyParameters:
      longitude: saepe
      latitude: sed
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/rider/location/update
    metadata:
      groupName: 'Rider Profile APIs'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the location of the rider when not delivering'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      longitude:
        name: longitude
        description: 'The longitude'
        required: true
        example: labore
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'The latitude'
        required: true
        example: ea
        type: string
        custom: []
    cleanBodyParameters:
      longitude: labore
      latitude: ea
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/rider/tips
    metadata:
      groupName: 'Rider Profile APIs'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Tips paid to the rider'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/rider/earnings
    metadata:
      groupName: 'Rider Profile APIs'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Rider Earninggs'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
