## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Restaurant Management'
description: |-

  Restaurant API resource
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","attributes":{"name":"Price-Okuneva","nameShort":"et","email":"stephany76@example.com","about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","aboutShort":"Nihil voluptas ut ut nulla nihil consectetur.","phoneNo":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postalCode":"00100","latitude":"51.5072178","longitude":"-0.1275862","mapLocation":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","average_rating":4,"is_open":true},"relationships":{"questionnaire":{"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurantId":1,"delivery":1,"booking":0},"orders_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":0,"menus_count":9,"questionnaire":{"id":1,"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurant_id":1,"delivery":1,"booking":0,"status":2,"created_by":"jacobi.domingo@gmail.com","updated_by":"dmonahan@rempel.com","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-17T16:34:45.000000Z"},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"menus_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":0,"menus_count":9,"questionnaire":{"id":1,"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurant_id":1,"delivery":1,"booking":0,"status":2,"created_by":"jacobi.domingo@gmail.com","updated_by":"dmonahan@rempel.com","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-17T16:34:45.000000Z"},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}]}}],"links":{"first":"http:\/\/moboeats.test\/api\/v1\/restaurants?page=1","last":"http:\/\/moboeats.test\/api\/v1\/restaurants?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/moboeats.test\/api\/v1\/restaurants?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/moboeats.test\/api\/v1\/restaurants","per_page":15,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '296'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurants/{restaurant_uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: eius
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      restaurant: eius
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","attributes":{"name":"Price-Okuneva","nameShort":"et","email":"stephany76@example.com","about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","aboutShort":"Nihil voluptas ut ut nulla nihil consectetur.","phoneNo":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postalCode":"00100","latitude":"51.5072178","longitude":"-0.1275862","mapLocation":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","average_rating":4,"is_open":true},"relationships":{"operating_hours":[{"id":30,"restaurant_id":1,"day":"Monday","opening_time":"20:46","closing_time":"03:03","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":31,"restaurant_id":1,"day":"Tuesday","opening_time":"04:19","closing_time":"06:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":32,"restaurant_id":1,"day":"Wednesday","opening_time":"10:58","closing_time":"19:00","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":33,"restaurant_id":1,"day":"Thursday","opening_time":"22:55","closing_time":"02:54","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":34,"restaurant_id":1,"day":"Friday","opening_time":"06:32","closing_time":"19:20","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":35,"restaurant_id":1,"day":"Saturday","opening_time":"06:38","closing_time":"19:58","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":36,"restaurant_id":1,"day":"Sunday","opening_time":"09:07","closing_time":"19:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"}],"orders_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":0,"menus_count":9,"operating_hours":[{"id":30,"restaurant_id":1,"day":"Monday","opening_time":"20:46","closing_time":"03:03","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":31,"restaurant_id":1,"day":"Tuesday","opening_time":"04:19","closing_time":"06:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":32,"restaurant_id":1,"day":"Wednesday","opening_time":"10:58","closing_time":"19:00","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":33,"restaurant_id":1,"day":"Thursday","opening_time":"22:55","closing_time":"02:54","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":34,"restaurant_id":1,"day":"Friday","opening_time":"06:32","closing_time":"19:20","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":35,"restaurant_id":1,"day":"Saturday","opening_time":"06:38","closing_time":"19:58","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":36,"restaurant_id":1,"day":"Sunday","opening_time":"09:07","closing_time":"19:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"}],"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"menus_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":0,"menus_count":9,"operating_hours":[{"id":30,"restaurant_id":1,"day":"Monday","opening_time":"20:46","closing_time":"03:03","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":31,"restaurant_id":1,"day":"Tuesday","opening_time":"04:19","closing_time":"06:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":32,"restaurant_id":1,"day":"Wednesday","opening_time":"10:58","closing_time":"19:00","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":33,"restaurant_id":1,"day":"Thursday","opening_time":"22:55","closing_time":"02:54","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":34,"restaurant_id":1,"day":"Friday","opening_time":"06:32","closing_time":"19:20","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":35,"restaurant_id":1,"day":"Saturday","opening_time":"06:38","closing_time":"19:58","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":36,"restaurant_id":1,"day":"Sunday","opening_time":"09:07","closing_time":"19:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"}],"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}]}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '295'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/seating-areas
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/orderer/orderer-restaurants/rated
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Rated and Reviewed Restaurants.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","attributes":{"name":"Price-Okuneva","nameShort":"et","email":"stephany76@example.com","about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","aboutShort":"Nihil voluptas ut ut nulla nihil consectetur.","phoneNo":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postalCode":"00100","latitude":"51.5072178","longitude":"-0.1275862","mapLocation":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","average_rating":4,"is_open":true},"relationships":{"questionnaire":{"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurantId":1,"delivery":1,"booking":0},"orders_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":0,"menus_count":9,"questionnaire":{"id":1,"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurant_id":1,"delivery":1,"booking":0,"status":2,"created_by":"jacobi.domingo@gmail.com","updated_by":"dmonahan@rempel.com","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-17T16:34:45.000000Z"},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"menus_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":0,"menus_count":9,"questionnaire":{"id":1,"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurant_id":1,"delivery":1,"booking":0,"status":2,"created_by":"jacobi.domingo@gmail.com","updated_by":"dmonahan@rempel.com","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-17T16:34:45.000000Z"},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}]}}],"links":{"first":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/rated?page=1","last":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/rated?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/rated?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/rated","per_page":15,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '284'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/orderer/orderer-restaurants/{restaurant_uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: recusandae
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      restaurant: recusandae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","attributes":{"name":"Price-Okuneva","nameShort":"et","email":"stephany76@example.com","about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","aboutShort":"Nihil voluptas ut ut nulla nihil consectetur.","phoneNo":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postalCode":"00100","latitude":"51.5072178","longitude":"-0.1275862","mapLocation":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","average_rating":4,"is_open":true},"relationships":{"operating_hours":[{"id":30,"restaurant_id":1,"day":"Monday","opening_time":"20:46","closing_time":"03:03","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":31,"restaurant_id":1,"day":"Tuesday","opening_time":"04:19","closing_time":"06:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":32,"restaurant_id":1,"day":"Wednesday","opening_time":"10:58","closing_time":"19:00","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":33,"restaurant_id":1,"day":"Thursday","opening_time":"22:55","closing_time":"02:54","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":34,"restaurant_id":1,"day":"Friday","opening_time":"06:32","closing_time":"19:20","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":35,"restaurant_id":1,"day":"Saturday","opening_time":"06:38","closing_time":"19:58","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":36,"restaurant_id":1,"day":"Sunday","opening_time":"09:07","closing_time":"19:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"}],"orders_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":0,"menus_count":9,"operating_hours":[{"id":30,"restaurant_id":1,"day":"Monday","opening_time":"20:46","closing_time":"03:03","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":31,"restaurant_id":1,"day":"Tuesday","opening_time":"04:19","closing_time":"06:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":32,"restaurant_id":1,"day":"Wednesday","opening_time":"10:58","closing_time":"19:00","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":33,"restaurant_id":1,"day":"Thursday","opening_time":"22:55","closing_time":"02:54","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":34,"restaurant_id":1,"day":"Friday","opening_time":"06:32","closing_time":"19:20","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":35,"restaurant_id":1,"day":"Saturday","opening_time":"06:38","closing_time":"19:58","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":36,"restaurant_id":1,"day":"Sunday","opening_time":"09:07","closing_time":"19:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"}],"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"menus_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":0,"menus_count":9,"operating_hours":[{"id":30,"restaurant_id":1,"day":"Monday","opening_time":"20:46","closing_time":"03:03","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":31,"restaurant_id":1,"day":"Tuesday","opening_time":"04:19","closing_time":"06:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":32,"restaurant_id":1,"day":"Wednesday","opening_time":"10:58","closing_time":"19:00","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":33,"restaurant_id":1,"day":"Thursday","opening_time":"22:55","closing_time":"02:54","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":34,"restaurant_id":1,"day":"Friday","opening_time":"06:32","closing_time":"19:20","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":35,"restaurant_id":1,"day":"Saturday","opening_time":"06:38","closing_time":"19:58","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":36,"restaurant_id":1,"day":"Sunday","opening_time":"09:07","closing_time":"19:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"}],"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}]}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '283'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/orderer/orderer-grocery-shops
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Grocery SHops'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","attributes":{"name":"Price-Okuneva","nameShort":"et","email":"stephany76@example.com","about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","aboutShort":"Nihil voluptas ut ut nulla nihil consectetur.","phoneNo":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postalCode":"00100","latitude":"51.5072178","longitude":"-0.1275862","mapLocation":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","average_rating":4,"is_open":true},"relationships":{"questionnaire":{"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurantId":1,"delivery":1,"booking":0},"orders_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":0,"menus_count":9,"questionnaire":{"id":1,"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurant_id":1,"delivery":1,"booking":0,"status":2,"created_by":"jacobi.domingo@gmail.com","updated_by":"dmonahan@rempel.com","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-17T16:34:45.000000Z"},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"menus_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":0,"menus_count":9,"questionnaire":{"id":1,"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurant_id":1,"delivery":1,"booking":0,"status":2,"created_by":"jacobi.domingo@gmail.com","updated_by":"dmonahan@rempel.com","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-17T16:34:45.000000Z"},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}]}}],"links":{"first":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-grocery-shops?page=1","last":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-grocery-shops?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-grocery-shops?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-grocery-shops","per_page":15,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '281'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/orderer/orderer-restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","attributes":{"name":"Price-Okuneva","nameShort":"et","email":"stephany76@example.com","about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","aboutShort":"Nihil voluptas ut ut nulla nihil consectetur.","phoneNo":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postalCode":"00100","latitude":"51.5072178","longitude":"-0.1275862","mapLocation":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","average_rating":4,"is_open":true},"relationships":{"questionnaire":{"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurantId":1,"delivery":1,"booking":0},"orders_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":0,"menus_count":9,"questionnaire":{"id":1,"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurant_id":1,"delivery":1,"booking":0,"status":2,"created_by":"jacobi.domingo@gmail.com","updated_by":"dmonahan@rempel.com","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-17T16:34:45.000000Z"},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"menus_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":0,"menus_count":9,"questionnaire":{"id":1,"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurant_id":1,"delivery":1,"booking":0,"status":2,"created_by":"jacobi.domingo@gmail.com","updated_by":"dmonahan@rempel.com","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-17T16:34:45.000000Z"},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}]}}],"links":{"first":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants?page=1","last":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants","per_page":15,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '280'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/orderer/orderer-restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: suscipit
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: in
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: phoebe13@example.com
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: ut
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: assumenda
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: false
        example: null
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: null
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: false
        example: null
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: false
        example: null
        type: string
        custom: []
      place_id:
        name: place_id
        description: ''
        required: true
        example: atque
        type: string
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: rem
        type: string
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: eos
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: true
        example: ipsum
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      sitting_capacity:
        name: sitting_capacity
        description: ''
        required: true
        example: 20
        type: integer
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: nbotsford@example.net
        type: string
        custom: []
    cleanBodyParameters:
      name: suscipit
      name_short: in
      email: phoebe13@example.com
      about: ut
      about_short: assumenda
      place_id: atque
      latitude: rem
      longitude: eos
      logo: ipsum
      sitting_capacity: 20
      paypal_email: nbotsford@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/orderer/orderer-restaurants/{id}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer restaurant.'
        required: true
        example: cumque
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: et
        type: string
        custom: []
    cleanUrlParameters:
      id: cumque
      restaurant: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"status":"Error has occured...","message":"Restaurant record not found.","data":"Restaurant Not Found"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '279'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/orderer/orderer-restaurants/{id}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer restaurant.'
        required: true
        example: unde
        type: string
        custom: []
    cleanUrlParameters:
      id: unde
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: eos
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: quis
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: marilou.heathcote@example.net
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: veniam
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: atque
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: true
        example: qui
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: praesentium
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: et
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: true
        example: eius
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: null
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: quod
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: eligendi
        type: string
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: luciano.cremin@example.com
        type: string
        custom: []
    cleanBodyParameters:
      name: eos
      name_short: quis
      email: marilou.heathcote@example.net
      about: veniam
      about_short: atque
      phone_no: qui
      address: praesentium
      state: et
      postal_code: eius
      latitude: quod
      longitude: eligendi
      paypal_email: luciano.cremin@example.com
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/orderer/orderer-restaurants/{id}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer restaurant.'
        required: true
        example: cupiditate
        type: string
        custom: []
    cleanUrlParameters:
      id: cupiditate
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/orderer/orderer-restaurants/{restaurant_uuid}/tables'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"Request was succesful","message":null,"data":{"current_page":1,"data":[],"first_page_url":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/4a9e2363-67d1-4661-84e4-e3f4815ef30b\/tables?page=1","from":null,"last_page":1,"last_page_url":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/4a9e2363-67d1-4661-84e4-e3f4815ef30b\/tables?page=1","links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/4a9e2363-67d1-4661-84e4-e3f4815ef30b\/tables?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"next_page_url":null,"path":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/4a9e2363-67d1-4661-84e4-e3f4815ef30b\/tables","per_page":10,"prev_page_url":null,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '268'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/orderer/restaurant/reviews/store
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Store review for a restaurant'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      restaurant_id:
        name: restaurant_id
        description: 'The id of the restaurant'
        required: false
        example: 2
        type: integer
        custom: []
      rating:
        name: rating
        description: 'The rating from 1 - 5'
        required: false
        example: 7
        type: integer
        custom: []
      review:
        name: review
        description: 'A review of the restaurant'
        required: false
        example: molestias
        type: string
        custom: []
    cleanBodyParameters:
      restaurant_id: 2
      rating: 7
      review: molestias
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/rider/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/rider/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: veritatis
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: quia
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: buck.hudson@example.net
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: dolor
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: iusto
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: false
        example: null
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: null
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: false
        example: null
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: false
        example: null
        type: string
        custom: []
      place_id:
        name: place_id
        description: ''
        required: true
        example: non
        type: string
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: doloremque
        type: string
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: magni
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: true
        example: suscipit
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      sitting_capacity:
        name: sitting_capacity
        description: ''
        required: true
        example: 16
        type: integer
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: zrippin@example.net
        type: string
        custom: []
    cleanBodyParameters:
      name: veritatis
      name_short: quia
      email: buck.hudson@example.net
      about: dolor
      about_short: iusto
      place_id: non
      latitude: doloremque
      longitude: magni
      logo: suscipit
      sitting_capacity: 16
      paypal_email: zrippin@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/rider/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: laborum
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      restaurant: laborum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/rider/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: et
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: repellat
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: augustus.baumbach@example.org
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: repellendus
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: ipsam
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: true
        example: quibusdam
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: ullam
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: ut
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: true
        example: esse
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: null
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: expedita
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: natus
        type: string
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: parisian.joanny@example.com
        type: string
        custom: []
    cleanBodyParameters:
      name: et
      name_short: repellat
      email: augustus.baumbach@example.org
      about: repellendus
      about_short: ipsam
      phone_no: quibusdam
      address: ullam
      state: ut
      postal_code: esse
      latitude: expedita
      longitude: natus
      paypal_email: parisian.joanny@example.com
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/rider/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/restaurant/restaurant
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: dolorem
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: sed
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: phyllis74@example.net
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: qui
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: quis
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: false
        example: null
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: null
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: false
        example: null
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: false
        example: null
        type: string
        custom: []
      place_id:
        name: place_id
        description: ''
        required: true
        example: omnis
        type: string
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: sequi
        type: string
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: consectetur
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: true
        example: sed
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      sitting_capacity:
        name: sitting_capacity
        description: ''
        required: true
        example: 20
        type: integer
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: brown.kaia@example.net
        type: string
        custom: []
    cleanBodyParameters:
      name: dolorem
      name_short: sed
      email: phyllis74@example.net
      about: qui
      about_short: quis
      place_id: omnis
      latitude: sequi
      longitude: consectetur
      logo: sed
      sitting_capacity: 20
      paypal_email: brown.kaia@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/dashboard
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: rerum
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      restaurant: rerum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurants/{restaurant_uuid}/reviews'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Restaurant Reviews'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/restaurant/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: aspernatur
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: unde
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: linnie.johnson@example.com
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: totam
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: beatae
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: false
        example: null
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: null
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: false
        example: null
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: false
        example: null
        type: string
        custom: []
      place_id:
        name: place_id
        description: ''
        required: true
        example: aut
        type: string
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: praesentium
        type: string
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: tenetur
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: true
        example: mollitia
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      sitting_capacity:
        name: sitting_capacity
        description: ''
        required: true
        example: 14
        type: integer
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: garrick.christiansen@example.org
        type: string
        custom: []
    cleanBodyParameters:
      name: aspernatur
      name_short: unde
      email: linnie.johnson@example.com
      about: totam
      about_short: beatae
      place_id: aut
      latitude: praesentium
      longitude: tenetur
      logo: mollitia
      sitting_capacity: 14
      paypal_email: garrick.christiansen@example.org
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/restaurant/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: veritatis
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: quo
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: berneice.schmidt@example.org
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: eius
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: maiores
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: true
        example: non
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: iste
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: true
        example: id
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: null
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: dolorem
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: sapiente
        type: string
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: zohara@example.net
        type: string
        custom: []
    cleanBodyParameters:
      name: veritatis
      name_short: quo
      email: berneice.schmidt@example.org
      about: eius
      about_short: maiores
      phone_no: non
      address: iste
      state: consequatur
      postal_code: id
      latitude: dolorem
      longitude: sapiente
      paypal_email: zohara@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/restaurant/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/restaurants/export/data
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/restaurants/{restaurant_uuid}/update'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: impedit
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: quia
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: juana07@example.org
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: quia
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: vitae
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: true
        example: ducimus
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: ut
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: quam
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: true
        example: eos
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: null
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: quam
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: hic
        type: string
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: lonzo08@example.net
        type: string
        custom: []
    cleanBodyParameters:
      name: impedit
      name_short: quia
      email: juana07@example.org
      about: quia
      about_short: vitae
      phone_no: ducimus
      address: ut
      state: quam
      postal_code: eos
      latitude: quam
      longitude: hic
      paypal_email: lonzo08@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/riders/{id}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the rider.'
        required: true
        example: quia
        type: string
        custom: []
    cleanUrlParameters:
      id: quia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/payments
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/payments/export/data
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/reservations
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/tables
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/tables'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/{restaurant_uuid}/tables/add'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a new table for the specified restaurant'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: est
        type: string
        custom: []
      seating_area_id:
        name: seating_area_id
        description: ''
        required: true
        example: necessitatibus
        type: string
        custom: []
      seat_number:
        name: seat_number
        description: ''
        required: true
        example: enim
        type: string
        custom: []
    cleanBodyParameters:
      name: est
      seating_area_id: necessitatibus
      seat_number: enim
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/{restaurant}/tables/{id}/update'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a table'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant:
        name: restaurant
        description: 'The restaurant.'
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      id:
        name: id
        description: 'The id of the category'
        required: false
        example: odio
        type: string
        custom: []
      uuid:
        name: uuid
        description: 'The uuid of the restaurant'
        required: false
        example: fa09ed55-f1c6-325c-a7d4-ed79542768f1
        type: string
        custom: []
    cleanUrlParameters:
      restaurant: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      id: odio
      uuid: fa09ed55-f1c6-325c-a7d4-ed79542768f1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: culpa
        type: string
        custom: []
      seating_area_id:
        name: seating_area_id
        description: ''
        required: true
        example: quis
        type: string
        custom: []
      seat_number:
        name: seat_number
        description: ''
        required: true
        example: hic
        type: string
        custom: []
    cleanBodyParameters:
      name: culpa
      seating_area_id: quis
      seat_number: hic
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/payments'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/sitting-areas'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Restaurant Available Seating Areas'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: aperiam
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      restaurant: aperiam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/reservations'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/orders'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/menu'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/{restaurant}/categories'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Categories added by the restaurant'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant:
        name: restaurant
        description: 'The restaurant.'
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      id:
        name: id
        description: 'The ID or the UUID of the restaurant'
        required: false
        example: beatae
        type: string
        custom: []
    cleanUrlParameters:
      restaurant: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      id: beatae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/{restaurant_uuid}/categories/add'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a new category for the specified restaurant'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: laboriosam
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: ut
        type: string
        custom: []
    cleanBodyParameters:
      title: laboriosam
      description: ut
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/{restaurant}/categories/{id}/update'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant:
        name: restaurant
        description: 'The restaurant.'
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      id:
        name: id
        description: 'The id of the category'
        required: false
        example: velit
        type: string
        custom: []
      uuid:
        name: uuid
        description: 'The uuid of the restaurant'
        required: false
        example: 09d61805-d7e2-36df-99ff-fc356ee8ecdf
        type: string
        custom: []
    cleanUrlParameters:
      restaurant: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      id: velit
      uuid: 09d61805-d7e2-36df-99ff-fc356ee8ecdf
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: officia
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
    cleanBodyParameters:
      title: officia
      description: voluptatem
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/employees
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/employees/{restaurant_uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/employees/{restaurant_uuid}/add'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: laboriosam
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: sequi
        type: string
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: et
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: quis
        type: string
        custom: []
      avatar:
        name: avatar
        description: 'Must not be greater than 9000 characters.'
        required: false
        example: lfwomaisejqn
        type: string
        custom: []
    cleanBodyParameters:
      first_name: laboriosam
      last_name: sequi
      email: et
      phone_number: quis
      avatar: lfwomaisejqn
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/employees/{user_uuid}/update'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_uuid:
        name: user_uuid
        description: ''
        required: true
        example: 5cd491f9-f272-431f-9427-7f93575e3a70
        type: string
        custom: []
    cleanUrlParameters:
      user_uuid: 5cd491f9-f272-431f-9427-7f93575e3a70
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: commodi
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: qui
        type: string
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: sint
        type: string
        custom: []
      avatar:
        name: avatar
        description: 'Must not be greater than 9000 characters.'
        required: false
        example: gsqupimmymoxvpqx
        type: string
        custom: []
      suspend:
        name: suspend
        description: 'Must be one of <code>1</code> or <code>2</code>.'
        required: true
        example: '2'
        type: string
        custom: []
    cleanBodyParameters:
      first_name: commodi
      last_name: qui
      email: voluptatem
      phone_number: sint
      avatar: gsqupimmymoxvpqx
      suspend: '2'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
