## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Restaurant Management'
description: |-

  Restaurant API resource
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","attributes":{"name":"Price-Okuneva","nameShort":"et","email":"stephany76@example.com","about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","aboutShort":"Nihil voluptas ut ut nulla nihil consectetur.","phoneNo":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postalCode":"00100","latitude":"51.5072178","longitude":"-0.1275862","mapLocation":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","average_rating":4},"relationships":{"questionnaire":{"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurantId":1,"delivery":1,"booking":0},"orders_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":1,"menus_count":9,"questionnaire":{"id":1,"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurant_id":1,"delivery":1,"booking":0,"status":2,"created_by":"jacobi.domingo@gmail.com","updated_by":"dmonahan@rempel.com","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-17T16:34:45.000000Z"},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"menus_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":1,"menus_count":9,"questionnaire":{"id":1,"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurant_id":1,"delivery":1,"booking":0,"status":2,"created_by":"jacobi.domingo@gmail.com","updated_by":"dmonahan@rempel.com","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-17T16:34:45.000000Z"},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}]}}],"links":{"first":"http:\/\/moboeats.test\/api\/v1\/restaurants?page=1","last":"http:\/\/moboeats.test\/api\/v1\/restaurants?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/moboeats.test\/api\/v1\/restaurants?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/moboeats.test\/api\/v1\/restaurants","per_page":15,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '296'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurants/{restaurant_uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: sit
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      restaurant: sit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","attributes":{"name":"Price-Okuneva","nameShort":"et","email":"stephany76@example.com","about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","aboutShort":"Nihil voluptas ut ut nulla nihil consectetur.","phoneNo":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postalCode":"00100","latitude":"51.5072178","longitude":"-0.1275862","mapLocation":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","average_rating":4},"relationships":{"operating_hours":[{"id":30,"restaurant_id":1,"day":"Monday","opening_time":"20:46","closing_time":"03:03","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":31,"restaurant_id":1,"day":"Tuesday","opening_time":"04:19","closing_time":"06:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":32,"restaurant_id":1,"day":"Wednesday","opening_time":"10:58","closing_time":"19:00","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":33,"restaurant_id":1,"day":"Thursday","opening_time":"22:55","closing_time":"02:54","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":34,"restaurant_id":1,"day":"Friday","opening_time":"06:32","closing_time":"17:54","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":35,"restaurant_id":1,"day":"Saturday","opening_time":"06:38","closing_time":"19:58","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":36,"restaurant_id":1,"day":"Sunday","opening_time":"09:07","closing_time":"19:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"}],"orders_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":1,"menus_count":9,"operating_hours":[{"id":30,"restaurant_id":1,"day":"Monday","opening_time":"20:46","closing_time":"03:03","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":31,"restaurant_id":1,"day":"Tuesday","opening_time":"04:19","closing_time":"06:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":32,"restaurant_id":1,"day":"Wednesday","opening_time":"10:58","closing_time":"19:00","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":33,"restaurant_id":1,"day":"Thursday","opening_time":"22:55","closing_time":"02:54","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":34,"restaurant_id":1,"day":"Friday","opening_time":"06:32","closing_time":"17:54","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":35,"restaurant_id":1,"day":"Saturday","opening_time":"06:38","closing_time":"19:58","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":36,"restaurant_id":1,"day":"Sunday","opening_time":"09:07","closing_time":"19:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"}],"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"menus_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":1,"menus_count":9,"operating_hours":[{"id":30,"restaurant_id":1,"day":"Monday","opening_time":"20:46","closing_time":"03:03","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":31,"restaurant_id":1,"day":"Tuesday","opening_time":"04:19","closing_time":"06:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":32,"restaurant_id":1,"day":"Wednesday","opening_time":"10:58","closing_time":"19:00","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":33,"restaurant_id":1,"day":"Thursday","opening_time":"22:55","closing_time":"02:54","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":34,"restaurant_id":1,"day":"Friday","opening_time":"06:32","closing_time":"17:54","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":35,"restaurant_id":1,"day":"Saturday","opening_time":"06:38","closing_time":"19:58","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":36,"restaurant_id":1,"day":"Sunday","opening_time":"09:07","closing_time":"19:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"}],"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}]}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '295'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/seating-areas
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/orderer/orderer-restaurants/rated
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Rated and Reviewed Restaurants.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/orderer/orderer-restaurants/{restaurant_uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: consequatur
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      restaurant: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/orderer/orderer-restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/orderer/orderer-restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: dolorem
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: dolores
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: camron.collier@example.net
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: provident
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: veniam
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: false
        example: null
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: null
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: false
        example: null
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: false
        example: null
        type: string
        custom: []
      place_id:
        name: place_id
        description: ''
        required: true
        example: accusantium
        type: string
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: sint
        type: string
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: consequuntur
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: true
        example: est
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      sitting_capacity:
        name: sitting_capacity
        description: ''
        required: true
        example: 18
        type: integer
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: diamond69@example.com
        type: string
        custom: []
    cleanBodyParameters:
      name: dolorem
      name_short: dolores
      email: camron.collier@example.net
      about: provident
      about_short: veniam
      place_id: accusantium
      latitude: sint
      longitude: consequuntur
      logo: est
      sitting_capacity: 18
      paypal_email: diamond69@example.com
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/orderer/orderer-restaurants/{id}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer restaurant.'
        required: true
        example: labore
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: voluptatum
        type: string
        custom: []
    cleanUrlParameters:
      id: labore
      restaurant: voluptatum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/orderer/orderer-restaurants/{id}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer restaurant.'
        required: true
        example: quo
        type: string
        custom: []
    cleanUrlParameters:
      id: quo
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: libero
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: quia
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: skonopelski@example.net
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: eum
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: facere
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: true
        example: ex
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: cumque
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: true
        example: recusandae
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: null
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: velit
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: error
        type: string
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: rosalia37@example.org
        type: string
        custom: []
    cleanBodyParameters:
      name: libero
      name_short: quia
      email: skonopelski@example.net
      about: eum
      about_short: facere
      phone_no: ex
      address: consequatur
      state: cumque
      postal_code: recusandae
      latitude: velit
      longitude: error
      paypal_email: rosalia37@example.org
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/orderer/orderer-restaurants/{id}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer restaurant.'
        required: true
        example: dicta
        type: string
        custom: []
    cleanUrlParameters:
      id: dicta
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/orderer/orderer-restaurants/{restaurant_uuid}/tables'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/orderer/restaurant/reviews/store
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Store review for a restaurant'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      restaurant_id:
        name: restaurant_id
        description: 'The id of the restaurant'
        required: false
        example: 11
        type: integer
        custom: []
      rating:
        name: rating
        description: 'The rating from 1 - 5'
        required: false
        example: 13
        type: integer
        custom: []
      review:
        name: review
        description: 'A review of the restaurant'
        required: false
        example: quia
        type: string
        custom: []
    cleanBodyParameters:
      restaurant_id: 11
      rating: 13
      review: quia
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/rider/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/rider/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: molestiae
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: quo
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: trey17@example.com
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: aspernatur
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: voluptas
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: false
        example: null
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: null
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: false
        example: null
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: false
        example: null
        type: string
        custom: []
      place_id:
        name: place_id
        description: ''
        required: true
        example: et
        type: string
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: voluptas
        type: string
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: quaerat
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: true
        example: officia
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      sitting_capacity:
        name: sitting_capacity
        description: ''
        required: true
        example: 19
        type: integer
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: heathcote.brandy@example.org
        type: string
        custom: []
    cleanBodyParameters:
      name: molestiae
      name_short: quo
      email: trey17@example.com
      about: aspernatur
      about_short: voluptas
      place_id: et
      latitude: voluptas
      longitude: quaerat
      logo: officia
      sitting_capacity: 19
      paypal_email: heathcote.brandy@example.org
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/rider/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: ea
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      restaurant: ea
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/rider/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: nesciunt
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: jewell.hermann@example.com
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: mollitia
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: doloremque
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: true
        example: debitis
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: quo
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: est
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: true
        example: deserunt
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: null
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: et
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: omnis
        type: string
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: tabitha.conn@example.net
        type: string
        custom: []
    cleanBodyParameters:
      name: nesciunt
      name_short: voluptatem
      email: jewell.hermann@example.com
      about: mollitia
      about_short: doloremque
      phone_no: debitis
      address: quo
      state: est
      postal_code: deserunt
      latitude: et
      longitude: omnis
      paypal_email: tabitha.conn@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/rider/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/restaurant/restaurant
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: tempora
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: rem
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: jamal63@example.net
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: at
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: et
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: false
        example: null
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: null
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: false
        example: null
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: false
        example: null
        type: string
        custom: []
      place_id:
        name: place_id
        description: ''
        required: true
        example: harum
        type: string
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: at
        type: string
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: quas
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: true
        example: ad
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      sitting_capacity:
        name: sitting_capacity
        description: ''
        required: true
        example: 18
        type: integer
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: dovie11@example.net
        type: string
        custom: []
    cleanBodyParameters:
      name: tempora
      name_short: rem
      email: jamal63@example.net
      about: at
      about_short: et
      place_id: harum
      latitude: at
      longitude: quas
      logo: ad
      sitting_capacity: 18
      paypal_email: dovie11@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/dashboard
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: et
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      restaurant: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurants/{restaurant_uuid}/reviews'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Restaurant Reviews'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/restaurant/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: reprehenderit
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: reiciendis
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: dwill@example.com
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: eum
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: voluptatibus
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: false
        example: null
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: null
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: false
        example: null
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: false
        example: null
        type: string
        custom: []
      place_id:
        name: place_id
        description: ''
        required: true
        example: nam
        type: string
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: quasi
        type: string
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: vel
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: true
        example: est
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      sitting_capacity:
        name: sitting_capacity
        description: ''
        required: true
        example: 5
        type: integer
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: jacynthe35@example.org
        type: string
        custom: []
    cleanBodyParameters:
      name: reprehenderit
      name_short: reiciendis
      email: dwill@example.com
      about: eum
      about_short: voluptatibus
      place_id: nam
      latitude: quasi
      longitude: vel
      logo: est
      sitting_capacity: 5
      paypal_email: jacynthe35@example.org
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/restaurant/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: et
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: quis
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: maida.simonis@example.com
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: corrupti
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: id
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: true
        example: aperiam
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: expedita
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: debitis
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: true
        example: sequi
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: null
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: qui
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: doloremque
        type: string
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: bogan.desmond@example.org
        type: string
        custom: []
    cleanBodyParameters:
      name: et
      name_short: quis
      email: maida.simonis@example.com
      about: corrupti
      about_short: id
      phone_no: aperiam
      address: expedita
      state: debitis
      postal_code: sequi
      latitude: qui
      longitude: doloremque
      paypal_email: bogan.desmond@example.org
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/restaurant/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/restaurants/export/data
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/restaurants/{restaurant_uuid}/update'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: cumque
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: ullam
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: norn@example.net
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: eum
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: temporibus
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: true
        example: nam
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: blanditiis
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: eius
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: true
        example: temporibus
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: null
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: consequuntur
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: ipsa
        type: string
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: noble50@example.net
        type: string
        custom: []
    cleanBodyParameters:
      name: cumque
      name_short: ullam
      email: norn@example.net
      about: eum
      about_short: temporibus
      phone_no: nam
      address: blanditiis
      state: eius
      postal_code: temporibus
      latitude: consequuntur
      longitude: ipsa
      paypal_email: noble50@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/riders/{id}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the rider.'
        required: true
        example: libero
        type: string
        custom: []
    cleanUrlParameters:
      id: libero
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/payments
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/payments/export/data
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/reservations
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/tables
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/tables'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/{restaurant_uuid}/tables/add'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a new table for the specified restaurant'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: ratione
        type: string
        custom: []
      seating_area_id:
        name: seating_area_id
        description: ''
        required: true
        example: perferendis
        type: string
        custom: []
      seat_number:
        name: seat_number
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
    cleanBodyParameters:
      name: ratione
      seating_area_id: perferendis
      seat_number: voluptatem
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/{restaurant}/tables/{id}/update'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a table'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant:
        name: restaurant
        description: 'The restaurant.'
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      id:
        name: id
        description: 'The id of the category'
        required: false
        example: voluptate
        type: string
        custom: []
      uuid:
        name: uuid
        description: 'The uuid of the restaurant'
        required: false
        example: 9b1dad77-d330-3f16-b058-6dadd19c1cb6
        type: string
        custom: []
    cleanUrlParameters:
      restaurant: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      id: voluptate
      uuid: 9b1dad77-d330-3f16-b058-6dadd19c1cb6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: est
        type: string
        custom: []
      seating_area_id:
        name: seating_area_id
        description: ''
        required: true
        example: natus
        type: string
        custom: []
      seat_number:
        name: seat_number
        description: ''
        required: true
        example: vitae
        type: string
        custom: []
    cleanBodyParameters:
      name: est
      seating_area_id: natus
      seat_number: vitae
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/payments'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/sitting-areas'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Restaurant Available Seating Areas'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: commodi
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      restaurant: commodi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/reservations'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/orders'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/menu'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/{restaurant}/categories'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Categories added by the restaurant'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant:
        name: restaurant
        description: 'The restaurant.'
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      id:
        name: id
        description: 'The ID or the UUID of the restaurant'
        required: false
        example: omnis
        type: string
        custom: []
    cleanUrlParameters:
      restaurant: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      id: omnis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/{restaurant_uuid}/categories/add'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a new category for the specified restaurant'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: nulla
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: enim
        type: string
        custom: []
    cleanBodyParameters:
      title: nulla
      description: enim
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/{restaurant}/categories/{id}/update'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant:
        name: restaurant
        description: 'The restaurant.'
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      id:
        name: id
        description: 'The id of the category'
        required: false
        example: et
        type: string
        custom: []
      uuid:
        name: uuid
        description: 'The uuid of the restaurant'
        required: false
        example: 24a3402f-1ae7-3032-8bb1-8bbbab7e88e5
        type: string
        custom: []
    cleanUrlParameters:
      restaurant: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      id: et
      uuid: 24a3402f-1ae7-3032-8bb1-8bbbab7e88e5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: quod
        type: string
        custom: []
    cleanBodyParameters:
      title: consequatur
      description: quod
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/employees
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/employees/{restaurant_uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/employees/{restaurant_uuid}/add'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: eos
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: beatae
        type: string
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: atque
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: sunt
        type: string
        custom: []
      avatar:
        name: avatar
        description: 'Must not be greater than 9000 characters.'
        required: false
        example: yhaopds
        type: string
        custom: []
    cleanBodyParameters:
      first_name: eos
      last_name: beatae
      email: atque
      phone_number: sunt
      avatar: yhaopds
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/employees/{user_uuid}/update'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_uuid:
        name: user_uuid
        description: ''
        required: true
        example: 5cd491f9-f272-431f-9427-7f93575e3a70
        type: string
        custom: []
    cleanUrlParameters:
      user_uuid: 5cd491f9-f272-431f-9427-7f93575e3a70
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: nihil
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: occaecati
        type: string
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: error
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: sunt
        type: string
        custom: []
      avatar:
        name: avatar
        description: 'Must not be greater than 9000 characters.'
        required: false
        example: h
        type: string
        custom: []
      suspend:
        name: suspend
        description: 'Must be one of <code>1</code> or <code>2</code>.'
        required: true
        example: '1'
        type: string
        custom: []
    cleanBodyParameters:
      first_name: nihil
      last_name: occaecati
      email: error
      phone_number: sunt
      avatar: h
      suspend: '1'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
