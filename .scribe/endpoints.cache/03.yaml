## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Restaurant Management'
description: |-

  Restaurant API resource
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","attributes":{"name":"Price-Okuneva","nameShort":"et","email":"stephany76@example.com","about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","aboutShort":"Nihil voluptas ut ut nulla nihil consectetur.","phoneNo":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postalCode":"00100","latitude":"51.5072178","longitude":"-0.1275862","mapLocation":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","average_rating":4,"is_open":false},"relationships":{"questionnaire":{"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurantId":1,"delivery":1,"booking":0},"orders_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":5,"menus_count":9,"questionnaire":{"id":1,"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurant_id":1,"delivery":1,"booking":0,"status":2,"created_by":"jacobi.domingo@gmail.com","updated_by":"dmonahan@rempel.com","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-17T16:34:45.000000Z"},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"menus_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":5,"menus_count":9,"questionnaire":{"id":1,"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurant_id":1,"delivery":1,"booking":0,"status":2,"created_by":"jacobi.domingo@gmail.com","updated_by":"dmonahan@rempel.com","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-17T16:34:45.000000Z"},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}]}}],"links":{"first":"http:\/\/moboeats.test\/api\/v1\/restaurants?page=1","last":"http:\/\/moboeats.test\/api\/v1\/restaurants?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/moboeats.test\/api\/v1\/restaurants?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/moboeats.test\/api\/v1\/restaurants","per_page":15,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '296'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurants/{restaurant_uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: iure
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      restaurant: iure
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","attributes":{"name":"Price-Okuneva","nameShort":"et","email":"stephany76@example.com","about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","aboutShort":"Nihil voluptas ut ut nulla nihil consectetur.","phoneNo":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postalCode":"00100","latitude":"51.5072178","longitude":"-0.1275862","mapLocation":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","average_rating":4,"is_open":false},"relationships":{"operating_hours":[{"id":30,"restaurant_id":1,"day":"Monday","opening_time":"20:46","closing_time":"03:03","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":31,"restaurant_id":1,"day":"Tuesday","opening_time":"04:19","closing_time":"06:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":32,"restaurant_id":1,"day":"Wednesday","opening_time":"10:58","closing_time":"19:00","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":33,"restaurant_id":1,"day":"Thursday","opening_time":"22:55","closing_time":"02:54","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":34,"restaurant_id":1,"day":"Friday","opening_time":"06:32","closing_time":"19:20","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":35,"restaurant_id":1,"day":"Saturday","opening_time":"06:38","closing_time":"19:58","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":36,"restaurant_id":1,"day":"Sunday","opening_time":"09:07","closing_time":"19:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"}],"orders_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":5,"menus_count":9,"operating_hours":[{"id":30,"restaurant_id":1,"day":"Monday","opening_time":"20:46","closing_time":"03:03","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":31,"restaurant_id":1,"day":"Tuesday","opening_time":"04:19","closing_time":"06:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":32,"restaurant_id":1,"day":"Wednesday","opening_time":"10:58","closing_time":"19:00","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":33,"restaurant_id":1,"day":"Thursday","opening_time":"22:55","closing_time":"02:54","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":34,"restaurant_id":1,"day":"Friday","opening_time":"06:32","closing_time":"19:20","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":35,"restaurant_id":1,"day":"Saturday","opening_time":"06:38","closing_time":"19:58","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":36,"restaurant_id":1,"day":"Sunday","opening_time":"09:07","closing_time":"19:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"}],"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"menus_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":5,"menus_count":9,"operating_hours":[{"id":30,"restaurant_id":1,"day":"Monday","opening_time":"20:46","closing_time":"03:03","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":31,"restaurant_id":1,"day":"Tuesday","opening_time":"04:19","closing_time":"06:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":32,"restaurant_id":1,"day":"Wednesday","opening_time":"10:58","closing_time":"19:00","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":33,"restaurant_id":1,"day":"Thursday","opening_time":"22:55","closing_time":"02:54","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":34,"restaurant_id":1,"day":"Friday","opening_time":"06:32","closing_time":"19:20","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":35,"restaurant_id":1,"day":"Saturday","opening_time":"06:38","closing_time":"19:58","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":36,"restaurant_id":1,"day":"Sunday","opening_time":"09:07","closing_time":"19:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"}],"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}]}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '295'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/seating-areas
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/orderer/orderer-restaurants/rated
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Rated and Reviewed Restaurants.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/rated?page=1","last":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/rated?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/rated?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/rated","per_page":15,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '284'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/orderer/orderer-restaurants/{restaurant_uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: voluptates
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      restaurant: voluptates
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","attributes":{"name":"Price-Okuneva","nameShort":"et","email":"stephany76@example.com","about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","aboutShort":"Nihil voluptas ut ut nulla nihil consectetur.","phoneNo":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postalCode":"00100","latitude":"51.5072178","longitude":"-0.1275862","mapLocation":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","average_rating":4,"is_open":false},"relationships":{"operating_hours":[{"id":30,"restaurant_id":1,"day":"Monday","opening_time":"20:46","closing_time":"03:03","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":31,"restaurant_id":1,"day":"Tuesday","opening_time":"04:19","closing_time":"06:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":32,"restaurant_id":1,"day":"Wednesday","opening_time":"10:58","closing_time":"19:00","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":33,"restaurant_id":1,"day":"Thursday","opening_time":"22:55","closing_time":"02:54","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":34,"restaurant_id":1,"day":"Friday","opening_time":"06:32","closing_time":"19:20","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":35,"restaurant_id":1,"day":"Saturday","opening_time":"06:38","closing_time":"19:58","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":36,"restaurant_id":1,"day":"Sunday","opening_time":"09:07","closing_time":"19:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"}],"orders_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":5,"menus_count":9,"operating_hours":[{"id":30,"restaurant_id":1,"day":"Monday","opening_time":"20:46","closing_time":"03:03","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":31,"restaurant_id":1,"day":"Tuesday","opening_time":"04:19","closing_time":"06:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":32,"restaurant_id":1,"day":"Wednesday","opening_time":"10:58","closing_time":"19:00","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":33,"restaurant_id":1,"day":"Thursday","opening_time":"22:55","closing_time":"02:54","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":34,"restaurant_id":1,"day":"Friday","opening_time":"06:32","closing_time":"19:20","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":35,"restaurant_id":1,"day":"Saturday","opening_time":"06:38","closing_time":"19:58","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":36,"restaurant_id":1,"day":"Sunday","opening_time":"09:07","closing_time":"19:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"}],"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"menus_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":5,"menus_count":9,"operating_hours":[{"id":30,"restaurant_id":1,"day":"Monday","opening_time":"20:46","closing_time":"03:03","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":31,"restaurant_id":1,"day":"Tuesday","opening_time":"04:19","closing_time":"06:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":32,"restaurant_id":1,"day":"Wednesday","opening_time":"10:58","closing_time":"19:00","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":33,"restaurant_id":1,"day":"Thursday","opening_time":"22:55","closing_time":"02:54","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":34,"restaurant_id":1,"day":"Friday","opening_time":"06:32","closing_time":"19:20","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":35,"restaurant_id":1,"day":"Saturday","opening_time":"06:38","closing_time":"19:58","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"},{"id":36,"restaurant_id":1,"day":"Sunday","opening_time":"09:07","closing_time":"19:43","created_at":"2024-03-02T09:07:40.000000Z","updated_at":"2024-03-02T09:07:40.000000Z"}],"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}]}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '283'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/orderer/orderer-grocery-shops
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Grocery SHops'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","attributes":{"name":"Price-Okuneva","nameShort":"et","email":"stephany76@example.com","about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","aboutShort":"Nihil voluptas ut ut nulla nihil consectetur.","phoneNo":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postalCode":"00100","latitude":"51.5072178","longitude":"-0.1275862","mapLocation":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","average_rating":4,"is_open":false},"relationships":{"questionnaire":{"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurantId":1,"delivery":1,"booking":0},"orders_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":5,"menus_count":9,"questionnaire":{"id":1,"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurant_id":1,"delivery":1,"booking":0,"status":2,"created_by":"jacobi.domingo@gmail.com","updated_by":"dmonahan@rempel.com","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-17T16:34:45.000000Z"},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"menus_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":5,"menus_count":9,"questionnaire":{"id":1,"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurant_id":1,"delivery":1,"booking":0,"status":2,"created_by":"jacobi.domingo@gmail.com","updated_by":"dmonahan@rempel.com","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-17T16:34:45.000000Z"},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}]}}],"links":{"first":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-grocery-shops?page=1","last":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-grocery-shops?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-grocery-shops?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-grocery-shops","per_page":15,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '281'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/orderer/orderer-restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","attributes":{"name":"Price-Okuneva","nameShort":"et","email":"stephany76@example.com","about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","aboutShort":"Nihil voluptas ut ut nulla nihil consectetur.","phoneNo":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postalCode":"00100","latitude":"51.5072178","longitude":"-0.1275862","mapLocation":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","average_rating":4,"is_open":false},"relationships":{"questionnaire":{"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurantId":1,"delivery":1,"booking":0},"orders_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":5,"menus_count":9,"questionnaire":{"id":1,"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurant_id":1,"delivery":1,"booking":0,"status":2,"created_by":"jacobi.domingo@gmail.com","updated_by":"dmonahan@rempel.com","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-17T16:34:45.000000Z"},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"menus_count":{"id":1,"uuid":"4a9e2363-67d1-4661-84e4-e3f4815ef30b","name":"Price-Okuneva","name_short":"et","email":"stephany76@example.com","user_id":3,"about":"Sit dignissimos repellendus dolorem dolorum tempora. Sunt eos eum quia vitae nostrum.\r\n\r\nAdipisci ad veritatis quae atque autem. Blanditiis quo qui enim amet numquam. Et aut magnam tenetur sed.\r\n\r\nQuasi iure ut et sed optio laudantium praesentium. Velit unde ipsam eos aut praesentium repellat dignissimos. Ea assumenda alias autem autem et ipsa. Ipsa natus atque dicta velit fugit. Deleniti ut iste eos minima.","about_short":"Nihil voluptas ut ut nulla nihil consectetur.","phone_no":"413.890.1105","address":"London, UK","city":"North Hanshaven","state":"NAIROBI","postal_code":"00100","latitude":"51.5072178","longitude":"-0.1275862","map_location":"https:\/\/maps.google.com\/?q=London,+UK&ftid=0x47d8a00baf21de75:0x52963a5addd52a99","url":"https:\/\/lehner.com\/minima-est-cumque-ad-et-et-deleniti-alias.html","logo":"http:\/\/moboeats.test\/storage\/companyLogos\/logos\/ATsTWQbflrWy3wLCnxSm6PE4wE2bA0xFXbIPk13e.png","status":"Approved","created_by":"dale14@erdman.com","updated_by":null,"created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-25T07:27:08.000000Z","sitting_capacity":null,"denied_reason":null,"service_charge_agreement":null,"groceries_service_charge_agreement":0,"paypal_email":"milimokings@gmail.com","orders_count":5,"menus_count":9,"questionnaire":{"id":1,"uuid":"43313783-ba7e-4ca3-b240-01ff23fc11b4","restaurant_id":1,"delivery":1,"booking":0,"status":2,"created_by":"jacobi.domingo@gmail.com","updated_by":"dmonahan@rempel.com","created_at":"2024-02-17T16:34:45.000000Z","updated_at":"2024-02-17T16:34:45.000000Z"},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}],"restaurant_tables":[]},"reviews":[{"id":1,"user_id":2,"order_id":null,"reviewable_id":1,"reviewable_type":"App\\Models\\Restaurant","rating":4,"review":null,"created_at":"2024-02-27T18:25:16.000000Z","updated_at":"2024-02-27T18:25:16.000000Z"}]}}],"links":{"first":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants?page=1","last":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants","per_page":15,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '280'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/orderer/orderer-restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: cumque
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: eum
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: alberto.rempel@example.net
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: rerum
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: alias
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: false
        example: null
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: null
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: false
        example: null
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: false
        example: null
        type: string
        custom: []
      place_id:
        name: place_id
        description: ''
        required: true
        example: vel
        type: string
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: omnis
        type: string
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: assumenda
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: true
        example: aut
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      sitting_capacity:
        name: sitting_capacity
        description: ''
        required: true
        example: 19
        type: integer
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: alvera.conroy@example.com
        type: string
        custom: []
    cleanBodyParameters:
      name: cumque
      name_short: eum
      email: alberto.rempel@example.net
      about: rerum
      about_short: alias
      place_id: vel
      latitude: omnis
      longitude: assumenda
      logo: aut
      sitting_capacity: 19
      paypal_email: alvera.conroy@example.com
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/orderer/orderer-restaurants/{id}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer restaurant.'
        required: true
        example: a
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: sint
        type: string
        custom: []
    cleanUrlParameters:
      id: a
      restaurant: sint
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"status":"Error has occured...","message":"Restaurant record not found.","data":"Restaurant Not Found"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '279'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/orderer/orderer-restaurants/{id}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer restaurant.'
        required: true
        example: beatae
        type: string
        custom: []
    cleanUrlParameters:
      id: beatae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: vel
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: facere
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: holly.hansen@example.org
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: cumque
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: labore
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: true
        example: mollitia
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: reiciendis
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: ex
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: true
        example: sed
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: null
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: nihil
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: sequi
        type: string
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: jstoltenberg@example.net
        type: string
        custom: []
    cleanBodyParameters:
      name: vel
      name_short: facere
      email: holly.hansen@example.org
      about: cumque
      about_short: labore
      phone_no: mollitia
      address: reiciendis
      state: ex
      postal_code: sed
      latitude: nihil
      longitude: sequi
      paypal_email: jstoltenberg@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/orderer/orderer-restaurants/{id}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer restaurant.'
        required: true
        example: dicta
        type: string
        custom: []
    cleanUrlParameters:
      id: dicta
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/orderer/orderer-restaurants/{restaurant_uuid}/tables'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"Request was succesful","message":null,"data":{"current_page":1,"data":[],"first_page_url":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/4a9e2363-67d1-4661-84e4-e3f4815ef30b\/tables?page=1","from":null,"last_page":1,"last_page_url":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/4a9e2363-67d1-4661-84e4-e3f4815ef30b\/tables?page=1","links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/4a9e2363-67d1-4661-84e4-e3f4815ef30b\/tables?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"next_page_url":null,"path":"http:\/\/moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/4a9e2363-67d1-4661-84e4-e3f4815ef30b\/tables","per_page":10,"prev_page_url":null,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '272'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/orderer/restaurant/reviews/store
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Store review for a restaurant'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      restaurant_id:
        name: restaurant_id
        description: 'The id of the restaurant'
        required: false
        example: 12
        type: integer
        custom: []
      rating:
        name: rating
        description: 'The rating from 1 - 5'
        required: false
        example: 9
        type: integer
        custom: []
      review:
        name: review
        description: 'A review of the restaurant'
        required: false
        example: alias
        type: string
        custom: []
    cleanBodyParameters:
      restaurant_id: 12
      rating: 9
      review: alias
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/rider/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/rider/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: nihil
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: quo
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: ofarrell@example.org
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: sed
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: odio
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: false
        example: null
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: null
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: false
        example: null
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: false
        example: null
        type: string
        custom: []
      place_id:
        name: place_id
        description: ''
        required: true
        example: sunt
        type: string
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: cum
        type: string
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: eos
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: true
        example: nam
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      sitting_capacity:
        name: sitting_capacity
        description: ''
        required: true
        example: 3
        type: integer
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: svolkman@example.net
        type: string
        custom: []
    cleanBodyParameters:
      name: nihil
      name_short: quo
      email: ofarrell@example.org
      about: sed
      about_short: odio
      place_id: sunt
      latitude: cum
      longitude: eos
      logo: nam
      sitting_capacity: 3
      paypal_email: svolkman@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/rider/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: id
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      restaurant: id
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/rider/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: reprehenderit
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: et
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: harmon73@example.net
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: repellat
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: minima
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: true
        example: omnis
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: architecto
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: omnis
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: true
        example: aspernatur
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: null
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: consequatur
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: rerum
        type: string
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: willms.earlene@example.org
        type: string
        custom: []
    cleanBodyParameters:
      name: reprehenderit
      name_short: et
      email: harmon73@example.net
      about: repellat
      about_short: minima
      phone_no: omnis
      address: architecto
      state: omnis
      postal_code: aspernatur
      latitude: consequatur
      longitude: rerum
      paypal_email: willms.earlene@example.org
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/rider/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/restaurant/restaurant
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: non
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: amet
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: muriel25@example.org
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: nihil
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: sit
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: false
        example: null
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: null
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: false
        example: null
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: false
        example: null
        type: string
        custom: []
      place_id:
        name: place_id
        description: ''
        required: true
        example: aut
        type: string
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: eum
        type: string
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: dignissimos
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: true
        example: quibusdam
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      sitting_capacity:
        name: sitting_capacity
        description: ''
        required: true
        example: 17
        type: integer
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: kendall79@example.net
        type: string
        custom: []
    cleanBodyParameters:
      name: non
      name_short: amet
      email: muriel25@example.org
      about: nihil
      about_short: sit
      place_id: aut
      latitude: eum
      longitude: dignissimos
      logo: quibusdam
      sitting_capacity: 17
      paypal_email: kendall79@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/dashboard
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: et
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      restaurant: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurants/{restaurant_uuid}/reviews'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Restaurant Reviews'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/restaurant/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: molestias
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: ducimus
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: jast.madisyn@example.net
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: quam
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: reiciendis
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: false
        example: null
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: null
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: false
        example: null
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: false
        example: null
        type: string
        custom: []
      place_id:
        name: place_id
        description: ''
        required: true
        example: qui
        type: string
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: sint
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: true
        example: fugiat
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      sitting_capacity:
        name: sitting_capacity
        description: ''
        required: true
        example: 14
        type: integer
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: griffin.wuckert@example.com
        type: string
        custom: []
    cleanBodyParameters:
      name: molestias
      name_short: ducimus
      email: jast.madisyn@example.net
      about: quam
      about_short: reiciendis
      place_id: qui
      latitude: consequatur
      longitude: sint
      logo: fugiat
      sitting_capacity: 14
      paypal_email: griffin.wuckert@example.com
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/restaurant/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: est
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: aut
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: paucek.rusty@example.net
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: quia
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: illum
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: true
        example: quis
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: qui
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: et
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: true
        example: rerum
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: null
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: vel
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: fuga
        type: string
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: assunta56@example.com
        type: string
        custom: []
    cleanBodyParameters:
      name: est
      name_short: aut
      email: paucek.rusty@example.net
      about: quia
      about_short: illum
      phone_no: quis
      address: qui
      state: et
      postal_code: rerum
      latitude: vel
      longitude: fuga
      paypal_email: assunta56@example.com
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/restaurant/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/restaurants/export/data
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/restaurants/{restaurant_uuid}/update'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: id
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: deserunt
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: franz.rath@example.net
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: consequuntur
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: fugit
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: true
        example: eius
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: qui
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: praesentium
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: true
        example: ea
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: null
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: ut
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: nesciunt
        type: string
        custom: []
      paypal_email:
        name: paypal_email
        description: 'Must be a valid email address.'
        required: true
        example: casimer07@example.com
        type: string
        custom: []
    cleanBodyParameters:
      name: id
      name_short: deserunt
      email: franz.rath@example.net
      about: consequuntur
      about_short: fugit
      phone_no: eius
      address: qui
      state: praesentium
      postal_code: ea
      latitude: ut
      longitude: nesciunt
      paypal_email: casimer07@example.com
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/riders/{id}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the rider.'
        required: true
        example: saepe
        type: string
        custom: []
    cleanUrlParameters:
      id: saepe
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/payments
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/payments/export/data
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/reservations
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/tables
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/tables'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/{restaurant_uuid}/tables/add'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a new table for the specified restaurant'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: temporibus
        type: string
        custom: []
      seating_area_id:
        name: seating_area_id
        description: ''
        required: true
        example: est
        type: string
        custom: []
      seat_number:
        name: seat_number
        description: ''
        required: true
        example: est
        type: string
        custom: []
    cleanBodyParameters:
      name: temporibus
      seating_area_id: est
      seat_number: est
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/{restaurant}/tables/{id}/update'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a table'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant:
        name: restaurant
        description: 'The restaurant.'
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      id:
        name: id
        description: 'The id of the category'
        required: false
        example: quia
        type: string
        custom: []
      uuid:
        name: uuid
        description: 'The uuid of the restaurant'
        required: false
        example: f103e3f7-e30b-3a39-8e5c-cc882f67e9cf
        type: string
        custom: []
    cleanUrlParameters:
      restaurant: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      id: quia
      uuid: f103e3f7-e30b-3a39-8e5c-cc882f67e9cf
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: et
        type: string
        custom: []
      seating_area_id:
        name: seating_area_id
        description: ''
        required: true
        example: beatae
        type: string
        custom: []
      seat_number:
        name: seat_number
        description: ''
        required: true
        example: ea
        type: string
        custom: []
    cleanBodyParameters:
      name: et
      seating_area_id: beatae
      seat_number: ea
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/payments'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/sitting-areas'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Restaurant Available Seating Areas'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: aut
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      restaurant: aut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/reservations'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/orders'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/menu'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/{restaurant}/categories'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Categories added by the restaurant'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant:
        name: restaurant
        description: 'The restaurant.'
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      id:
        name: id
        description: 'The ID or the UUID of the restaurant'
        required: false
        example: quia
        type: string
        custom: []
    cleanUrlParameters:
      restaurant: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      id: quia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/{restaurant_uuid}/categories/add'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a new category for the specified restaurant'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: sint
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: itaque
        type: string
        custom: []
    cleanBodyParameters:
      title: sint
      description: itaque
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/{restaurant}/categories/{id}/update'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant:
        name: restaurant
        description: 'The restaurant.'
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
      id:
        name: id
        description: 'The id of the category'
        required: false
        example: nihil
        type: string
        custom: []
      uuid:
        name: uuid
        description: 'The uuid of the restaurant'
        required: false
        example: 606a10d8-0d18-3e35-8ad5-c0aef8cab7dd
        type: string
        custom: []
    cleanUrlParameters:
      restaurant: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
      id: nihil
      uuid: 606a10d8-0d18-3e35-8ad5-c0aef8cab7dd
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: provident
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: fugiat
        type: string
        custom: []
    cleanBodyParameters:
      title: provident
      description: fugiat
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/employees
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/employees/{restaurant_uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/employees/{restaurant_uuid}/add'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: 4a9e2363-67d1-4661-84e4-e3f4815ef30b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: quis
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: modi
        type: string
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: vel
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: quo
        type: string
        custom: []
      avatar:
        name: avatar
        description: 'Must not be greater than 9000 characters.'
        required: false
        example: tjswar
        type: string
        custom: []
    cleanBodyParameters:
      first_name: quis
      last_name: modi
      email: vel
      phone_number: quo
      avatar: tjswar
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/employees/{user_uuid}/update'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_uuid:
        name: user_uuid
        description: ''
        required: true
        example: 5cd491f9-f272-431f-9427-7f93575e3a70
        type: string
        custom: []
    cleanUrlParameters:
      user_uuid: 5cd491f9-f272-431f-9427-7f93575e3a70
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: aut
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: quia
        type: string
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: optio
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: iste
        type: string
        custom: []
      avatar:
        name: avatar
        description: 'Must not be greater than 9000 characters.'
        required: false
        example: xndzkhsxxogn
        type: string
        custom: []
      suspend:
        name: suspend
        description: 'Must be one of <code>1</code> or <code>2</code>.'
        required: true
        example: '1'
        type: string
        custom: []
    cleanBodyParameters:
      first_name: aut
      last_name: quia
      email: optio
      phone_number: iste
      avatar: xndzkhsxxogn
      suspend: '1'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
